# text = components of machine learning: binding bits and flops many machine learning problems and methods are combinations of three components: data, hypothesis space and loss function.
# sent_id = 0
1	components	component	NOUN	NNS	Number=Plur	0	_	_	start_char=0|end_char=10
2	of	of	ADP	IN	_	1	_	_	start_char=11|end_char=13
3	machine	machine	NOUN	NN	Number=Sing	2	_	_	start_char=14|end_char=21
4	learning	learning	NOUN	NN	Number=Sing	3	_	_	SpaceAfter=No|start_char=22|end_char=30
5	:	:	PUNCT	:	_	4	_	_	start_char=30|end_char=31
6	binding	binding	NOUN	NN	Number=Sing	5	_	_	start_char=32|end_char=39
7	bits	bit	NOUN	NNS	Number=Plur	6	_	_	start_char=40|end_char=44
8	and	and	CCONJ	CC	_	7	_	_	start_char=45|end_char=48
9	flops	flop	NOUN	NNS	Number=Plur	8	_	_	start_char=49|end_char=54
10	many	many	ADJ	JJ	Degree=Pos	9	_	_	start_char=55|end_char=59
11	machine	machine	NOUN	NN	Number=Sing	10	_	_	start_char=60|end_char=67
12	learning	learning	NOUN	NN	Number=Sing	11	_	_	start_char=68|end_char=76
13	problems	problem	NOUN	NNS	Number=Plur	12	_	_	start_char=77|end_char=85
14	and	and	CCONJ	CC	_	13	_	_	start_char=86|end_char=89
15	methods	method	NOUN	NNS	Number=Plur	14	_	_	start_char=90|end_char=97
16	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	15	_	_	start_char=98|end_char=101
17	combinations	combination	NOUN	NNS	Number=Plur	16	_	_	start_char=102|end_char=114
18	of	of	ADP	IN	_	17	_	_	start_char=115|end_char=117
19	three	three	NUM	CD	NumForm=Word|NumType=Card	18	_	_	start_char=118|end_char=123
20	components	component	NOUN	NNS	Number=Plur	19	_	_	SpaceAfter=No|start_char=124|end_char=134
21	:	:	PUNCT	:	_	20	_	_	start_char=134|end_char=135
22	data	datum	NOUN	NNS	Number=Plur	21	_	_	SpaceAfter=No|start_char=136|end_char=140
23	,	,	PUNCT	,	_	22	_	_	start_char=140|end_char=141
24	hypothesis	hypothesis	NOUN	NN	Number=Sing	23	_	_	start_char=142|end_char=152
25	space	space	NOUN	NN	Number=Sing	24	_	_	start_char=153|end_char=158
26	and	and	CCONJ	CC	_	25	_	_	start_char=159|end_char=162
27	loss	loss	NOUN	NN	Number=Sing	26	_	_	start_char=163|end_char=167
28	function	function	NOUN	NN	Number=Sing	27	_	_	SpaceAfter=No|start_char=168|end_char=176
29	.	.	PUNCT	.	_	28	_	_	start_char=176|end_char=177

# text = different machine learning methods are obtained as combinations of different choices for the representation of data, hypothesis space and loss function.
# sent_id = 1
1	different	different	ADJ	JJ	Degree=Pos	0	_	_	start_char=178|end_char=187
2	machine	machine	NOUN	NN	Number=Sing	1	_	_	start_char=188|end_char=195
3	learning	learning	NOUN	NN	Number=Sing	2	_	_	start_char=196|end_char=204
4	methods	method	NOUN	NNS	Number=Plur	3	_	_	start_char=205|end_char=212
5	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	4	_	_	start_char=213|end_char=216
6	obtained	obtain	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	5	_	_	start_char=217|end_char=225
7	as	as	ADP	IN	_	6	_	_	start_char=226|end_char=228
8	combinations	combination	NOUN	NNS	Number=Plur	7	_	_	start_char=229|end_char=241
9	of	of	ADP	IN	_	8	_	_	start_char=242|end_char=244
10	different	different	ADJ	JJ	Degree=Pos	9	_	_	start_char=245|end_char=254
11	choices	choice	NOUN	NNS	Number=Plur	10	_	_	start_char=255|end_char=262
12	for	for	ADP	IN	_	11	_	_	start_char=263|end_char=266
13	the	the	DET	DT	Definite=Def|PronType=Art	12	_	_	start_char=267|end_char=270
14	representation	representation	NOUN	NN	Number=Sing	13	_	_	start_char=271|end_char=285
15	of	of	ADP	IN	_	14	_	_	start_char=286|end_char=288
16	data	datum	NOUN	NNS	Number=Plur	15	_	_	SpaceAfter=No|start_char=289|end_char=293
17	,	,	PUNCT	,	_	16	_	_	start_char=293|end_char=294
18	hypothesis	hypothesis	NOUN	NN	Number=Sing	17	_	_	start_char=295|end_char=305
19	space	space	NOUN	NN	Number=Sing	18	_	_	start_char=306|end_char=311
20	and	and	CCONJ	CC	_	19	_	_	start_char=312|end_char=315
21	loss	loss	NOUN	NN	Number=Sing	20	_	_	start_char=316|end_char=320
22	function	function	NOUN	NN	Number=Sing	21	_	_	SpaceAfter=No|start_char=321|end_char=329
23	.	.	PUNCT	.	_	22	_	_	start_char=329|end_char=330

# text = after reviewing the mathematical structure of these three components, we discuss intrinsic trade-offs between statistical and computational properties of machine learning methods.
# sent_id = 2
1	after	after	SCONJ	IN	_	0	_	_	start_char=331|end_char=336
2	reviewing	review	VERB	VBG	Tense=Pres|VerbForm=Part	1	_	_	start_char=337|end_char=346
3	the	the	DET	DT	Definite=Def|PronType=Art	2	_	_	start_char=347|end_char=350
4	mathematical	mathematical	ADJ	JJ	Degree=Pos	3	_	_	start_char=351|end_char=363
5	structure	structure	NOUN	NN	Number=Sing	4	_	_	start_char=364|end_char=373
6	of	of	ADP	IN	_	5	_	_	start_char=374|end_char=376
7	these	this	DET	DT	Number=Plur|PronType=Dem	6	_	_	start_char=377|end_char=382
8	three	three	NUM	CD	NumForm=Word|NumType=Card	7	_	_	start_char=383|end_char=388
9	components	component	NOUN	NNS	Number=Plur	8	_	_	SpaceAfter=No|start_char=389|end_char=399
10	,	,	PUNCT	,	_	9	_	_	start_char=399|end_char=400
11	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	10	_	_	start_char=401|end_char=403
12	discuss	discuss	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	11	_	_	start_char=404|end_char=411
13	intrinsic	intrinsic	ADJ	JJ	Degree=Pos	12	_	_	start_char=412|end_char=421
14	trade	trade	NOUN	NN	Number=Sing	13	_	_	SpaceAfter=No|start_char=422|end_char=427
15	-	-	PUNCT	HYPH	_	14	_	_	SpaceAfter=No|start_char=427|end_char=428
16	offs	off	NOUN	NNS	Number=Plur	15	_	_	start_char=428|end_char=432
17	between	between	ADP	IN	_	16	_	_	start_char=433|end_char=440
18	statistical	statistical	ADJ	JJ	Degree=Pos	17	_	_	start_char=441|end_char=452
19	and	and	CCONJ	CC	_	18	_	_	start_char=453|end_char=456
20	computational	computational	ADJ	JJ	Degree=Pos	19	_	_	start_char=457|end_char=470
21	properties	property	NOUN	NNS	Number=Plur	20	_	_	start_char=471|end_char=481
22	of	of	ADP	IN	_	21	_	_	start_char=482|end_char=484
23	machine	machine	NOUN	NN	Number=Sing	22	_	_	start_char=485|end_char=492
24	learning	learning	NOUN	NN	Number=Sing	23	_	_	start_char=493|end_char=501
25	methods	method	NOUN	NNS	Number=Plur	24	_	_	SpaceAfter=No|start_char=502|end_char=509
26	.	.	PUNCT	.	_	25	_	_	start_char=509|end_char=510

# text = i. introduction machine learning (ml) methods implement the scientific principle of continuous verification and adaptation of a hypothesis about an observable phenomenon ("observable fact or event") [1] . examples of a phenomena are: • the visual scene recorded by the smartphone snapshot depicted in figure 2 . • the hiking time required to reach the peak in figure 2 . • the water temperature of the lake in figure 2 . the verification and adaption of the hypothesis is based on the observation of data.
# sent_id = 3
1	i.	i.	X	LS	_	0	_	_	start_char=511|end_char=513
2	introduction	introduction	NOUN	NN	Number=Sing	1	_	_	start_char=514|end_char=526
3	machine	machine	NOUN	NN	Number=Sing	2	_	_	start_char=527|end_char=534
4	learning	learning	NOUN	NN	Number=Sing	3	_	_	start_char=535|end_char=543
5	(	(	PUNCT	-LRB-	_	4	_	_	SpaceAfter=No|start_char=544|end_char=545
6	ml	millileter	NOUN	NN	Number=Sing	5	_	_	SpaceAfter=No|start_char=545|end_char=547
7	)	)	PUNCT	-RRB-	_	6	_	_	start_char=547|end_char=548
8	methods	method	NOUN	NNS	Number=Plur	7	_	_	start_char=549|end_char=556
9	implement	implement	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	8	_	_	start_char=557|end_char=566
10	the	the	DET	DT	Definite=Def|PronType=Art	9	_	_	start_char=567|end_char=570
11	scientific	scientific	ADJ	JJ	Degree=Pos	10	_	_	start_char=571|end_char=581
12	principle	principle	NOUN	NN	Number=Sing	11	_	_	start_char=582|end_char=591
13	of	of	ADP	IN	_	12	_	_	start_char=592|end_char=594
14	continuous	continuous	ADJ	JJ	Degree=Pos	13	_	_	start_char=595|end_char=605
15	verification	verification	NOUN	NN	Number=Sing	14	_	_	start_char=606|end_char=618
16	and	and	CCONJ	CC	_	15	_	_	start_char=619|end_char=622
17	adaptation	adaptation	NOUN	NN	Number=Sing	16	_	_	start_char=623|end_char=633
18	of	of	ADP	IN	_	17	_	_	start_char=634|end_char=636
19	a	a	DET	DT	Definite=Ind|PronType=Art	18	_	_	start_char=637|end_char=638
20	hypothesis	hypothesis	NOUN	NN	Number=Sing	19	_	_	start_char=639|end_char=649
21	about	about	ADP	IN	_	20	_	_	start_char=650|end_char=655
22	an	a	DET	DT	Definite=Ind|PronType=Art	21	_	_	start_char=656|end_char=658
23	observable	observable	ADJ	JJ	Degree=Pos	22	_	_	start_char=659|end_char=669
24	phenomenon	phenomenon	NOUN	NN	Number=Sing	23	_	_	start_char=670|end_char=680
25	(	(	PUNCT	-LRB-	_	24	_	_	SpaceAfter=No|start_char=681|end_char=682
26	"	"	PUNCT	``	_	25	_	_	SpaceAfter=No|start_char=682|end_char=683
27	observable	observable	ADJ	JJ	Degree=Pos	26	_	_	start_char=683|end_char=693
28	fact	fact	NOUN	NN	Number=Sing	27	_	_	start_char=694|end_char=698
29	or	or	CCONJ	CC	_	28	_	_	start_char=699|end_char=701
30	event	event	NOUN	NN	Number=Sing	29	_	_	SpaceAfter=No|start_char=702|end_char=707
31	"	"	PUNCT	''	_	30	_	_	SpaceAfter=No|start_char=707|end_char=708
32	)	)	PUNCT	-RRB-	_	31	_	_	start_char=708|end_char=709
33	[	[	PUNCT	-LRB-	_	32	_	_	SpaceAfter=No|start_char=710|end_char=711
34	1	1	NUM	CD	NumForm=Digit|NumType=Card	33	_	_	SpaceAfter=No|start_char=711|end_char=712
35	]	]	PUNCT	-RRB-	_	34	_	_	start_char=712|end_char=713
36	.	.	PUNCT	.	_	35	_	_	start_char=714|end_char=715
37	examples	example	NOUN	NNS	Number=Plur	36	_	_	start_char=716|end_char=724
38	of	of	ADP	IN	_	37	_	_	start_char=725|end_char=727
39	a	a	DET	DT	Definite=Ind|PronType=Art	38	_	_	start_char=728|end_char=729
40	phenomena	phenomenon	NOUN	NN	Number=Plur	39	_	_	start_char=730|end_char=739
41	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	40	_	_	SpaceAfter=No|start_char=740|end_char=743
42	:	:	PUNCT	:	_	41	_	_	start_char=743|end_char=744
43	•	•	PUNCT	NFP	_	42	_	_	start_char=745|end_char=746
44	the	the	DET	DT	Definite=Def|PronType=Art	43	_	_	start_char=747|end_char=750
45	visual	visual	ADJ	JJ	Degree=Pos	44	_	_	start_char=751|end_char=757
46	scene	scene	NOUN	NN	Number=Sing	45	_	_	start_char=758|end_char=763
47	recorded	record	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	46	_	_	start_char=764|end_char=772
48	by	by	ADP	IN	_	47	_	_	start_char=773|end_char=775
49	the	the	DET	DT	Definite=Def|PronType=Art	48	_	_	start_char=776|end_char=779
50	smartphone	smartphone	NOUN	NN	Number=Sing	49	_	_	start_char=780|end_char=790
51	snapshot	snapshot	NOUN	NN	Number=Sing	50	_	_	start_char=791|end_char=799
52	depicted	depict	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	51	_	_	start_char=800|end_char=808
53	in	in	ADP	IN	_	52	_	_	start_char=809|end_char=811
54	figure	Figure	PROPN	NNP	Number=Sing	53	_	_	start_char=812|end_char=818
55	2	2	NUM	CD	NumForm=Digit|NumType=Card	54	_	_	start_char=819|end_char=820
56	.	.	PUNCT	.	_	55	_	_	start_char=821|end_char=822
57	•	•	PUNCT	NFP	_	56	_	_	start_char=823|end_char=824
58	the	the	DET	DT	Definite=Def|PronType=Art	57	_	_	start_char=825|end_char=828
59	hiking	hiking	NOUN	NN	Number=Sing	58	_	_	start_char=829|end_char=835
60	time	time	NOUN	NN	Number=Sing	59	_	_	start_char=836|end_char=840
61	required	require	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	60	_	_	start_char=841|end_char=849
62	to	to	PART	TO	_	61	_	_	start_char=850|end_char=852
63	reach	reach	VERB	VB	VerbForm=Inf	62	_	_	start_char=853|end_char=858
64	the	the	DET	DT	Definite=Def|PronType=Art	63	_	_	start_char=859|end_char=862
65	peak	peak	NOUN	NN	Number=Sing	64	_	_	start_char=863|end_char=867
66	in	in	ADP	IN	_	65	_	_	start_char=868|end_char=870
67	figure	Figure	PROPN	NNP	Number=Sing	66	_	_	start_char=871|end_char=877
68	2	2	NUM	CD	NumForm=Digit|NumType=Card	67	_	_	start_char=878|end_char=879
69	.	.	PUNCT	.	_	68	_	_	start_char=880|end_char=881
70	•	•	PUNCT	NFP	_	69	_	_	start_char=882|end_char=883
71	the	the	DET	DT	Definite=Def|PronType=Art	70	_	_	start_char=884|end_char=887
72	water	water	NOUN	NN	Number=Sing	71	_	_	start_char=888|end_char=893
73	temperature	temperature	NOUN	NN	Number=Sing	72	_	_	start_char=894|end_char=905
74	of	of	ADP	IN	_	73	_	_	start_char=906|end_char=908
75	the	the	DET	DT	Definite=Def|PronType=Art	74	_	_	start_char=909|end_char=912
76	lake	lake	NOUN	NN	Number=Sing	75	_	_	start_char=913|end_char=917
77	in	in	ADP	IN	_	76	_	_	start_char=918|end_char=920
78	figure	Figure	PROPN	NNP	Number=Sing	77	_	_	start_char=921|end_char=927
79	2	2	NUM	CD	NumForm=Digit|NumType=Card	78	_	_	start_char=928|end_char=929
80	.	.	PUNCT	.	_	79	_	_	start_char=930|end_char=931
81	the	the	DET	DT	Definite=Def|PronType=Art	80	_	_	start_char=932|end_char=935
82	verification	verification	NOUN	NN	Number=Sing	81	_	_	start_char=936|end_char=948
83	and	and	CCONJ	CC	_	82	_	_	start_char=949|end_char=952
84	adaption	adaption	NOUN	NN	Number=Sing	83	_	_	start_char=953|end_char=961
85	of	of	ADP	IN	_	84	_	_	start_char=962|end_char=964
86	the	the	DET	DT	Definite=Def|PronType=Art	85	_	_	start_char=965|end_char=968
87	hypothesis	hypothesis	NOUN	NN	Number=Sing	86	_	_	start_char=969|end_char=979
88	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	87	_	_	start_char=980|end_char=982
89	based	base	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	88	_	_	start_char=983|end_char=988
90	on	on	ADP	IN	_	89	_	_	start_char=989|end_char=991
91	the	the	DET	DT	Definite=Def|PronType=Art	90	_	_	start_char=992|end_char=995
92	observation	observation	NOUN	NN	Number=Sing	91	_	_	start_char=996|end_char=1007
93	of	of	ADP	IN	_	92	_	_	start_char=1008|end_char=1010
94	data	datum	NOUN	NNS	Number=Plur	93	_	_	SpaceAfter=No|start_char=1011|end_char=1015
95	.	.	PUNCT	.	_	94	_	_	start_char=1015|end_char=1016

# text = ml theory and methods revolve around the implementation of the cycle underlying this principle using limited computational resources such as computation time and storage capacity.
# sent_id = 4
1	ml	millileter	NOUN	NN	Number=Sing	0	_	_	start_char=1017|end_char=1019
2	theory	theory	NOUN	NN	Number=Sing	1	_	_	start_char=1020|end_char=1026
3	and	and	CCONJ	CC	_	2	_	_	start_char=1027|end_char=1030
4	methods	method	NOUN	NNS	Number=Plur	3	_	_	start_char=1031|end_char=1038
5	revolve	revolve	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	4	_	_	start_char=1039|end_char=1046
6	around	around	ADP	IN	_	5	_	_	start_char=1047|end_char=1053
7	the	the	DET	DT	Definite=Def|PronType=Art	6	_	_	start_char=1054|end_char=1057
8	implementation	implementation	NOUN	NN	Number=Sing	7	_	_	start_char=1058|end_char=1072
9	of	of	ADP	IN	_	8	_	_	start_char=1073|end_char=1075
10	the	the	DET	DT	Definite=Def|PronType=Art	9	_	_	start_char=1076|end_char=1079
11	cycle	cycle	NOUN	NN	Number=Sing	10	_	_	start_char=1080|end_char=1085
12	underlying	underlie	VERB	VBG	VerbForm=Ger	11	_	_	start_char=1086|end_char=1096
13	this	this	DET	DT	Number=Sing|PronType=Dem	12	_	_	start_char=1097|end_char=1101
14	principle	principle	NOUN	NN	Number=Sing	13	_	_	start_char=1102|end_char=1111
15	using	use	VERB	VBG	VerbForm=Ger	14	_	_	start_char=1112|end_char=1117
16	limited	limited	ADJ	JJ	Degree=Pos	15	_	_	start_char=1118|end_char=1125
17	computational	computational	ADJ	JJ	Degree=Pos	16	_	_	start_char=1126|end_char=1139
18	resources	resource	NOUN	NNS	Number=Plur	17	_	_	start_char=1140|end_char=1149
19	such	such	ADJ	JJ	ExtPos=ADP	18	_	_	start_char=1150|end_char=1154
20	as	as	ADP	IN	_	19	_	_	start_char=1155|end_char=1157
21	computation	computation	NOUN	NN	Number=Sing	20	_	_	start_char=1158|end_char=1169
22	time	time	NOUN	NN	Number=Sing	21	_	_	start_char=1170|end_char=1174
23	and	and	CCONJ	CC	_	22	_	_	start_char=1175|end_char=1178
24	storage	storage	NOUN	NN	Number=Sing	23	_	_	start_char=1179|end_char=1186
25	capacity	capacity	NOUN	NN	Number=Sing	24	_	_	SpaceAfter=No|start_char=1187|end_char=1195
26	.	.	PUNCT	.	_	25	_	_	start_char=1195|end_char=1196

# text = modern ml methods execute the cycle in figure 1 within a fraction of a second and using billions of data points [2] . deep learning methods implement the cycle of figure 1 by representing hypotheses by artificial neural networks whose weights (parameters) are continuously adapted using (variants of) gradient descent [2] . a typical ml method consists of three components: • data (mostly in the form of a huge number of bits) • a hypothesis space (also referred to as a ml model) consisting of computationally feasible predictor functions.
# sent_id = 5
1	modern	modern	ADJ	JJ	Degree=Pos	0	_	_	start_char=1197|end_char=1203
2	ml	millileter	NOUN	NN	Number=Sing	1	_	_	start_char=1204|end_char=1206
3	methods	method	NOUN	NNS	Number=Plur	2	_	_	start_char=1207|end_char=1214
4	execute	execute	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	3	_	_	start_char=1215|end_char=1222
5	the	the	DET	DT	Definite=Def|PronType=Art	4	_	_	start_char=1223|end_char=1226
6	cycle	cycle	NOUN	NN	Number=Sing	5	_	_	start_char=1227|end_char=1232
7	in	in	ADP	IN	_	6	_	_	start_char=1233|end_char=1235
8	figure	Figure	PROPN	NNP	Number=Sing	7	_	_	start_char=1236|end_char=1242
9	1	1	NUM	CD	NumForm=Digit|NumType=Card	8	_	_	start_char=1243|end_char=1244
10	within	within	ADP	IN	_	9	_	_	start_char=1245|end_char=1251
11	a	a	DET	DT	Definite=Ind|PronType=Art	10	_	_	start_char=1252|end_char=1253
12	fraction	fraction	NOUN	NN	Number=Sing	11	_	_	start_char=1254|end_char=1262
13	of	of	ADP	IN	_	12	_	_	start_char=1263|end_char=1265
14	a	a	DET	DT	Definite=Ind|PronType=Art	13	_	_	start_char=1266|end_char=1267
15	second	second	NOUN	NN	Number=Sing|NumForm=Word|NumType=Ord	14	_	_	start_char=1268|end_char=1274
16	and	and	CCONJ	CC	_	15	_	_	start_char=1275|end_char=1278
17	using	use	VERB	VBG	Tense=Pres|VerbForm=Part	16	_	_	start_char=1279|end_char=1284
18	billions	billion	NOUN	NNS	Number=Plur	17	_	_	start_char=1285|end_char=1293
19	of	of	ADP	IN	_	18	_	_	start_char=1294|end_char=1296
20	data	datum	NOUN	NN	Number=Plur	19	_	_	start_char=1297|end_char=1301
21	points	point	NOUN	NNS	Number=Plur	20	_	_	start_char=1302|end_char=1308
22	[	[	PUNCT	-LRB-	_	21	_	_	SpaceAfter=No|start_char=1309|end_char=1310
23	2	2	NUM	CD	NumForm=Digit|NumType=Card	22	_	_	SpaceAfter=No|start_char=1310|end_char=1311
24	]	]	PUNCT	-RRB-	_	23	_	_	start_char=1311|end_char=1312
25	.	.	PUNCT	.	_	24	_	_	start_char=1313|end_char=1314
26	deep	deep	ADJ	JJ	Degree=Pos	25	_	_	start_char=1315|end_char=1319
27	learning	learning	NOUN	NN	Number=Sing	26	_	_	start_char=1320|end_char=1328
28	methods	method	NOUN	NNS	Number=Plur	27	_	_	start_char=1329|end_char=1336
29	implement	implement	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	28	_	_	start_char=1337|end_char=1346
30	the	the	DET	DT	Definite=Def|PronType=Art	29	_	_	start_char=1347|end_char=1350
31	cycle	cycle	NOUN	NN	Number=Sing	30	_	_	start_char=1351|end_char=1356
32	of	of	ADP	IN	_	31	_	_	start_char=1357|end_char=1359
33	figure	figure	NOUN	NN	Number=Sing	32	_	_	start_char=1360|end_char=1366
34	1	1	NUM	CD	NumForm=Digit|NumType=Card	33	_	_	start_char=1367|end_char=1368
35	by	by	SCONJ	IN	_	34	_	_	start_char=1369|end_char=1371
36	representing	represent	VERB	VBG	Tense=Pres|VerbForm=Part	35	_	_	start_char=1372|end_char=1384
37	hypotheses	hypothese	NOUN	NNS	Number=Plur	36	_	_	start_char=1385|end_char=1395
38	by	by	ADP	IN	_	37	_	_	start_char=1396|end_char=1398
39	artificial	artificial	ADJ	JJ	Degree=Pos	38	_	_	start_char=1399|end_char=1409
40	neural	neural	ADJ	JJ	Degree=Pos	39	_	_	start_char=1410|end_char=1416
41	networks	network	NOUN	NNS	Number=Plur	40	_	_	start_char=1417|end_char=1425
42	whose	whose	PRON	WP$	Poss=Yes|PronType=Rel	41	_	_	start_char=1426|end_char=1431
43	weights	weight	NOUN	NNS	Number=Plur	42	_	_	start_char=1432|end_char=1439
44	(	(	PUNCT	-LRB-	_	43	_	_	SpaceAfter=No|start_char=1440|end_char=1441
45	parameters	parameter	NOUN	NNS	Number=Plur	44	_	_	SpaceAfter=No|start_char=1441|end_char=1451
46	)	)	PUNCT	-RRB-	_	45	_	_	start_char=1451|end_char=1452
47	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	46	_	_	start_char=1453|end_char=1456
48	continuously	continuously	ADV	RB	_	47	_	_	start_char=1457|end_char=1469
49	adapted	adapt	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	48	_	_	start_char=1470|end_char=1477
50	using	use	VERB	VBG	VerbForm=Part	49	_	_	start_char=1478|end_char=1483
51	(	(	PUNCT	-LRB-	_	50	_	_	SpaceAfter=No|start_char=1484|end_char=1485
52	variants	variant	NOUN	NNS	Number=Plur	51	_	_	start_char=1485|end_char=1493
53	of	of	ADP	IN	_	52	_	_	SpaceAfter=No|start_char=1494|end_char=1496
54	)	)	PUNCT	-RRB-	_	53	_	_	start_char=1496|end_char=1497
55	gradient	gradient	NOUN	NN	Number=Sing	54	_	_	start_char=1498|end_char=1506
56	descent	descent	NOUN	NN	Number=Sing	55	_	_	start_char=1507|end_char=1514
57	[	[	PUNCT	-LRB-	_	56	_	_	SpaceAfter=No|start_char=1515|end_char=1516
58	2	2	NUM	CD	NumForm=Digit|NumType=Card	57	_	_	SpaceAfter=No|start_char=1516|end_char=1517
59	]	]	PUNCT	-RRB-	_	58	_	_	start_char=1517|end_char=1518
60	.	.	PUNCT	.	_	59	_	_	start_char=1519|end_char=1520
61	a	a	DET	DT	Definite=Ind|PronType=Art	60	_	_	start_char=1521|end_char=1522
62	typical	typical	ADJ	JJ	Degree=Pos	61	_	_	start_char=1523|end_char=1530
63	ml	millileter	NOUN	NN	Number=Sing	62	_	_	start_char=1531|end_char=1533
64	method	method	NOUN	NN	Number=Sing	63	_	_	start_char=1534|end_char=1540
65	consists	consist	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	64	_	_	start_char=1541|end_char=1549
66	of	of	ADP	IN	_	65	_	_	start_char=1550|end_char=1552
67	three	three	NUM	CD	NumForm=Word|NumType=Card	66	_	_	start_char=1553|end_char=1558
68	components	component	NOUN	NNS	Number=Plur	67	_	_	SpaceAfter=No|start_char=1559|end_char=1569
69	:	:	PUNCT	:	_	68	_	_	start_char=1569|end_char=1570
70	•	•	SYM	SYM	_	69	_	_	start_char=1571|end_char=1572
71	data	datum	NOUN	NNS	Number=Plur	70	_	_	start_char=1573|end_char=1577
72	(	(	PUNCT	-LRB-	_	71	_	_	SpaceAfter=No|start_char=1578|end_char=1579
73	mostly	mostly	ADV	RB	_	72	_	_	start_char=1579|end_char=1585
74	in	in	ADP	IN	_	73	_	_	start_char=1586|end_char=1588
75	the	the	DET	DT	Definite=Def|PronType=Art	74	_	_	start_char=1589|end_char=1592
76	form	form	NOUN	NN	Number=Sing	75	_	_	start_char=1593|end_char=1597
77	of	of	ADP	IN	_	76	_	_	start_char=1598|end_char=1600
78	a	a	DET	DT	Definite=Ind|PronType=Art	77	_	_	start_char=1601|end_char=1602
79	huge	huge	ADJ	JJ	Degree=Pos	78	_	_	start_char=1603|end_char=1607
80	number	number	NOUN	NN	Number=Sing	79	_	_	start_char=1608|end_char=1614
81	of	of	ADP	IN	_	80	_	_	start_char=1615|end_char=1617
82	bits	bit	NOUN	NNS	Number=Plur	81	_	_	SpaceAfter=No|start_char=1618|end_char=1622
83	)	)	PUNCT	-RRB-	_	82	_	_	start_char=1622|end_char=1623
84	•	•	PUNCT	NFP	_	83	_	_	start_char=1624|end_char=1625
85	a	a	DET	DT	Definite=Ind|PronType=Art	84	_	_	start_char=1626|end_char=1627
86	hypothesis	hypothesis	NOUN	NN	Number=Sing	85	_	_	start_char=1628|end_char=1638
87	space	space	NOUN	NN	Number=Sing	86	_	_	start_char=1639|end_char=1644
88	(	(	PUNCT	-LRB-	_	87	_	_	SpaceAfter=No|start_char=1645|end_char=1646
89	also	also	ADV	RB	_	88	_	_	start_char=1646|end_char=1650
90	referred	refer	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	89	_	_	start_char=1651|end_char=1659
91	to	to	ADP	IN	_	90	_	_	start_char=1660|end_char=1662
92	as	as	ADP	IN	_	91	_	_	start_char=1663|end_char=1665
93	a	a	DET	DT	Definite=Ind|PronType=Art	92	_	_	start_char=1666|end_char=1667
94	ml	millileter	NOUN	NN	Number=Sing	93	_	_	start_char=1668|end_char=1670
95	model	model	NOUN	NN	Number=Sing	94	_	_	SpaceAfter=No|start_char=1671|end_char=1676
96	)	)	PUNCT	-RRB-	_	95	_	_	start_char=1676|end_char=1677
97	consisting	consist	VERB	VBG	VerbForm=Ger	96	_	_	start_char=1678|end_char=1688
98	of	of	ADP	IN	_	97	_	_	start_char=1689|end_char=1691
99	computationally	computationally	ADV	RB	_	98	_	_	start_char=1692|end_char=1707
100	feasible	feasible	ADJ	JJ	Degree=Pos	99	_	_	start_char=1708|end_char=1716
101	predictor	predictor	NOUN	NN	Number=Sing	100	_	_	start_char=1717|end_char=1726
102	functions	function	NOUN	NNS	Number=Plur	101	_	_	SpaceAfter=No|start_char=1727|end_char=1736
103	.	.	PUNCT	.	_	102	_	_	start_char=1736|end_char=1737

# text = • a loss function that is used to assess the quality of a particular predictor function.
# sent_id = 6
1	•	•	PUNCT	NFP	_	0	_	_	start_char=1738|end_char=1739
2	a	a	DET	DT	Definite=Ind|PronType=Art	1	_	_	start_char=1740|end_char=1741
3	loss	loss	NOUN	NN	Number=Sing	2	_	_	start_char=1742|end_char=1746
4	function	function	NOUN	NN	Number=Sing	3	_	_	start_char=1747|end_char=1755
5	that	that	PRON	WDT	PronType=Rel	4	_	_	start_char=1756|end_char=1760
6	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	_	_	start_char=1761|end_char=1763
7	used	use	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	6	_	_	start_char=1764|end_char=1768
8	to	to	PART	TO	_	7	_	_	start_char=1769|end_char=1771
9	assess	assess	VERB	VB	VerbForm=Inf	8	_	_	start_char=1772|end_char=1778
10	the	the	DET	DT	Definite=Def|PronType=Art	9	_	_	start_char=1779|end_char=1782
11	quality	quality	NOUN	NN	Number=Sing	10	_	_	start_char=1783|end_char=1790
12	of	of	ADP	IN	_	11	_	_	start_char=1791|end_char=1793
13	a	a	DET	DT	Definite=Ind|PronType=Art	12	_	_	start_char=1794|end_char=1795
14	particular	particular	ADJ	JJ	Degree=Pos	13	_	_	start_char=1796|end_char=1806
15	predictor	predictor	NOUN	NN	Number=Sing	14	_	_	start_char=1807|end_char=1816
16	function	function	NOUN	NN	Number=Sing	15	_	_	SpaceAfter=No|start_char=1817|end_char=1825
17	.	.	PUNCT	.	_	16	_	_	start_char=1825|end_char=1826

# text = to implement ml methods, given a limited amount of computational resources such as number of floating point operations per second (flops), we need to be able to efficiently store and manipulate data and predictor functions.
# sent_id = 7
1	to	to	PART	TO	_	0	_	_	start_char=1827|end_char=1829
2	implement	implement	VERB	VB	VerbForm=Inf	1	_	_	start_char=1830|end_char=1839
3	ml	millileter	NOUN	NN	Number=Sing	2	_	_	start_char=1840|end_char=1842
4	methods	method	NOUN	NNS	Number=Plur	3	_	_	SpaceAfter=No|start_char=1843|end_char=1850
5	,	,	PUNCT	,	_	4	_	_	start_char=1850|end_char=1851
6	given	give	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	5	_	_	start_char=1852|end_char=1857
7	a	a	DET	DT	Definite=Ind|PronType=Art	6	_	_	start_char=1858|end_char=1859
8	limited	limited	ADJ	JJ	Degree=Pos	7	_	_	start_char=1860|end_char=1867
9	amount	amount	NOUN	NN	Number=Sing	8	_	_	start_char=1868|end_char=1874
10	of	of	ADP	IN	_	9	_	_	start_char=1875|end_char=1877
11	computational	computational	ADJ	JJ	Degree=Pos	10	_	_	start_char=1878|end_char=1891
12	resources	resource	NOUN	NNS	Number=Plur	11	_	_	start_char=1892|end_char=1901
13	such	such	ADJ	JJ	ExtPos=ADP	12	_	_	start_char=1902|end_char=1906
14	as	as	ADP	IN	_	13	_	_	start_char=1907|end_char=1909
15	number	number	NOUN	NN	Number=Sing	14	_	_	start_char=1910|end_char=1916
16	of	of	ADP	IN	_	15	_	_	start_char=1917|end_char=1919
17	floating	float	VERB	VBG	VerbForm=Ger	16	_	_	start_char=1920|end_char=1928
18	point	point	NOUN	NN	Number=Sing	17	_	_	start_char=1929|end_char=1934
19	operations	operation	NOUN	NNS	Number=Plur	18	_	_	start_char=1935|end_char=1945
20	per	per	ADP	IN	_	19	_	_	start_char=1946|end_char=1949
21	second	second	NOUN	NN	Number=Sing|NumForm=Word	20	_	_	start_char=1950|end_char=1956
22	(	(	PUNCT	-LRB-	_	21	_	_	SpaceAfter=No|start_char=1957|end_char=1958
23	flops	flop	NOUN	NNS	Number=Plur	22	_	_	SpaceAfter=No|start_char=1958|end_char=1963
24	)	)	PUNCT	-RRB-	_	23	_	_	SpaceAfter=No|start_char=1963|end_char=1964
25	,	,	PUNCT	,	_	24	_	_	start_char=1964|end_char=1965
26	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	25	_	_	start_char=1966|end_char=1968
27	need	need	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	26	_	_	start_char=1969|end_char=1973
28	to	to	PART	TO	_	27	_	_	start_char=1974|end_char=1976
29	be	be	AUX	VB	VerbForm=Inf	28	_	_	start_char=1977|end_char=1979
30	able	able	ADJ	JJ	Degree=Pos	29	_	_	start_char=1980|end_char=1984
31	to	to	PART	TO	_	30	_	_	start_char=1985|end_char=1987
32	efficiently	efficiently	ADV	RB	_	31	_	_	start_char=1988|end_char=1999
33	store	store	VERB	VB	VerbForm=Inf	32	_	_	start_char=2000|end_char=2005
34	and	and	CCONJ	CC	_	33	_	_	start_char=2006|end_char=2009
35	manipulate	manipulate	VERB	VB	VerbForm=Inf	34	_	_	start_char=2010|end_char=2020
36	data	datum	NOUN	NNS	Number=Plur	35	_	_	start_char=2021|end_char=2025
37	and	and	CCONJ	CC	_	36	_	_	start_char=2026|end_char=2029
38	predictor	predictor	NOUN	NN	Number=Sing	37	_	_	start_char=2030|end_char=2039
39	functions	function	NOUN	NNS	Number=Plur	38	_	_	SpaceAfter=No|start_char=2040|end_char=2049
40	.	.	PUNCT	.	_	39	_	_	start_char=2049|end_char=2050

# text = one extremely efficient approach to represent and manipulate data and predictor functions are matrices and vectors.
# sent_id = 8
1	one	one	NUM	CD	NumForm=Word|NumType=Card	0	_	_	start_char=2051|end_char=2054
2	extremely	extremely	ADV	RB	_	1	_	_	start_char=2055|end_char=2064
3	efficient	efficient	ADJ	JJ	Degree=Pos	2	_	_	start_char=2065|end_char=2074
4	approach	approach	NOUN	NN	Number=Sing	3	_	_	start_char=2075|end_char=2083
5	to	to	PART	TO	_	4	_	_	start_char=2084|end_char=2086
6	represent	represent	VERB	VB	VerbForm=Inf	5	_	_	start_char=2087|end_char=2096
7	and	and	CCONJ	CC	_	6	_	_	start_char=2097|end_char=2100
8	manipulate	manipulate	VERB	VB	VerbForm=Inf	7	_	_	start_char=2101|end_char=2111
9	data	datum	NOUN	NNS	Number=Plur	8	_	_	start_char=2112|end_char=2116
10	and	and	CCONJ	CC	_	9	_	_	start_char=2117|end_char=2120
11	predictor	predictor	NOUN	NN	Number=Sing	10	_	_	start_char=2121|end_char=2130
12	functions	function	NOUN	NNS	Number=Plur	11	_	_	start_char=2131|end_char=2140
13	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	12	_	_	start_char=2141|end_char=2144
14	matrices	matrice	NOUN	NNS	Number=Plur	13	_	_	start_char=2145|end_char=2153
15	and	and	CCONJ	CC	_	14	_	_	start_char=2154|end_char=2157
16	vectors	vector	NOUN	NNS	Number=Plur	15	_	_	SpaceAfter=No|start_char=2158|end_char=2165
17	.	.	PUNCT	.	_	16	_	_	start_char=2165|end_char=2166

# text = the mathematical foundation of computing with matrices and vectors is linear algebra [3] . therefore, a large part of ml theory and methodology is applied numerical linear algebra.
# sent_id = 9
1	the	the	DET	DT	Definite=Def|PronType=Art	0	_	_	start_char=2167|end_char=2170
2	mathematical	mathematical	ADJ	JJ	Degree=Pos	1	_	_	start_char=2171|end_char=2183
3	foundation	foundation	NOUN	NN	Number=Sing	2	_	_	start_char=2184|end_char=2194
4	of	of	ADP	IN	_	3	_	_	start_char=2195|end_char=2197
5	computing	computing	NOUN	NN	Number=Sing	4	_	_	start_char=2198|end_char=2207
6	with	with	ADP	IN	_	5	_	_	start_char=2208|end_char=2212
7	matrices	matrice	NOUN	NNS	Number=Plur	6	_	_	start_char=2213|end_char=2221
8	and	and	CCONJ	CC	_	7	_	_	start_char=2222|end_char=2225
9	vectors	vector	NOUN	NNS	Number=Plur	8	_	_	start_char=2226|end_char=2233
10	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	_	_	start_char=2234|end_char=2236
11	linear	linear	ADJ	JJ	Degree=Pos	10	_	_	start_char=2237|end_char=2243
12	algebra	algebra	NOUN	NN	Number=Sing	11	_	_	start_char=2244|end_char=2251
13	[	[	PUNCT	-LRB-	_	12	_	_	SpaceAfter=No|start_char=2252|end_char=2253
14	3	3	NUM	CD	NumForm=Digit|NumType=Card	13	_	_	SpaceAfter=No|start_char=2253|end_char=2254
15	]	]	PUNCT	-RRB-	_	14	_	_	start_char=2254|end_char=2255
16	.	.	PUNCT	.	_	15	_	_	start_char=2256|end_char=2257
17	therefore	therefore	ADV	RB	_	16	_	_	SpaceAfter=No|start_char=2258|end_char=2267
18	,	,	PUNCT	,	_	17	_	_	start_char=2267|end_char=2268
19	a	a	DET	DT	Definite=Ind|PronType=Art	18	_	_	start_char=2269|end_char=2270
20	large	large	ADJ	JJ	Degree=Pos	19	_	_	start_char=2271|end_char=2276
21	part	part	NOUN	NN	Number=Sing	20	_	_	start_char=2277|end_char=2281
22	of	of	ADP	IN	_	21	_	_	start_char=2282|end_char=2284
23	ml	millileter	NOUN	NN	Number=Sing	22	_	_	start_char=2285|end_char=2287
24	theory	theory	NOUN	NN	Number=Sing	23	_	_	start_char=2288|end_char=2294
25	and	and	CCONJ	CC	_	24	_	_	start_char=2295|end_char=2298
26	methodology	methodology	NOUN	NN	Number=Sing	25	_	_	start_char=2299|end_char=2310
27	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	26	_	_	start_char=2311|end_char=2313
28	applied	apply	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	27	_	_	start_char=2314|end_char=2321
29	numerical	numerical	ADJ	JJ	Degree=Pos	28	_	_	start_char=2322|end_char=2331
30	linear	linear	ADJ	JJ	Degree=Pos	29	_	_	start_char=2332|end_char=2338
31	algebra	algebra	NOUN	NN	Number=Sing	30	_	_	SpaceAfter=No|start_char=2339|end_char=2346
32	.	.	PUNCT	.	_	31	_	_	start_char=2346|end_char=2347

# text = author is with the department of computer science, aalto university, finland; firstname.lastname(at)aalto.fi observations data hypothesis make prediction validate/adapt loss fig.
# sent_id = 10
1	author	author	NOUN	NN	Number=Sing	0	_	_	start_char=2348|end_char=2354
2	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	1	_	_	start_char=2355|end_char=2357
3	with	with	ADP	IN	_	2	_	_	start_char=2358|end_char=2362
4	the	the	DET	DT	Definite=Def|PronType=Art	3	_	_	start_char=2363|end_char=2366
5	department	department	NOUN	NN	Number=Sing	4	_	_	start_char=2367|end_char=2377
6	of	of	ADP	IN	_	5	_	_	start_char=2378|end_char=2380
7	computer	computer	NOUN	NN	Number=Sing	6	_	_	start_char=2381|end_char=2389
8	science	science	NOUN	NN	Number=Sing	7	_	_	SpaceAfter=No|start_char=2390|end_char=2397
9	,	,	PUNCT	,	_	8	_	_	start_char=2397|end_char=2398
10	aalto	aalto	NOUN	NN	Number=Sing	9	_	_	start_char=2399|end_char=2404
11	university	university	NOUN	NN	Number=Sing	10	_	_	SpaceAfter=No|start_char=2405|end_char=2415
12	,	,	PUNCT	,	_	11	_	_	start_char=2415|end_char=2416
13	finland	finland	PROPN	NNP	Number=Sing	12	_	_	SpaceAfter=No|start_char=2417|end_char=2424
14	;	;	PUNCT	:	_	13	_	_	start_char=2424|end_char=2425
15	firstname.lastname	firstname.lastname	PROPN	NNP	Number=Sing	14	_	_	SpaceAfter=No|start_char=2426|end_char=2444
16	(	(	PUNCT	-LRB-	_	15	_	_	SpaceAfter=No|start_char=2444|end_char=2445
17	at	at	ADP	IN	_	16	_	_	SpaceAfter=No|start_char=2445|end_char=2447
18	)	)	PUNCT	-RRB-	_	17	_	_	SpaceAfter=No|start_char=2447|end_char=2448
19	aalto.	aalto.	NOUN	NN	Number=Sing	18	_	_	SpaceAfter=No|start_char=2448|end_char=2454
20	fi	fi	NOUN	NN	Number=Sing	19	_	_	start_char=2454|end_char=2456
21	observations	observation	NOUN	NNS	Number=Plur	20	_	_	start_char=2457|end_char=2469
22	data	datum	NOUN	NN	Number=Sing	21	_	_	start_char=2470|end_char=2474
23	hypothesis	hypothesis	NOUN	NN	Number=Sing	22	_	_	start_char=2475|end_char=2485
24	make	make	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	23	_	_	start_char=2486|end_char=2490
25	prediction	prediction	NOUN	NN	Number=Sing	24	_	_	start_char=2491|end_char=2501
26	validate	validate	NOUN	NN	Number=Sing	25	_	_	SpaceAfter=No|start_char=2502|end_char=2510
27	/	/	SYM	,	_	26	_	_	SpaceAfter=No|start_char=2510|end_char=2511
28	adapt	adapt	VERB	VB	VerbForm=Inf	27	_	_	start_char=2511|end_char=2516
29	loss	loss	NOUN	NN	Number=Sing	28	_	_	start_char=2517|end_char=2521
30	fig	fig	NOUN	NN	Number=Sing	29	_	_	SpaceAfter=No|start_char=2522|end_char=2525
31	.	.	PUNCT	.	_	30	_	_	start_char=2525|end_char=2526

# text = 1 . the cycle of the scientific principle which is implemented by ml methods.
# sent_id = 11
1	1	1	NUM	LS	NumForm=Digit|NumType=Card	0	_	_	start_char=2527|end_char=2528
2	.	.	PUNCT	.	_	1	_	_	start_char=2529|end_char=2530
3	the	the	DET	DT	Definite=Def|PronType=Art	2	_	_	start_char=2531|end_char=2534
4	cycle	cycle	NOUN	NN	Number=Sing	3	_	_	start_char=2535|end_char=2540
5	of	of	ADP	IN	_	4	_	_	start_char=2541|end_char=2543
6	the	the	DET	DT	Definite=Def|PronType=Art	5	_	_	start_char=2544|end_char=2547
7	scientific	scientific	ADJ	JJ	Degree=Pos	6	_	_	start_char=2548|end_char=2558
8	principle	principle	NOUN	NN	Number=Sing	7	_	_	start_char=2559|end_char=2568
9	which	which	PRON	WDT	PronType=Rel	8	_	_	start_char=2569|end_char=2574
10	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	_	_	start_char=2575|end_char=2577
11	implemented	implement	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	10	_	_	start_char=2578|end_char=2589
12	by	by	ADP	IN	_	11	_	_	start_char=2590|end_char=2592
13	ml	millileter	NOUN	NN	Number=Sing	12	_	_	start_char=2593|end_char=2595
14	methods	method	NOUN	NNS	Number=Plur	13	_	_	SpaceAfter=No|start_char=2596|end_char=2603
15	.	.	PUNCT	.	_	14	_	_	start_char=2603|end_char=2604

# text = main components of ml methods are data, a hypothesis space and a loss function.
# sent_id = 12
1	main	main	ADJ	JJ	Degree=Pos	0	_	_	start_char=2605|end_char=2609
2	components	component	NOUN	NNS	Number=Plur	1	_	_	start_char=2610|end_char=2620
3	of	of	ADP	IN	_	2	_	_	start_char=2621|end_char=2623
4	ml	millileter	NOUN	NN	Number=Sing	3	_	_	start_char=2624|end_char=2626
5	methods	method	NOUN	NNS	Number=Plur	4	_	_	start_char=2627|end_char=2634
6	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	_	_	start_char=2635|end_char=2638
7	data	datum	NOUN	NNS	Number=Plur	6	_	_	SpaceAfter=No|start_char=2639|end_char=2643
8	,	,	PUNCT	,	_	7	_	_	start_char=2643|end_char=2644
9	a	a	DET	DT	Definite=Ind|PronType=Art	8	_	_	start_char=2645|end_char=2646
10	hypothesis	hypothesis	NOUN	NN	Number=Sing	9	_	_	start_char=2647|end_char=2657
11	space	space	NOUN	NN	Number=Sing	10	_	_	start_char=2658|end_char=2663
12	and	and	CCONJ	CC	_	11	_	_	start_char=2664|end_char=2667
13	a	a	DET	DT	Definite=Ind|PronType=Art	12	_	_	start_char=2668|end_char=2669
14	loss	loss	NOUN	NN	Number=Sing	13	_	_	start_char=2670|end_char=2674
15	function	function	NOUN	NN	Number=Sing	14	_	_	SpaceAfter=No|start_char=2675|end_char=2683
16	.	.	PUNCT	.	_	15	_	_	start_char=2683|end_char=2684

# text = indeed, data points can often characterized by a list of numeric attributes x r which can be stacked into a vector foot_0 x = x 1 , . . . , x n t . moreover, many ml methods (such as linear regression or logistic regression) use predictor functions of the form h(x) = n r=1 w r x r = w t x with some weight vector w = (w 1 , . . . , w n ) t . note that once we restrict ourselves to linear functions of the form h(x) = w t x, we can represent a predictor function by the weight vector w. indeed, given the weight vector w, we can evaluate the predictor function for any feature vector x as h(x) = w t x.
# sent_id = 13
1	indeed	indeed	ADV	RB	_	0	_	_	SpaceAfter=No|start_char=2685|end_char=2691
2	,	,	PUNCT	,	_	1	_	_	start_char=2691|end_char=2692
3	data	datum	NOUN	NN	Number=Sing	2	_	_	start_char=2693|end_char=2697
4	points	point	NOUN	NNS	Number=Plur	3	_	_	start_char=2698|end_char=2704
5	can	can	AUX	MD	VerbForm=Fin	4	_	_	start_char=2705|end_char=2708
6	often	often	ADV	RB	_	5	_	_	start_char=2709|end_char=2714
7	characterized	characterize	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	6	_	_	start_char=2715|end_char=2728
8	by	by	ADP	IN	_	7	_	_	start_char=2729|end_char=2731
9	a	a	DET	DT	Definite=Ind|PronType=Art	8	_	_	start_char=2732|end_char=2733
10	list	list	NOUN	NN	Number=Sing	9	_	_	start_char=2734|end_char=2738
11	of	of	ADP	IN	_	10	_	_	start_char=2739|end_char=2741
12	numeric	numeric	ADJ	JJ	Degree=Pos	11	_	_	start_char=2742|end_char=2749
13	attributes	attribute	NOUN	NNS	Number=Plur	12	_	_	start_char=2750|end_char=2760
14	x	x	NOUN	NN	Number=Sing	13	_	_	start_char=2761|end_char=2762
15	r	be	X	AFX	_	14	_	_	start_char=2763|end_char=2764
16	which	which	PRON	WDT	PronType=Rel	15	_	_	start_char=2765|end_char=2770
17	can	can	AUX	MD	VerbForm=Fin	16	_	_	start_char=2771|end_char=2774
18	be	be	AUX	VB	VerbForm=Inf	17	_	_	start_char=2775|end_char=2777
19	stacked	stack	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	18	_	_	start_char=2778|end_char=2785
20	into	into	ADP	IN	_	19	_	_	start_char=2786|end_char=2790
21	a	a	DET	DT	Definite=Ind|PronType=Art	20	_	_	start_char=2791|end_char=2792
22	vector	vector	NOUN	NN	Number=Sing	21	_	_	start_char=2793|end_char=2799
23	foot_0	foot_0	NOUN	NN	Number=Sing	22	_	_	start_char=2800|end_char=2806
24	x	x	NOUN	NN	Number=Sing	23	_	_	start_char=2807|end_char=2808
25	=	=	SYM	SYM	_	24	_	_	start_char=2809|end_char=2810
26	x	x	NOUN	NN	Number=Sing	25	_	_	start_char=2811|end_char=2812
27	1	1	NUM	CD	NumForm=Digit|NumType=Card	26	_	_	start_char=2813|end_char=2814
28	,	,	PUNCT	,	_	27	_	_	start_char=2815|end_char=2816
29	.	.	PUNCT	.	_	28	_	_	start_char=2817|end_char=2818
30	.	.	PUNCT	.	_	29	_	_	start_char=2819|end_char=2820
31	.	.	PUNCT	.	_	30	_	_	start_char=2821|end_char=2822
32	,	,	PUNCT	,	_	31	_	_	start_char=2823|end_char=2824
33	x	x	NOUN	NN	Number=Sing	32	_	_	start_char=2825|end_char=2826
34	n	n	NOUN	NN	Number=Sing	33	_	_	start_char=2827|end_char=2828
35	t	t	NOUN	NN	Number=Sing	34	_	_	start_char=2829|end_char=2830
36	.	.	PUNCT	.	_	35	_	_	start_char=2831|end_char=2832
37	moreover	moreover	ADV	RB	_	36	_	_	SpaceAfter=No|start_char=2833|end_char=2841
38	,	,	PUNCT	,	_	37	_	_	start_char=2841|end_char=2842
39	many	many	ADJ	JJ	Degree=Pos	38	_	_	start_char=2843|end_char=2847
40	ml	millileter	NOUN	NN	Number=Sing	39	_	_	start_char=2848|end_char=2850
41	methods	method	NOUN	NNS	Number=Plur	40	_	_	start_char=2851|end_char=2858
42	(	(	PUNCT	-LRB-	_	41	_	_	SpaceAfter=No|start_char=2859|end_char=2860
43	such	such	ADJ	JJ	ExtPos=ADP	42	_	_	start_char=2860|end_char=2864
44	as	as	ADP	IN	_	43	_	_	start_char=2865|end_char=2867
45	linear	linear	ADJ	JJ	Degree=Pos	44	_	_	start_char=2868|end_char=2874
46	regression	regression	NOUN	NN	Number=Sing	45	_	_	start_char=2875|end_char=2885
47	or	or	CCONJ	CC	_	46	_	_	start_char=2886|end_char=2888
48	logistic	logistic	ADJ	JJ	Degree=Pos	47	_	_	start_char=2889|end_char=2897
49	regression	regression	NOUN	NN	Number=Sing	48	_	_	SpaceAfter=No|start_char=2898|end_char=2908
50	)	)	PUNCT	-RRB-	_	49	_	_	start_char=2908|end_char=2909
51	use	use	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	50	_	_	start_char=2910|end_char=2913
52	predictor	predictor	NOUN	NN	Number=Sing	51	_	_	start_char=2914|end_char=2923
53	functions	function	NOUN	NNS	Number=Plur	52	_	_	start_char=2924|end_char=2933
54	of	of	ADP	IN	_	53	_	_	start_char=2934|end_char=2936
55	the	the	DET	DT	Definite=Def|PronType=Art	54	_	_	start_char=2937|end_char=2940
56	form	form	NOUN	NN	Number=Sing	55	_	_	start_char=2941|end_char=2945
57	h(	h(	X	FW	_	56	_	_	SpaceAfter=No|start_char=2946|end_char=2948
58	x	x	NOUN	NN	Number=Sing	57	_	_	SpaceAfter=No|start_char=2948|end_char=2949
59	)	)	PUNCT	-RRB-	_	58	_	_	start_char=2949|end_char=2950
60	=	=	PUNCT	NFP	_	59	_	_	start_char=2951|end_char=2952
61	n	and	X	GW	_	60	_	_	start_char=2953|end_char=2954
62	r=1	r=1	X	GW	_	61	_	_	start_char=2955|end_char=2958
63	w	with	X	GW	_	62	_	_	start_char=2959|end_char=2960
64	r	be	X	GW	_	63	_	_	start_char=2961|end_char=2962
65	x	x	NOUN	NN	Number=Sing	64	_	_	start_char=2963|end_char=2964
66	r	be	X	FW	_	65	_	_	start_char=2965|end_char=2966
67	=	=	SYM	SYM	_	66	_	_	start_char=2967|end_char=2968
68	w	with	X	LS	_	67	_	_	start_char=2969|end_char=2970
69	t	t	NOUN	NN	Number=Sing	68	_	_	start_char=2971|end_char=2972
70	x	x	NOUN	NN	Number=Sing	69	_	_	start_char=2973|end_char=2974
71	with	with	ADP	IN	_	70	_	_	start_char=2975|end_char=2979
72	some	some	DET	DT	PronType=Ind	71	_	_	start_char=2980|end_char=2984
73	weight	weight	NOUN	NN	Number=Sing	72	_	_	start_char=2985|end_char=2991
74	vector	vector	NOUN	NN	Number=Sing	73	_	_	start_char=2992|end_char=2998
75	w	with	NOUN	NN	Number=Sing	74	_	_	start_char=2999|end_char=3000
76	=	=	SYM	SYM	_	75	_	_	start_char=3001|end_char=3002
77	(	(	PUNCT	-LRB-	_	76	_	_	SpaceAfter=No|start_char=3003|end_char=3004
78	w	with	ADP	IN	_	77	_	_	start_char=3004|end_char=3005
79	1	1	NUM	CD	NumForm=Digit|NumType=Card	78	_	_	start_char=3006|end_char=3007
80	,	,	PUNCT	,	_	79	_	_	start_char=3008|end_char=3009
81	.	.	PUNCT	,	_	80	_	_	start_char=3010|end_char=3011
82	.	.	PUNCT	,	_	81	_	_	start_char=3012|end_char=3013
83	.	.	PUNCT	,	_	82	_	_	start_char=3014|end_char=3015
84	,	,	PUNCT	,	_	83	_	_	start_char=3016|end_char=3017
85	w	with	X	LS	_	84	_	_	start_char=3018|end_char=3019
86	n	n	NOUN	NN	Number=Sing	85	_	_	start_char=3020|end_char=3021
87	)	)	PUNCT	-RRB-	_	86	_	_	start_char=3022|end_char=3023
88	t	t	NOUN	NN	Number=Sing	87	_	_	start_char=3024|end_char=3025
89	.	.	PUNCT	.	_	88	_	_	start_char=3026|end_char=3027
90	note	note	VERB	VB	Mood=Imp|VerbForm=Fin	89	_	_	start_char=3028|end_char=3032
91	that	that	SCONJ	IN	_	90	_	_	start_char=3033|end_char=3037
92	once	once	SCONJ	IN	_	91	_	_	start_char=3038|end_char=3042
93	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	92	_	_	start_char=3043|end_char=3045
94	restrict	restrict	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	93	_	_	start_char=3046|end_char=3054
95	ourselves	ourselves	PRON	PRP	Case=Acc|Number=Plur|Person=1|PronType=Prs|Reflex=Yes	94	_	_	start_char=3055|end_char=3064
96	to	to	ADP	IN	_	95	_	_	start_char=3065|end_char=3067
97	linear	linear	ADJ	JJ	Degree=Pos	96	_	_	start_char=3068|end_char=3074
98	functions	function	NOUN	NNS	Number=Plur	97	_	_	start_char=3075|end_char=3084
99	of	of	ADP	IN	_	98	_	_	start_char=3085|end_char=3087
100	the	the	DET	DT	Definite=Def|PronType=Art	99	_	_	start_char=3088|end_char=3091
101	form	form	NOUN	NN	Number=Sing	100	_	_	start_char=3092|end_char=3096
102	h(	h(	NOUN	NN	Number=Sing	101	_	_	SpaceAfter=No|start_char=3097|end_char=3099
103	x	x	NOUN	NN	Number=Sing	102	_	_	SpaceAfter=No|start_char=3099|end_char=3100
104	)	)	PUNCT	-RRB-	_	103	_	_	start_char=3100|end_char=3101
105	=	=	SYM	SYM	_	104	_	_	start_char=3102|end_char=3103
106	w	with	ADP	IN	_	105	_	_	start_char=3104|end_char=3105
107	t	t	NOUN	NN	Number=Sing	106	_	_	start_char=3106|end_char=3107
108	x	x	NOUN	NN	Number=Sing	107	_	_	SpaceAfter=No|start_char=3108|end_char=3109
109	,	,	PUNCT	,	_	108	_	_	start_char=3109|end_char=3110
110	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	109	_	_	start_char=3111|end_char=3113
111	can	can	AUX	MD	VerbForm=Fin	110	_	_	start_char=3114|end_char=3117
112	represent	represent	VERB	VB	VerbForm=Inf	111	_	_	start_char=3118|end_char=3127
113	a	a	DET	DT	Definite=Ind|PronType=Art	112	_	_	start_char=3128|end_char=3129
114	predictor	predictor	NOUN	NN	Number=Sing	113	_	_	start_char=3130|end_char=3139
115	function	function	NOUN	NN	Number=Sing	114	_	_	start_char=3140|end_char=3148
116	by	by	ADP	IN	_	115	_	_	start_char=3149|end_char=3151
117	the	the	DET	DT	Definite=Def|PronType=Art	116	_	_	start_char=3152|end_char=3155
118	weight	weight	NOUN	NN	Number=Sing	117	_	_	start_char=3156|end_char=3162
119	vector	vector	NOUN	NN	Number=Sing	118	_	_	start_char=3163|end_char=3169
120	w.	w.	NOUN	NN	Number=Sing	119	_	_	start_char=3170|end_char=3172
121	indeed	indeed	ADV	RB	_	120	_	_	SpaceAfter=No|start_char=3173|end_char=3179
122	,	,	PUNCT	,	_	121	_	_	start_char=3179|end_char=3180
123	given	give	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	122	_	_	start_char=3181|end_char=3186
124	the	the	DET	DT	Definite=Def|PronType=Art	123	_	_	start_char=3187|end_char=3190
125	weight	weight	NOUN	NN	Number=Sing	124	_	_	start_char=3191|end_char=3197
126	vector	vector	NOUN	NN	Number=Sing	125	_	_	start_char=3198|end_char=3204
127	w	with	NOUN	NN	Number=Sing	126	_	_	SpaceAfter=No|start_char=3205|end_char=3206
128	,	,	PUNCT	,	_	127	_	_	start_char=3206|end_char=3207
129	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	128	_	_	start_char=3208|end_char=3210
130	can	can	AUX	MD	VerbForm=Fin	129	_	_	start_char=3211|end_char=3214
131	evaluate	evaluate	VERB	VB	VerbForm=Inf	130	_	_	start_char=3215|end_char=3223
132	the	the	DET	DT	Definite=Def|PronType=Art	131	_	_	start_char=3224|end_char=3227
133	predictor	predictor	NOUN	NN	Number=Sing	132	_	_	start_char=3228|end_char=3237
134	function	function	NOUN	NN	Number=Sing	133	_	_	start_char=3238|end_char=3246
135	for	for	ADP	IN	_	134	_	_	start_char=3247|end_char=3250
136	any	any	DET	DT	PronType=Ind	135	_	_	start_char=3251|end_char=3254
137	feature	feature	NOUN	NN	Number=Sing	136	_	_	start_char=3255|end_char=3262
138	vector	vector	NOUN	NN	Number=Sing	137	_	_	start_char=3263|end_char=3269
139	x	x	NOUN	NN	Number=Sing	138	_	_	start_char=3270|end_char=3271
140	as	as	ADP	IN	_	139	_	_	start_char=3272|end_char=3274
141	h(	h(	NOUN	NN	Number=Sing	140	_	_	SpaceAfter=No|start_char=3275|end_char=3277
142	x	x	NOUN	NN	Number=Sing	141	_	_	SpaceAfter=No|start_char=3277|end_char=3278
143	)	)	PUNCT	-RRB-	_	142	_	_	start_char=3278|end_char=3279
144	=	=	SYM	SYM	_	143	_	_	start_char=3280|end_char=3281
145	w	with	ADP	IN	_	144	_	_	start_char=3282|end_char=3283
146	t	t	NOUN	NN	Number=Sing	145	_	_	start_char=3284|end_char=3285
147	x	x	NOUN	NN	Number=Sing	146	_	_	SpaceAfter=No|start_char=3286|end_char=3287
148	.	.	PUNCT	.	_	147	_	_	SpaceAfter=No|start_char=3287|end_char=3288

