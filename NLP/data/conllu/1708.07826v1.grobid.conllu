# text = logistic regression as soft perceptron learning we show that gradient ascent for logistic regression has a connection with the perceptron learning algorithm.
# sent_id = 0
1	logistic	logistic	ADJ	JJ	Degree=Pos	0	_	_	start_char=0|end_char=8
2	regression	regression	NOUN	NN	Number=Sing	1	_	_	start_char=9|end_char=19
3	as	as	ADP	IN	_	2	_	_	start_char=20|end_char=22
4	soft	soft	ADJ	JJ	Degree=Pos	3	_	_	start_char=23|end_char=27
5	perceptron	perceptron	NOUN	NN	Number=Sing	4	_	_	start_char=28|end_char=38
6	learning	learning	NOUN	NN	Number=Sing	5	_	_	start_char=39|end_char=47
7	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	6	_	_	start_char=48|end_char=50
8	show	show	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	7	_	_	start_char=51|end_char=55
9	that	that	SCONJ	IN	_	8	_	_	start_char=56|end_char=60
10	gradient	gradient	NOUN	NN	Number=Sing	9	_	_	start_char=61|end_char=69
11	ascent	ascent	NOUN	NN	Number=Sing	10	_	_	start_char=70|end_char=76
12	for	for	ADP	IN	_	11	_	_	start_char=77|end_char=80
13	logistic	logistic	ADJ	JJ	Degree=Pos	12	_	_	start_char=81|end_char=89
14	regression	regression	NOUN	NN	Number=Sing	13	_	_	start_char=90|end_char=100
15	has	have	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	_	_	start_char=101|end_char=104
16	a	a	DET	DT	Definite=Ind|PronType=Art	15	_	_	start_char=105|end_char=106
17	connection	connection	NOUN	NN	Number=Sing	16	_	_	start_char=107|end_char=117
18	with	with	ADP	IN	_	17	_	_	start_char=118|end_char=122
19	the	the	DET	DT	Definite=Def|PronType=Art	18	_	_	start_char=123|end_char=126
20	perceptron	perceptron	NOUN	NN	Number=Sing	19	_	_	start_char=127|end_char=137
21	learning	learning	NOUN	NN	Number=Sing	20	_	_	start_char=138|end_char=146
22	algorithm	algorithm	NOUN	NN	Number=Sing	21	_	_	SpaceAfter=No|start_char=147|end_char=156
23	.	.	PUNCT	.	_	22	_	_	start_char=156|end_char=157

# text = logistic learning is the "soft" variant of perceptron learning.
# sent_id = 1
1	logistic	logistic	ADJ	JJ	Degree=Pos	0	_	_	start_char=158|end_char=166
2	learning	learning	NOUN	NN	Number=Sing	1	_	_	start_char=167|end_char=175
3	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	_	_	start_char=176|end_char=178
4	the	the	DET	DT	Definite=Def|PronType=Art	3	_	_	start_char=179|end_char=182
5	"	"	PUNCT	``	_	4	_	_	SpaceAfter=No|start_char=183|end_char=184
6	soft	soft	ADJ	JJ	Degree=Pos	5	_	_	SpaceAfter=No|start_char=184|end_char=188
7	"	"	PUNCT	''	_	6	_	_	start_char=188|end_char=189
8	variant	variant	NOUN	NN	Number=Sing	7	_	_	start_char=190|end_char=197
9	of	of	ADP	IN	_	8	_	_	start_char=198|end_char=200
10	perceptron	perceptron	NOUN	NN	Number=Sing	9	_	_	start_char=201|end_char=211
11	learning	learning	NOUN	NN	Number=Sing	10	_	_	SpaceAfter=No|start_char=212|end_char=220
12	.	.	PUNCT	.	_	11	_	_	start_char=220|end_char=221

# text = logistic regression is used to build classifiers with a function which can be given a probabilistic interpretation.
# sent_id = 2
1	logistic	logistic	ADJ	JJ	Degree=Pos	0	_	_	start_char=222|end_char=230
2	regression	regression	NOUN	NN	Number=Sing	1	_	_	start_char=231|end_char=241
3	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	_	_	start_char=242|end_char=244
4	used	use	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	3	_	_	start_char=245|end_char=249
5	to	to	PART	TO	_	4	_	_	start_char=250|end_char=252
6	build	build	VERB	VB	VerbForm=Inf	5	_	_	start_char=253|end_char=258
7	classifiers	classifier	NOUN	NNS	Number=Plur	6	_	_	start_char=259|end_char=270
8	with	with	ADP	IN	_	7	_	_	start_char=271|end_char=275
9	a	a	DET	DT	Definite=Ind|PronType=Art	8	_	_	start_char=276|end_char=277
10	function	function	NOUN	NN	Number=Sing	9	_	_	start_char=278|end_char=286
11	which	which	PRON	WDT	PronType=Rel	10	_	_	start_char=287|end_char=292
12	can	can	AUX	MD	VerbForm=Fin	11	_	_	start_char=293|end_char=296
13	be	be	AUX	VB	VerbForm=Inf	12	_	_	start_char=297|end_char=299
14	given	give	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	13	_	_	start_char=300|end_char=305
15	a	a	DET	DT	Definite=Ind|PronType=Art	14	_	_	start_char=306|end_char=307
16	probabilistic	probabilistic	ADJ	JJ	Degree=Pos	15	_	_	start_char=308|end_char=321
17	interpretation	interpretation	NOUN	NN	Number=Sing	16	_	_	SpaceAfter=No|start_char=322|end_char=336
18	.	.	PUNCT	.	_	17	_	_	start_char=336|end_char=337

# text = we are given the data set (x i , y i ), for i = 1, . . . , n, where the x i are (n + 1)-dimensional extended vectors and the y i are zero or one (representing the positive or negative class, respectively).
# sent_id = 3
1	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	0	_	_	start_char=338|end_char=340
2	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	1	_	_	start_char=341|end_char=344
3	given	give	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	2	_	_	start_char=345|end_char=350
4	the	the	DET	DT	Definite=Def|PronType=Art	3	_	_	start_char=351|end_char=354
5	data	datum	NOUN	NNS	Number=Plur	4	_	_	start_char=355|end_char=359
6	set	set	NOUN	NN	Number=Sing	5	_	_	start_char=360|end_char=363
7	(	(	PUNCT	-LRB-	_	6	_	_	SpaceAfter=No|start_char=364|end_char=365
8	x	x	NOUN	NN	Number=Sing	7	_	_	start_char=365|end_char=366
9	i	i	NOUN	NN	Number=Sing	8	_	_	start_char=367|end_char=368
10	,	,	PUNCT	,	_	9	_	_	start_char=369|end_char=370
11	y	y	NOUN	NN	Number=Sing	10	_	_	start_char=371|end_char=372
12	i	i	NOUN	NN	Number=Sing	11	_	_	start_char=373|end_char=374
13	)	)	PUNCT	-RRB-	_	12	_	_	SpaceAfter=No|start_char=375|end_char=376
14	,	,	PUNCT	,	_	13	_	_	start_char=376|end_char=377
15	for	for	ADP	IN	_	14	_	_	start_char=378|end_char=381
16	i	i	NOUN	NN	Number=Sing	15	_	_	start_char=382|end_char=383
17	=	=	SYM	SYM	_	16	_	_	start_char=384|end_char=385
18	1	1	NUM	CD	NumForm=Digit|NumType=Card	17	_	_	SpaceAfter=No|start_char=386|end_char=387
19	,	,	PUNCT	,	_	18	_	_	start_char=387|end_char=388
20	.	.	PUNCT	.	_	19	_	_	start_char=389|end_char=390
21	.	.	PUNCT	,	_	20	_	_	start_char=391|end_char=392
22	.	.	PUNCT	,	_	21	_	_	start_char=393|end_char=394
23	,	,	PUNCT	,	_	22	_	_	start_char=395|end_char=396
24	n	n	NOUN	NN	Number=Sing	23	_	_	SpaceAfter=No|start_char=397|end_char=398
25	,	,	PUNCT	,	_	24	_	_	start_char=398|end_char=399
26	where	where	ADV	WRB	PronType=Int	25	_	_	start_char=400|end_char=405
27	the	the	DET	DT	Definite=Def|PronType=Art	26	_	_	start_char=406|end_char=409
28	x	x	NOUN	NN	Number=Sing	27	_	_	start_char=410|end_char=411
29	i	I	PRON	PRP	Case=Nom|Number=Sing|Person=1|PronType=Prs	28	_	_	start_char=412|end_char=413
30	are	be	AUX	VBP	Mood=Ind|Number=Sing|Person=1|Tense=Pres|VerbForm=Fin	29	_	_	start_char=414|end_char=417
31	(	(	PUNCT	-LRB-	_	30	_	_	SpaceAfter=No|start_char=418|end_char=419
32	n	n	NOUN	NN	Number=Sing	31	_	_	start_char=419|end_char=420
33	+	+	SYM	SYM	_	32	_	_	start_char=421|end_char=422
34	1	1	NUM	CD	NumForm=Digit|NumType=Card	33	_	_	SpaceAfter=No|start_char=423|end_char=424
35	)	)	PUNCT	-RRB-	_	34	_	_	SpaceAfter=No|start_char=424|end_char=425
36	-	-	PUNCT	HYPH	_	35	_	_	SpaceAfter=No|start_char=425|end_char=426
37	dimensional	dimensional	ADJ	JJ	Degree=Pos	36	_	_	start_char=426|end_char=437
38	extended	extend	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	37	_	_	start_char=438|end_char=446
39	vectors	vector	NOUN	NNS	Number=Plur	38	_	_	start_char=447|end_char=454
40	and	and	CCONJ	CC	_	39	_	_	start_char=455|end_char=458
41	the	the	DET	DT	Definite=Def|PronType=Art	40	_	_	start_char=459|end_char=462
42	y	y	NOUN	NN	Number=Sing	41	_	_	start_char=463|end_char=464
43	i	I	PRON	PRP	Case=Nom|Number=Sing|Person=1|PronType=Prs	42	_	_	start_char=465|end_char=466
44	are	be	AUX	VBP	Mood=Ind|Number=Sing|Person=1|Tense=Pres|VerbForm=Fin	43	_	_	start_char=467|end_char=470
45	zero	zero	NUM	CD	NumForm=Word|NumType=Card	44	_	_	start_char=471|end_char=475
46	or	or	CCONJ	CC	_	45	_	_	start_char=476|end_char=478
47	one	one	NUM	CD	NumForm=Word|NumType=Card	46	_	_	start_char=479|end_char=482
48	(	(	PUNCT	-LRB-	_	47	_	_	SpaceAfter=No|start_char=483|end_char=484
49	representing	represent	VERB	VBG	Tense=Pres|VerbForm=Part	48	_	_	start_char=484|end_char=496
50	the	the	DET	DT	Definite=Def|PronType=Art	49	_	_	start_char=497|end_char=500
51	positive	positive	ADJ	JJ	Degree=Pos	50	_	_	start_char=501|end_char=509
52	or	or	CCONJ	CC	_	51	_	_	start_char=510|end_char=512
53	negative	negative	ADJ	JJ	Degree=Pos	52	_	_	start_char=513|end_char=521
54	class	class	NOUN	NN	Number=Sing	53	_	_	SpaceAfter=No|start_char=522|end_char=527
55	,	,	PUNCT	,	_	54	_	_	start_char=527|end_char=528
56	respectively	respectively	ADV	RB	_	55	_	_	SpaceAfter=No|start_char=529|end_char=541
57	)	)	PUNCT	-RRB-	_	56	_	_	SpaceAfter=No|start_char=541|end_char=542
58	.	.	PUNCT	.	_	57	_	_	start_char=542|end_char=543

# text = we would like to build a function p(x, β), which depends on a single (n + 1)dimensional parameter vector β (like in linear regression) but where p(x, β) approaches one when x belongs to the positive class, and zero if not.
# sent_id = 4
1	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	0	_	_	start_char=544|end_char=546
2	would	would	AUX	MD	VerbForm=Fin	1	_	_	start_char=547|end_char=552
3	like	like	VERB	VB	VerbForm=Inf	2	_	_	start_char=553|end_char=557
4	to	to	PART	TO	_	3	_	_	start_char=558|end_char=560
5	build	build	VERB	VB	VerbForm=Inf	4	_	_	start_char=561|end_char=566
6	a	a	DET	DT	Definite=Ind|PronType=Art	5	_	_	start_char=567|end_char=568
7	function	function	NOUN	NN	Number=Sing	6	_	_	start_char=569|end_char=577
8	p(	p(	NOUN	NN	Number=Sing	7	_	_	SpaceAfter=No|start_char=578|end_char=580
9	x	x	NOUN	NN	Number=Sing	8	_	_	SpaceAfter=No|start_char=580|end_char=581
10	,	,	PUNCT	,	_	9	_	_	start_char=581|end_char=582
11	β	β	NOUN	NN	Number=Sing	10	_	_	SpaceAfter=No|start_char=583|end_char=584
12	)	)	PUNCT	-RRB-	_	11	_	_	SpaceAfter=No|start_char=584|end_char=585
13	,	,	PUNCT	,	_	12	_	_	start_char=585|end_char=586
14	which	which	PRON	WDT	PronType=Rel	13	_	_	start_char=587|end_char=592
15	depends	depend	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	_	_	start_char=593|end_char=600
16	on	on	ADP	IN	_	15	_	_	start_char=601|end_char=603
17	a	a	DET	DT	Definite=Ind|PronType=Art	16	_	_	start_char=604|end_char=605
18	single	single	ADJ	JJ	Degree=Pos	17	_	_	start_char=606|end_char=612
19	(	(	PUNCT	-LRB-	_	18	_	_	SpaceAfter=No|start_char=613|end_char=614
20	n	n	NOUN	NN	Number=Sing	19	_	_	start_char=614|end_char=615
21	+	+	SYM	SYM	_	20	_	_	start_char=616|end_char=617
22	1	1	NUM	CD	NumForm=Digit|NumType=Card	21	_	_	SpaceAfter=No|start_char=618|end_char=619
23	)	)	PUNCT	-RRB-	_	22	_	_	SpaceAfter=No|start_char=619|end_char=620
24	dimensional	dimensional	ADJ	JJ	Degree=Pos	23	_	_	start_char=620|end_char=631
25	parameter	parameter	NOUN	NN	Number=Sing	24	_	_	start_char=632|end_char=641
26	vector	vector	NOUN	NN	Number=Sing	25	_	_	start_char=642|end_char=648
27	β	β	NOUN	NN	Number=Sing	26	_	_	start_char=649|end_char=650
28	(	(	PUNCT	-LRB-	_	27	_	_	SpaceAfter=No|start_char=651|end_char=652
29	like	like	INTJ	UH	_	28	_	_	start_char=652|end_char=656
30	in	in	ADP	IN	_	29	_	_	start_char=657|end_char=659
31	linear	linear	ADJ	JJ	Degree=Pos	30	_	_	start_char=660|end_char=666
32	regression	regression	NOUN	NN	Number=Sing	31	_	_	SpaceAfter=No|start_char=667|end_char=677
33	)	)	PUNCT	-RRB-	_	32	_	_	start_char=677|end_char=678
34	but	but	CCONJ	CC	_	33	_	_	start_char=679|end_char=682
35	where	where	ADV	WRB	PronType=Int	34	_	_	start_char=683|end_char=688
36	p(x	p(x	NOUN	NN	Number=Sing	35	_	_	SpaceAfter=No|start_char=689|end_char=692
37	,	,	PUNCT	,	_	36	_	_	start_char=692|end_char=693
38	β	β	NOUN	NN	Number=Sing	37	_	_	SpaceAfter=No|start_char=694|end_char=695
39	)	)	PUNCT	-RRB-	_	38	_	_	start_char=695|end_char=696
40	approaches	approach	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	39	_	_	start_char=697|end_char=707
41	one	one	NUM	CD	NumForm=Word|NumType=Card	40	_	_	start_char=708|end_char=711
42	when	when	ADV	WRB	PronType=Int	41	_	_	start_char=712|end_char=716
43	x	x	NOUN	NN	Number=Sing	42	_	_	start_char=717|end_char=718
44	belongs	belong	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	43	_	_	start_char=719|end_char=726
45	to	to	ADP	IN	_	44	_	_	start_char=727|end_char=729
46	the	the	DET	DT	Definite=Def|PronType=Art	45	_	_	start_char=730|end_char=733
47	positive	positive	ADJ	JJ	Degree=Pos	46	_	_	start_char=734|end_char=742
48	class	class	NOUN	NN	Number=Sing	47	_	_	SpaceAfter=No|start_char=743|end_char=748
49	,	,	PUNCT	,	_	48	_	_	start_char=748|end_char=749
50	and	and	CCONJ	CC	_	49	_	_	start_char=750|end_char=753
51	zero	zero	NUM	CD	NumForm=Word|NumType=Card	50	_	_	start_char=754|end_char=758
52	if	if	SCONJ	IN	_	51	_	_	start_char=759|end_char=761
53	not	not	PART	RB	Polarity=Neg	52	_	_	SpaceAfter=No|start_char=762|end_char=765
54	.	.	PUNCT	.	_	53	_	_	start_char=765|end_char=766

# text = an extended vector x is one in which the collection of features has been augmented by attaching the additional component 1 to n features, so that the scalar product of the β and x vectors can be written as β t x = β 0 + β 1 x 1 + • • • + β n x n the extra component allows us to handle a constant term β 0 in the scalar product in an elegant way.
# sent_id = 5
1	an	a	DET	DT	Definite=Ind|PronType=Art	0	_	_	start_char=767|end_char=769
2	extended	extend	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	1	_	_	start_char=770|end_char=778
3	vector	vector	NOUN	NN	Number=Sing	2	_	_	start_char=779|end_char=785
4	x	x	NOUN	NN	Number=Sing	3	_	_	start_char=786|end_char=787
5	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	_	_	start_char=788|end_char=790
6	one	one	NUM	CD	NumForm=Word|NumType=Card	5	_	_	start_char=791|end_char=794
7	in	in	ADP	IN	_	6	_	_	start_char=795|end_char=797
8	which	which	PRON	WDT	PronType=Rel	7	_	_	start_char=798|end_char=803
9	the	the	DET	DT	Definite=Def|PronType=Art	8	_	_	start_char=804|end_char=807
10	collection	collection	NOUN	NN	Number=Sing	9	_	_	start_char=808|end_char=818
11	of	of	ADP	IN	_	10	_	_	start_char=819|end_char=821
12	features	feature	NOUN	NNS	Number=Plur	11	_	_	start_char=822|end_char=830
13	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	12	_	_	start_char=831|end_char=834
14	been	be	AUX	VBN	Tense=Past|VerbForm=Part	13	_	_	start_char=835|end_char=839
15	augmented	augment	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	14	_	_	start_char=840|end_char=849
16	by	by	SCONJ	IN	_	15	_	_	start_char=850|end_char=852
17	attaching	attach	VERB	VBG	Tense=Pres|VerbForm=Part	16	_	_	start_char=853|end_char=862
18	the	the	DET	DT	Definite=Def|PronType=Art	17	_	_	start_char=863|end_char=866
19	additional	additional	ADJ	JJ	Degree=Pos	18	_	_	start_char=867|end_char=877
20	component	component	NOUN	NN	Number=Sing	19	_	_	start_char=878|end_char=887
21	1	1	NUM	CD	NumForm=Digit|NumType=Card	20	_	_	start_char=888|end_char=889
22	to	to	ADP	IN	_	21	_	_	start_char=890|end_char=892
23	n	n	NOUN	NN	Number=Sing	22	_	_	start_char=893|end_char=894
24	features	feature	NOUN	NNS	Number=Plur	23	_	_	SpaceAfter=No|start_char=895|end_char=903
25	,	,	PUNCT	,	_	24	_	_	start_char=903|end_char=904
26	so	so	SCONJ	IN	ExtPos=SCONJ	25	_	_	start_char=905|end_char=907
27	that	that	SCONJ	IN	_	26	_	_	start_char=908|end_char=912
28	the	the	DET	DT	Definite=Def|PronType=Art	27	_	_	start_char=913|end_char=916
29	scalar	scalar	ADJ	JJ	Degree=Pos	28	_	_	start_char=917|end_char=923
30	product	product	NOUN	NN	Number=Sing	29	_	_	start_char=924|end_char=931
31	of	of	ADP	IN	_	30	_	_	start_char=932|end_char=934
32	the	the	DET	DT	Definite=Def|PronType=Art	31	_	_	start_char=935|end_char=938
33	β	β	NOUN	NN	Number=Sing	32	_	_	start_char=939|end_char=940
34	and	and	CCONJ	CC	_	33	_	_	start_char=941|end_char=944
35	x	x	NOUN	NN	Number=Sing	34	_	_	start_char=945|end_char=946
36	vectors	vector	NOUN	NNS	Number=Plur	35	_	_	start_char=947|end_char=954
37	can	can	AUX	MD	VerbForm=Fin	36	_	_	start_char=955|end_char=958
38	be	be	AUX	VB	VerbForm=Inf	37	_	_	start_char=959|end_char=961
39	written	write	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	38	_	_	start_char=962|end_char=969
40	as	as	ADP	IN	_	39	_	_	start_char=970|end_char=972
41	β	β	NOUN	NN	Number=Sing	40	_	_	start_char=973|end_char=974
42	t	t	NOUN	NN	Number=Sing	41	_	_	start_char=975|end_char=976
43	x	x	NOUN	NN	Number=Sing	42	_	_	start_char=977|end_char=978
44	=	=	SYM	SYM	_	43	_	_	start_char=979|end_char=980
45	β	β	NOUN	NNS	Number=Sing	44	_	_	start_char=981|end_char=982
46	0	0	NUM	CD	NumForm=Digit|NumType=Card	45	_	_	start_char=983|end_char=984
47	+	+	SYM	SYM	_	46	_	_	start_char=985|end_char=986
48	β	β	NOUN	NNS	Number=Plur	47	_	_	start_char=987|end_char=988
49	1	1	NUM	CD	NumForm=Digit|NumType=Card	48	_	_	start_char=989|end_char=990
50	x	x	SYM	SYM	_	49	_	_	start_char=991|end_char=992
51	1	1	NUM	CD	NumForm=Digit|NumType=Card	50	_	_	start_char=993|end_char=994
52	+	+	SYM	SYM	_	51	_	_	start_char=995|end_char=996
53	•	•	SYM	SYM	_	52	_	_	start_char=997|end_char=998
54	•	•	SYM	SYM	_	53	_	_	start_char=999|end_char=1000
55	•	•	SYM	SYM	_	54	_	_	start_char=1001|end_char=1002
56	+	+	SYM	SYM	_	55	_	_	start_char=1003|end_char=1004
57	β	β	NOUN	NN	Number=Sing	56	_	_	start_char=1005|end_char=1006
58	n	n	NOUN	NN	Number=Sing	57	_	_	start_char=1007|end_char=1008
59	x	x	NOUN	NN	Number=Sing	58	_	_	start_char=1009|end_char=1010
60	n	and	CCONJ	CC	_	59	_	_	start_char=1011|end_char=1012
61	the	the	DET	DT	Definite=Def|PronType=Art	60	_	_	start_char=1013|end_char=1016
62	extra	extra	ADJ	JJ	Degree=Pos	61	_	_	start_char=1017|end_char=1022
63	component	component	NOUN	NN	Number=Sing	62	_	_	start_char=1023|end_char=1032
64	allows	allow	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	63	_	_	start_char=1033|end_char=1039
65	us	we	PRON	PRP	Case=Acc|Number=Plur|Person=1|PronType=Prs	64	_	_	start_char=1040|end_char=1042
66	to	to	PART	TO	_	65	_	_	start_char=1043|end_char=1045
67	handle	handle	VERB	VB	VerbForm=Inf	66	_	_	start_char=1046|end_char=1052
68	a	a	DET	DT	Definite=Ind|PronType=Art	67	_	_	start_char=1053|end_char=1054
69	constant	constant	ADJ	JJ	Degree=Pos	68	_	_	start_char=1055|end_char=1063
70	term	term	NOUN	NN	Number=Sing	69	_	_	start_char=1064|end_char=1068
71	β	β	NOUN	NN	Number=Sing	70	_	_	start_char=1069|end_char=1070
72	0	0	NUM	CD	NumForm=Digit|NumType=Card	71	_	_	start_char=1071|end_char=1072
73	in	in	ADP	IN	_	72	_	_	start_char=1073|end_char=1075
74	the	the	DET	DT	Definite=Def|PronType=Art	73	_	_	start_char=1076|end_char=1079
75	scalar	scalar	ADJ	JJ	Degree=Pos	74	_	_	start_char=1080|end_char=1086
76	product	product	NOUN	NN	Number=Sing	75	_	_	start_char=1087|end_char=1094
77	in	in	ADP	IN	_	76	_	_	start_char=1095|end_char=1097
78	an	a	DET	DT	Definite=Ind|PronType=Art	77	_	_	start_char=1098|end_char=1100
79	elegant	elegant	ADJ	JJ	Degree=Pos	78	_	_	start_char=1101|end_char=1108
80	way	way	NOUN	NN	Number=Sing	79	_	_	SpaceAfter=No|start_char=1109|end_char=1112
81	.	.	PUNCT	.	_	80	_	_	start_char=1112|end_char=1113

# text = a proposal for a function such as the one described above is p(x, β) = exp(β t x)/(1 + exp(β t x)) where p(x, β) denotes the probability that x belongs to the positive class.
# sent_id = 6
1	a	a	DET	DT	Definite=Ind|PronType=Art	0	_	_	start_char=1114|end_char=1115
2	proposal	proposal	NOUN	NN	Number=Sing	1	_	_	start_char=1116|end_char=1124
3	for	for	ADP	IN	_	2	_	_	start_char=1125|end_char=1128
4	a	a	DET	DT	Definite=Ind|PronType=Art	3	_	_	start_char=1129|end_char=1130
5	function	function	NOUN	NN	Number=Sing	4	_	_	start_char=1131|end_char=1139
6	such	such	ADJ	JJ	ExtPos=ADP	5	_	_	start_char=1140|end_char=1144
7	as	as	ADP	IN	_	6	_	_	start_char=1145|end_char=1147
8	the	the	DET	DT	Definite=Def|PronType=Art	7	_	_	start_char=1148|end_char=1151
9	one	one	NOUN	NN	Number=Sing	8	_	_	start_char=1152|end_char=1155
10	described	describe	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	9	_	_	start_char=1156|end_char=1165
11	above	above	ADV	RB	_	10	_	_	start_char=1166|end_char=1171
12	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	11	_	_	start_char=1172|end_char=1174
13	p(x	p(x	NOUN	NN	Number=Sing	12	_	_	SpaceAfter=No|start_char=1175|end_char=1178
14	,	,	PUNCT	,	_	13	_	_	start_char=1178|end_char=1179
15	β	β	NOUN	NN	Number=Sing	14	_	_	SpaceAfter=No|start_char=1180|end_char=1181
16	)	)	PUNCT	-RRB-	_	15	_	_	start_char=1181|end_char=1182
17	=	=	SYM	SYM	_	16	_	_	start_char=1183|end_char=1184
18	exp	exp	NOUN	NN	Number=Sing	17	_	_	SpaceAfter=No|start_char=1185|end_char=1188
19	(	(	PUNCT	-LRB-	_	18	_	_	SpaceAfter=No|start_char=1188|end_char=1189
20	β	β	NOUN	NN	Number=Sing	19	_	_	start_char=1189|end_char=1190
21	t	t	NOUN	NN	Number=Sing	20	_	_	start_char=1191|end_char=1192
22	x	x	NOUN	NN	Number=Sing	21	_	_	SpaceAfter=No|start_char=1193|end_char=1194
23	)	)	PUNCT	-RRB-	_	22	_	_	SpaceAfter=No|start_char=1194|end_char=1195
24	/	/	SYM	SYM	_	23	_	_	SpaceAfter=No|start_char=1195|end_char=1196
25	(	(	PUNCT	-LRB-	_	24	_	_	SpaceAfter=No|start_char=1196|end_char=1197
26	1	1	NUM	CD	NumForm=Digit|NumType=Card	25	_	_	start_char=1197|end_char=1198
27	+	+	SYM	SYM	_	26	_	_	start_char=1199|end_char=1200
28	exp	exp	NOUN	NN	Number=Sing	27	_	_	SpaceAfter=No|start_char=1201|end_char=1204
29	(	(	PUNCT	-LRB-	_	28	_	_	SpaceAfter=No|start_char=1204|end_char=1205
30	β	β	NOUN	NN	Number=Sing	29	_	_	start_char=1205|end_char=1206
31	t	t	NOUN	NN	Number=Sing	30	_	_	start_char=1207|end_char=1208
32	x	x	NOUN	NN	Number=Sing	31	_	_	SpaceAfter=No|start_char=1209|end_char=1210
33	)	)	PUNCT	-RRB-	_	32	_	_	SpaceAfter=No|start_char=1210|end_char=1211
34	)	)	PUNCT	-RRB-	_	33	_	_	start_char=1211|end_char=1212
35	where	where	ADV	WRB	PronType=Rel	34	_	_	start_char=1213|end_char=1218
36	p(x	p(x	NOUN	NN	Number=Sing	35	_	_	SpaceAfter=No|start_char=1219|end_char=1222
37	,	,	PUNCT	,	_	36	_	_	start_char=1222|end_char=1223
38	β	β	NOUN	NN	Number=Sing	37	_	_	SpaceAfter=No|start_char=1224|end_char=1225
39	)	)	PUNCT	-RRB-	_	38	_	_	start_char=1225|end_char=1226
40	denotes	denote	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	39	_	_	start_char=1227|end_char=1234
41	the	the	DET	DT	Definite=Def|PronType=Art	40	_	_	start_char=1235|end_char=1238
42	probability	probability	NOUN	NN	Number=Sing	41	_	_	start_char=1239|end_char=1250
43	that	that	SCONJ	IN	_	42	_	_	start_char=1251|end_char=1255
44	x	x	NOUN	NN	Number=Sing	43	_	_	start_char=1256|end_char=1257
45	belongs	belong	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	44	_	_	start_char=1258|end_char=1265
46	to	to	ADP	IN	_	45	_	_	start_char=1266|end_char=1268
47	the	the	DET	DT	Definite=Def|PronType=Art	46	_	_	start_char=1269|end_char=1272
48	positive	positive	ADJ	JJ	Degree=Pos	47	_	_	start_char=1273|end_char=1281
49	class	class	NOUN	NN	Number=Sing	48	_	_	SpaceAfter=No|start_char=1282|end_char=1287
50	.	.	PUNCT	.	_	49	_	_	start_char=1287|end_char=1288

# text = the function is always positive and never greater than one.
# sent_id = 7
1	the	the	DET	DT	Definite=Def|PronType=Art	0	_	_	start_char=1289|end_char=1292
2	function	function	NOUN	NN	Number=Sing	1	_	_	start_char=1293|end_char=1301
3	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	_	_	start_char=1302|end_char=1304
4	always	always	ADV	RB	PronType=Tot	3	_	_	start_char=1305|end_char=1311
5	positive	positive	ADJ	JJ	Degree=Pos	4	_	_	start_char=1312|end_char=1320
6	and	and	CCONJ	CC	_	5	_	_	start_char=1321|end_char=1324
7	never	never	ADV	RB	PronType=Neg	6	_	_	start_char=1325|end_char=1330
8	greater	great	ADJ	JJR	Degree=Cmp	7	_	_	start_char=1331|end_char=1338
9	than	than	ADP	IN	_	8	_	_	start_char=1339|end_char=1343
10	one	one	NUM	CD	NumForm=Word|NumType=Card	9	_	_	SpaceAfter=No|start_char=1344|end_char=1347
11	.	.	PUNCT	.	_	10	_	_	start_char=1347|end_char=1348

# text = it saturates asymptotically to 1 in the direction of β. note that the probability of x belonging to the negative class is given by: 1 -p(x, β) = 1/(1 + exp(β t x)) with this interpretation we can adjust β so that the data has maximum likelihood.
# sent_id = 8
1	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	0	_	_	start_char=1349|end_char=1351
2	saturates	saturate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	1	_	_	start_char=1352|end_char=1361
3	asymptotically	asymptotically	ADV	RB	_	2	_	_	start_char=1362|end_char=1376
4	to	to	ADP	IN	_	3	_	_	start_char=1377|end_char=1379
5	1	1	NUM	CD	NumForm=Digit|NumType=Card	4	_	_	start_char=1380|end_char=1381
6	in	in	ADP	IN	_	5	_	_	start_char=1382|end_char=1384
7	the	the	DET	DT	Definite=Def|PronType=Art	6	_	_	start_char=1385|end_char=1388
8	direction	direction	NOUN	NN	Number=Sing	7	_	_	start_char=1389|end_char=1398
9	of	of	ADP	IN	_	8	_	_	start_char=1399|end_char=1401
10	β.	β.	NOUN	NN	Number=Sing	9	_	_	start_char=1402|end_char=1404
11	note	note	VERB	VB	Mood=Imp|VerbForm=Fin	10	_	_	start_char=1405|end_char=1409
12	that	that	SCONJ	IN	_	11	_	_	start_char=1410|end_char=1414
13	the	the	DET	DT	Definite=Def|PronType=Art	12	_	_	start_char=1415|end_char=1418
14	probability	probability	NOUN	NN	Number=Sing	13	_	_	start_char=1419|end_char=1430
15	of	of	ADP	IN	_	14	_	_	start_char=1431|end_char=1433
16	x	x	NOUN	NN	Number=Sing	15	_	_	start_char=1434|end_char=1435
17	belonging	belong	VERB	VBG	VerbForm=Ger	16	_	_	start_char=1436|end_char=1445
18	to	to	ADP	IN	_	17	_	_	start_char=1446|end_char=1448
19	the	the	DET	DT	Definite=Def|PronType=Art	18	_	_	start_char=1449|end_char=1452
20	negative	negative	ADJ	JJ	Degree=Pos	19	_	_	start_char=1453|end_char=1461
21	class	class	NOUN	NN	Number=Sing	20	_	_	start_char=1462|end_char=1467
22	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	21	_	_	start_char=1468|end_char=1470
23	given	give	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	22	_	_	start_char=1471|end_char=1476
24	by	by	ADP	IN	_	23	_	_	SpaceAfter=No|start_char=1477|end_char=1479
25	:	:	PUNCT	:	_	24	_	_	start_char=1479|end_char=1480
26	1	1	NUM	CD	NumForm=Digit|NumType=Card	25	_	_	start_char=1481|end_char=1482
27	-	-	SYM	SYM	_	26	_	_	SpaceAfter=No|start_char=1483|end_char=1484
28	p(	p(	NOUN	NN	Number=Sing	27	_	_	SpaceAfter=No|start_char=1484|end_char=1486
29	x	x	NOUN	NN	Number=Sing	28	_	_	SpaceAfter=No|start_char=1486|end_char=1487
30	,	,	PUNCT	,	_	29	_	_	start_char=1487|end_char=1488
31	β	β	NOUN	NN	Number=Sing	30	_	_	SpaceAfter=No|start_char=1489|end_char=1490
32	)	)	PUNCT	-RRB-	_	31	_	_	start_char=1490|end_char=1491
33	=	=	SYM	SYM	_	32	_	_	start_char=1492|end_char=1493
34	1	1	NUM	CD	NumForm=Digit|NumType=Card	33	_	_	SpaceAfter=No|start_char=1494|end_char=1495
35	/(	/(	SYM	SYM	_	34	_	_	SpaceAfter=No|start_char=1495|end_char=1497
36	1	1	NUM	CD	NumForm=Digit|NumType=Card	35	_	_	start_char=1497|end_char=1498
37	+	+	SYM	SYM	_	36	_	_	start_char=1499|end_char=1500
38	exp	exp	NOUN	NN	Number=Sing	37	_	_	SpaceAfter=No|start_char=1501|end_char=1504
39	(	(	PUNCT	-LRB-	_	38	_	_	SpaceAfter=No|start_char=1504|end_char=1505
40	β	β	NOUN	NN	Number=Sing	39	_	_	start_char=1505|end_char=1506
41	t	t	NOUN	NN	Number=Sing	40	_	_	start_char=1507|end_char=1508
42	x	x	NOUN	NN	Number=Sing	41	_	_	SpaceAfter=No|start_char=1509|end_char=1510
43	)	)	PUNCT	-RRB-	_	42	_	_	SpaceAfter=No|start_char=1510|end_char=1511
44	)	)	PUNCT	-RRB-	_	43	_	_	start_char=1511|end_char=1512
45	with	with	ADP	IN	_	44	_	_	start_char=1513|end_char=1517
46	this	this	DET	DT	Number=Sing|PronType=Dem	45	_	_	start_char=1518|end_char=1522
47	interpretation	interpretation	NOUN	NN	Number=Sing	46	_	_	start_char=1523|end_char=1537
48	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	47	_	_	start_char=1538|end_char=1540
49	can	can	AUX	MD	VerbForm=Fin	48	_	_	start_char=1541|end_char=1544
50	adjust	adjust	VERB	VB	VerbForm=Inf	49	_	_	start_char=1545|end_char=1551
51	β	β	NOUN	NN	Number=Sing	50	_	_	start_char=1552|end_char=1553
52	so	so	SCONJ	IN	ExtPos=SCONJ	51	_	_	start_char=1554|end_char=1556
53	that	that	SCONJ	IN	_	52	_	_	start_char=1557|end_char=1561
54	the	the	DET	DT	Definite=Def|PronType=Art	53	_	_	start_char=1562|end_char=1565
55	data	datum	NOUN	NNS	Number=Plur	54	_	_	start_char=1566|end_char=1570
56	has	have	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	55	_	_	start_char=1571|end_char=1574
57	maximum	maximum	ADJ	JJ	Degree=Pos	56	_	_	start_char=1575|end_char=1582
58	likelihood	likelihood	NOUN	NN	Number=Sing	57	_	_	SpaceAfter=No|start_char=1583|end_char=1593
59	.	.	PUNCT	.	_	58	_	_	start_char=1593|end_char=1594

# text = if n 1 is the number of data points in the positive class and n 2 the number o data points in the negative class, the likelihood is given by the product of all points probabilities l(β) = n 1 p(x i , β) n 2 (1 -p(x i , β)) we want to maximize the likelihood of the data, but we usually maximize the log-likelihood, since the logarithm is a monotonic function.
# sent_id = 9
1	if	if	SCONJ	IN	_	0	_	_	start_char=1595|end_char=1597
2	n	n	NOUN	NN	Number=Sing	1	_	_	start_char=1598|end_char=1599
3	1	1	NUM	CD	NumForm=Digit|NumType=Card	2	_	_	start_char=1600|end_char=1601
4	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	_	_	start_char=1602|end_char=1604
5	the	the	DET	DT	Definite=Def|PronType=Art	4	_	_	start_char=1605|end_char=1608
6	number	number	NOUN	NN	Number=Sing	5	_	_	start_char=1609|end_char=1615
7	of	of	ADP	IN	_	6	_	_	start_char=1616|end_char=1618
8	data	datum	NOUN	NNS	Number=Plur	7	_	_	start_char=1619|end_char=1623
9	points	point	NOUN	NNS	Number=Plur	8	_	_	start_char=1624|end_char=1630
10	in	in	ADP	IN	_	9	_	_	start_char=1631|end_char=1633
11	the	the	DET	DT	Definite=Def|PronType=Art	10	_	_	start_char=1634|end_char=1637
12	positive	positive	ADJ	JJ	Degree=Pos	11	_	_	start_char=1638|end_char=1646
13	class	class	NOUN	NN	Number=Sing	12	_	_	start_char=1647|end_char=1652
14	and	and	CCONJ	CC	_	13	_	_	start_char=1653|end_char=1656
15	n	and	ADP	IN	_	14	_	_	start_char=1657|end_char=1658
16	2	2	NUM	CD	NumForm=Digit|NumType=Card	15	_	_	start_char=1659|end_char=1660
17	the	the	DET	DT	Definite=Def|PronType=Art	16	_	_	start_char=1661|end_char=1664
18	number	number	NOUN	NN	Number=Sing	17	_	_	start_char=1665|end_char=1671
19	o	o	NOUN	NN	Number=Sing	18	_	_	start_char=1672|end_char=1673
20	data	datum	NOUN	NNS	Number=Plur	19	_	_	start_char=1674|end_char=1678
21	points	point	NOUN	NNS	Number=Plur	20	_	_	start_char=1679|end_char=1685
22	in	in	ADP	IN	_	21	_	_	start_char=1686|end_char=1688
23	the	the	DET	DT	Definite=Def|PronType=Art	22	_	_	start_char=1689|end_char=1692
24	negative	negative	ADJ	JJ	Degree=Pos	23	_	_	start_char=1693|end_char=1701
25	class	class	NOUN	NN	Number=Sing	24	_	_	SpaceAfter=No|start_char=1702|end_char=1707
26	,	,	PUNCT	,	_	25	_	_	start_char=1707|end_char=1708
27	the	the	DET	DT	Definite=Def|PronType=Art	26	_	_	start_char=1709|end_char=1712
28	likelihood	likelihood	NOUN	NN	Number=Sing	27	_	_	start_char=1713|end_char=1723
29	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	28	_	_	start_char=1724|end_char=1726
30	given	give	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	29	_	_	start_char=1727|end_char=1732
31	by	by	ADP	IN	_	30	_	_	start_char=1733|end_char=1735
32	the	the	DET	DT	Definite=Def|PronType=Art	31	_	_	start_char=1736|end_char=1739
33	product	product	NOUN	NN	Number=Sing	32	_	_	start_char=1740|end_char=1747
34	of	of	ADP	IN	_	33	_	_	start_char=1748|end_char=1750
35	all	all	DET	DT	PronType=Tot	34	_	_	start_char=1751|end_char=1754
36	points	point	NOUN	NNS	Number=Plur	35	_	_	start_char=1755|end_char=1761
37	probabilities	probability	NOUN	NNS	Number=Plur	36	_	_	start_char=1762|end_char=1775
38	l	l	NOUN	NN	Number=Sing	37	_	_	SpaceAfter=No|start_char=1776|end_char=1777
39	(	(	PUNCT	-LRB-	_	38	_	_	SpaceAfter=No|start_char=1777|end_char=1778
40	β	β	NOUN	NN	Number=Sing	39	_	_	SpaceAfter=No|start_char=1778|end_char=1779
41	)	)	PUNCT	-RRB-	_	40	_	_	start_char=1779|end_char=1780
42	=	=	SYM	SYM	_	41	_	_	start_char=1781|end_char=1782
43	n	and	CCONJ	CC	_	42	_	_	start_char=1783|end_char=1784
44	1	1	NUM	CD	NumForm=Digit|NumType=Card	43	_	_	start_char=1785|end_char=1786
45	p(	p(	NOUN	NN	Number=Plur	44	_	_	SpaceAfter=No|start_char=1787|end_char=1789
46	x	x	NOUN	NN	Number=Sing	45	_	_	start_char=1789|end_char=1790
47	i	i	NOUN	NN	Number=Sing	46	_	_	start_char=1791|end_char=1792
48	,	,	PUNCT	,	_	47	_	_	start_char=1793|end_char=1794
49	β	β	NOUN	NN	Number=Sing	48	_	_	SpaceAfter=No|start_char=1795|end_char=1796
50	)	)	PUNCT	-RRB-	_	49	_	_	start_char=1796|end_char=1797
51	n	and	CCONJ	CC	_	50	_	_	start_char=1798|end_char=1799
52	2	2	NUM	CD	NumForm=Digit|NumType=Card	51	_	_	start_char=1800|end_char=1801
53	(	(	PUNCT	-LRB-	_	52	_	_	SpaceAfter=No|start_char=1802|end_char=1803
54	1	1	NUM	CD	NumForm=Digit|NumType=Card	53	_	_	start_char=1803|end_char=1804
55	-	-	SYM	SYM	_	54	_	_	SpaceAfter=No|start_char=1805|end_char=1806
56	p(	p(	NOUN	NN	Number=Sing	55	_	_	SpaceAfter=No|start_char=1806|end_char=1808
57	x	x	NOUN	NN	Number=Sing	56	_	_	start_char=1808|end_char=1809
58	i	i	NOUN	NN	Number=Sing	57	_	_	start_char=1810|end_char=1811
59	,	,	PUNCT	,	_	58	_	_	start_char=1812|end_char=1813
60	β	β	NOUN	NN	Number=Sing	59	_	_	SpaceAfter=No|start_char=1814|end_char=1815
61	)	)	PUNCT	-RRB-	_	60	_	_	SpaceAfter=No|start_char=1815|end_char=1816
62	)	)	PUNCT	-RRB-	_	61	_	_	start_char=1816|end_char=1817
63	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	62	_	_	start_char=1818|end_char=1820
64	want	want	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	63	_	_	start_char=1821|end_char=1825
65	to	to	PART	TO	_	64	_	_	start_char=1826|end_char=1828
66	maximize	maximize	VERB	VB	VerbForm=Inf	65	_	_	start_char=1829|end_char=1837
67	the	the	DET	DT	Definite=Def|PronType=Art	66	_	_	start_char=1838|end_char=1841
68	likelihood	likelihood	NOUN	NN	Number=Sing	67	_	_	start_char=1842|end_char=1852
69	of	of	ADP	IN	_	68	_	_	start_char=1853|end_char=1855
70	the	the	DET	DT	Definite=Def|PronType=Art	69	_	_	start_char=1856|end_char=1859
71	data	datum	NOUN	NNS	Number=Plur	70	_	_	SpaceAfter=No|start_char=1860|end_char=1864
72	,	,	PUNCT	,	_	71	_	_	start_char=1864|end_char=1865
73	but	but	CCONJ	CC	_	72	_	_	start_char=1866|end_char=1869
74	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	73	_	_	start_char=1870|end_char=1872
75	usually	usually	ADV	RB	_	74	_	_	start_char=1873|end_char=1880
76	maximize	maximize	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	75	_	_	start_char=1881|end_char=1889
77	the	the	DET	DT	Definite=Def|PronType=Art	76	_	_	start_char=1890|end_char=1893
78	log	log	NOUN	NN	Number=Sing	77	_	_	SpaceAfter=No|start_char=1894|end_char=1897
79	-	-	PUNCT	HYPH	_	78	_	_	SpaceAfter=No|start_char=1897|end_char=1898
80	likelihood	likelihood	NOUN	NN	Number=Sing	79	_	_	SpaceAfter=No|start_char=1898|end_char=1908
81	,	,	PUNCT	,	_	80	_	_	start_char=1908|end_char=1909
82	since	since	SCONJ	IN	_	81	_	_	start_char=1910|end_char=1915
83	the	the	DET	DT	Definite=Def|PronType=Art	82	_	_	start_char=1916|end_char=1919
84	logarithm	logarithm	NOUN	NN	Number=Sing	83	_	_	start_char=1920|end_char=1929
85	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	84	_	_	start_char=1930|end_char=1932
86	a	a	DET	DT	Definite=Ind|PronType=Art	85	_	_	start_char=1933|end_char=1934
87	monotonic	monotonic	ADJ	JJ	Degree=Pos	86	_	_	start_char=1935|end_char=1944
88	function	function	NOUN	NN	Number=Sing	87	_	_	SpaceAfter=No|start_char=1945|end_char=1953
89	.	.	PUNCT	.	_	88	_	_	start_char=1953|end_char=1954

# text = the log-likelihood of the data is obtained taking the logarithm of l(β).
# sent_id = 10
1	the	the	DET	DT	Definite=Def|PronType=Art	0	_	_	start_char=1955|end_char=1958
2	log	log	NOUN	NN	Number=Sing	1	_	_	SpaceAfter=No|start_char=1959|end_char=1962
3	-	-	PUNCT	HYPH	_	2	_	_	SpaceAfter=No|start_char=1962|end_char=1963
4	likelihood	likelihood	NOUN	NN	Number=Sing	3	_	_	start_char=1963|end_char=1973
5	of	of	ADP	IN	_	4	_	_	start_char=1974|end_char=1976
6	the	the	DET	DT	Definite=Def|PronType=Art	5	_	_	start_char=1977|end_char=1980
7	data	datum	NOUN	NNS	Number=Plur	6	_	_	start_char=1981|end_char=1985
8	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	_	_	start_char=1986|end_char=1988
9	obtained	obtain	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	8	_	_	start_char=1989|end_char=1997
10	taking	take	VERB	VBG	VerbForm=Ger	9	_	_	start_char=1998|end_char=2004
11	the	the	DET	DT	Definite=Def|PronType=Art	10	_	_	start_char=2005|end_char=2008
12	logarithm	logarithm	NOUN	NN	Number=Sing	11	_	_	start_char=2009|end_char=2018
13	of	of	ADP	IN	_	12	_	_	start_char=2019|end_char=2021
14	l	l	PROPN	NNP	Number=Sing	13	_	_	SpaceAfter=No|start_char=2022|end_char=2023
15	(	(	PUNCT	-LRB-	_	14	_	_	SpaceAfter=No|start_char=2023|end_char=2024
16	β	β	NOUN	NN	Number=Sing	15	_	_	SpaceAfter=No|start_char=2024|end_char=2025
17	)	)	PUNCT	-RRB-	_	16	_	_	SpaceAfter=No|start_char=2025|end_char=2026
18	.	.	PUNCT	.	_	17	_	_	start_char=2026|end_char=2027

# text = the products transform into sums of logarithms of the probabilities: ℓ(β) = n 1 β t x i - n 1 log(1 + exp(β t x i )) - n 2 log(1 + exp(β t x i )) which can be simplified to ℓ(β) = n y i β t x i - n log(1 + exp(β t x i )) where n = n 1 + n 2 and y i = 0 for all points in the negative class.
# sent_id = 11
1	the	the	DET	DT	Definite=Def|PronType=Art	0	_	_	start_char=2028|end_char=2031
2	products	product	NOUN	NNS	Number=Plur	1	_	_	start_char=2032|end_char=2040
3	transform	transform	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	2	_	_	start_char=2041|end_char=2050
4	into	into	ADP	IN	_	3	_	_	start_char=2051|end_char=2055
5	sums	sum	NOUN	NNS	Number=Plur	4	_	_	start_char=2056|end_char=2060
6	of	of	ADP	IN	_	5	_	_	start_char=2061|end_char=2063
7	logarithms	logarithm	NOUN	NNS	Number=Plur	6	_	_	start_char=2064|end_char=2074
8	of	of	ADP	IN	_	7	_	_	start_char=2075|end_char=2077
9	the	the	DET	DT	Definite=Def|PronType=Art	8	_	_	start_char=2078|end_char=2081
10	probabilities	probability	NOUN	NNS	Number=Plur	9	_	_	SpaceAfter=No|start_char=2082|end_char=2095
11	:	:	PUNCT	:	_	10	_	_	start_char=2095|end_char=2096
12	ℓ	ℓ	PUNCT	NFP	_	11	_	_	SpaceAfter=No|start_char=2097|end_char=2098
13	(	(	PUNCT	-LRB-	_	12	_	_	SpaceAfter=No|start_char=2098|end_char=2099
14	β	β	NOUN	NN	Number=Sing	13	_	_	SpaceAfter=No|start_char=2099|end_char=2100
15	)	)	PUNCT	-RRB-	_	14	_	_	start_char=2100|end_char=2101
16	=	=	SYM	SYM	_	15	_	_	start_char=2102|end_char=2103
17	n	n	NOUN	NN	Number=Sing	16	_	_	start_char=2104|end_char=2105
18	1	1	NUM	CD	NumForm=Digit|NumType=Card	17	_	_	start_char=2106|end_char=2107
19	β	β	NOUN	NN	Number=Sing	18	_	_	start_char=2108|end_char=2109
20	t	t	NOUN	NN	Number=Sing	19	_	_	start_char=2110|end_char=2111
21	x	x	NOUN	NN	Number=Sing	20	_	_	start_char=2112|end_char=2113
22	i	i	NOUN	NN	Number=Sing	21	_	_	start_char=2114|end_char=2115
23	-	-	PUNCT	HYPH	_	22	_	_	start_char=2116|end_char=2117
24	n	n	NOUN	NN	Number=Sing	23	_	_	start_char=2118|end_char=2119
25	1	1	NUM	CD	NumForm=Digit|NumType=Card	24	_	_	start_char=2120|end_char=2121
26	log	log	NOUN	NN	Number=Sing	25	_	_	SpaceAfter=No|start_char=2122|end_char=2125
27	(	(	PUNCT	-LRB-	_	26	_	_	SpaceAfter=No|start_char=2125|end_char=2126
28	1	1	NUM	CD	NumForm=Digit|NumType=Card	27	_	_	start_char=2126|end_char=2127
29	+	+	SYM	SYM	_	28	_	_	start_char=2128|end_char=2129
30	exp	exp	NOUN	NN	Number=Sing	29	_	_	SpaceAfter=No|start_char=2130|end_char=2133
31	(	(	PUNCT	-LRB-	_	30	_	_	SpaceAfter=No|start_char=2133|end_char=2134
32	β	β	NOUN	NN	Number=Sing	31	_	_	start_char=2134|end_char=2135
33	t	t	NOUN	NN	Number=Sing	32	_	_	start_char=2136|end_char=2137
34	x	x	NOUN	NN	Number=Sing	33	_	_	start_char=2138|end_char=2139
35	i	i	NOUN	NN	Number=Sing	34	_	_	start_char=2140|end_char=2141
36	)	)	PUNCT	-RRB-	_	35	_	_	SpaceAfter=No|start_char=2142|end_char=2143
37	)	)	PUNCT	-RRB-	_	36	_	_	start_char=2143|end_char=2144
38	-	-	PUNCT	,	_	37	_	_	start_char=2145|end_char=2146
39	n	n	NOUN	NN	Number=Sing	38	_	_	start_char=2147|end_char=2148
40	2	2	NUM	CD	NumForm=Digit|NumType=Card	39	_	_	start_char=2149|end_char=2150
41	log	log	NOUN	NN	Number=Sing	40	_	_	SpaceAfter=No|start_char=2151|end_char=2154
42	(	(	PUNCT	-LRB-	_	41	_	_	SpaceAfter=No|start_char=2154|end_char=2155
43	1	1	NUM	CD	NumForm=Digit|NumType=Card	42	_	_	start_char=2155|end_char=2156
44	+	+	SYM	SYM	_	43	_	_	start_char=2157|end_char=2158
45	exp	exp	NOUN	NN	Number=Sing	44	_	_	SpaceAfter=No|start_char=2159|end_char=2162
46	(	(	PUNCT	-LRB-	_	45	_	_	SpaceAfter=No|start_char=2162|end_char=2163
47	β	β	NOUN	NN	Number=Sing	46	_	_	start_char=2163|end_char=2164
48	t	t	NOUN	NN	Number=Sing	47	_	_	start_char=2165|end_char=2166
49	x	x	NOUN	NN	Number=Sing	48	_	_	start_char=2167|end_char=2168
50	i	i	NOUN	NN	Number=Sing	49	_	_	start_char=2169|end_char=2170
51	)	)	PUNCT	-RRB-	_	50	_	_	SpaceAfter=No|start_char=2171|end_char=2172
52	)	)	PUNCT	-RRB-	_	51	_	_	start_char=2172|end_char=2173
53	which	which	PRON	WDT	PronType=Rel	52	_	_	start_char=2174|end_char=2179
54	can	can	AUX	MD	VerbForm=Fin	53	_	_	start_char=2180|end_char=2183
55	be	be	AUX	VB	VerbForm=Inf	54	_	_	start_char=2184|end_char=2186
56	simplified	simplify	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	55	_	_	start_char=2187|end_char=2197
57	to	to	ADP	IN	_	56	_	_	start_char=2198|end_char=2200
58	ℓ	ℓ	PUNCT	``	_	57	_	_	SpaceAfter=No|start_char=2201|end_char=2202
59	(	(	PUNCT	-LRB-	_	58	_	_	SpaceAfter=No|start_char=2202|end_char=2203
60	β	β	NOUN	NN	Number=Sing	59	_	_	SpaceAfter=No|start_char=2203|end_char=2204
61	)	)	PUNCT	-RRB-	_	60	_	_	start_char=2204|end_char=2205
62	=	=	PUNCT	,	_	61	_	_	start_char=2206|end_char=2207
63	n	and	X	FW	_	62	_	_	start_char=2208|end_char=2209
64	y	y	X	FW	_	63	_	_	start_char=2210|end_char=2211
65	i	i	NOUN	NN	Number=Sing	64	_	_	start_char=2212|end_char=2213
66	β	β	NOUN	NN	Number=Sing	65	_	_	start_char=2214|end_char=2215
67	t	t	NOUN	NN	Number=Sing	66	_	_	start_char=2216|end_char=2217
68	x	x	NOUN	NN	Number=Sing	67	_	_	start_char=2218|end_char=2219
69	i	i	NOUN	NN	Number=Sing	68	_	_	start_char=2220|end_char=2221
70	-	-	PUNCT	HYPH	_	69	_	_	start_char=2222|end_char=2223
71	n	n	NOUN	NN	Number=Sing	70	_	_	start_char=2224|end_char=2225
72	log	log	NOUN	NN	Number=Sing	71	_	_	SpaceAfter=No|start_char=2226|end_char=2229
73	(	(	PUNCT	-LRB-	_	72	_	_	SpaceAfter=No|start_char=2229|end_char=2230
74	1	1	NUM	CD	NumForm=Digit|NumType=Card	73	_	_	start_char=2230|end_char=2231
75	+	+	SYM	SYM	_	74	_	_	start_char=2232|end_char=2233
76	exp	exp	NOUN	NN	Number=Sing	75	_	_	SpaceAfter=No|start_char=2234|end_char=2237
77	(	(	PUNCT	-LRB-	_	76	_	_	SpaceAfter=No|start_char=2237|end_char=2238
78	β	β	NOUN	NN	Number=Sing	77	_	_	start_char=2238|end_char=2239
79	t	t	NOUN	NN	Number=Sing	78	_	_	start_char=2240|end_char=2241
80	x	x	NOUN	NN	Number=Sing	79	_	_	start_char=2242|end_char=2243
81	i	i	NOUN	NN	Number=Sing	80	_	_	start_char=2244|end_char=2245
82	)	)	PUNCT	-RRB-	_	81	_	_	SpaceAfter=No|start_char=2246|end_char=2247
83	)	)	PUNCT	-RRB-	_	82	_	_	start_char=2247|end_char=2248
84	where	where	ADV	WRB	PronType=Int	83	_	_	start_char=2249|end_char=2254
85	n	n	NOUN	NN	Number=Sing	84	_	_	start_char=2255|end_char=2256
86	=	=	SYM	SYM	_	85	_	_	start_char=2257|end_char=2258
87	n	n	NOUN	NN	Number=Sing	86	_	_	start_char=2259|end_char=2260
88	1	1	NUM	CD	NumForm=Digit|NumType=Card	87	_	_	start_char=2261|end_char=2262
89	+	+	SYM	SYM	_	88	_	_	start_char=2263|end_char=2264
90	n	n	NOUN	NN	Number=Sing	89	_	_	start_char=2265|end_char=2266
91	2	2	NUM	CD	NumForm=Digit|NumType=Card	90	_	_	start_char=2267|end_char=2268
92	and	and	CCONJ	CC	_	91	_	_	start_char=2269|end_char=2272
93	y	y	NOUN	NN	Number=Sing	92	_	_	start_char=2273|end_char=2274
94	i	i	NOUN	NN	Number=Sing	93	_	_	start_char=2275|end_char=2276
95	=	=	SYM	SYM	_	94	_	_	start_char=2277|end_char=2278
96	0	0	NUM	CD	NumForm=Digit|NumType=Card	95	_	_	start_char=2279|end_char=2280
97	for	for	ADP	IN	_	96	_	_	start_char=2281|end_char=2284
98	all	all	DET	DT	PronType=Tot	97	_	_	start_char=2285|end_char=2288
99	points	point	NOUN	NNS	Number=Plur	98	_	_	start_char=2289|end_char=2295
100	in	in	ADP	IN	_	99	_	_	start_char=2296|end_char=2298
101	the	the	DET	DT	Definite=Def|PronType=Art	100	_	_	start_char=2299|end_char=2302
102	negative	negative	ADJ	JJ	Degree=Pos	101	_	_	start_char=2303|end_char=2311
103	class	class	NOUN	NN	Number=Sing	102	_	_	SpaceAfter=No|start_char=2312|end_char=2317
104	.	.	PUNCT	.	_	103	_	_	start_char=2317|end_char=2318

# text = if we want to find the best parameter β we could set the gradient of ℓ(β) to zero and solve for β. however the nonlinear function makes an analytic solution very difficult.
# sent_id = 12
1	if	if	SCONJ	IN	_	0	_	_	start_char=2319|end_char=2321
2	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	1	_	_	start_char=2322|end_char=2324
3	want	want	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	2	_	_	start_char=2325|end_char=2329
4	to	to	PART	TO	_	3	_	_	start_char=2330|end_char=2332
5	find	find	VERB	VB	VerbForm=Inf	4	_	_	start_char=2333|end_char=2337
6	the	the	DET	DT	Definite=Def|PronType=Art	5	_	_	start_char=2338|end_char=2341
7	best	good	ADJ	JJS	Degree=Sup	6	_	_	start_char=2342|end_char=2346
8	parameter	parameter	NOUN	NN	Number=Sing	7	_	_	start_char=2347|end_char=2356
9	β	β	NOUN	NN	Number=Sing	8	_	_	start_char=2357|end_char=2358
10	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	9	_	_	start_char=2359|end_char=2361
11	could	could	AUX	MD	VerbForm=Fin	10	_	_	start_char=2362|end_char=2367
12	set	set	VERB	VB	VerbForm=Inf	11	_	_	start_char=2368|end_char=2371
13	the	the	DET	DT	Definite=Def|PronType=Art	12	_	_	start_char=2372|end_char=2375
14	gradient	gradient	NOUN	NN	Number=Sing	13	_	_	start_char=2376|end_char=2384
15	of	of	ADP	IN	_	14	_	_	start_char=2385|end_char=2387
16	ℓ	ℓ	NOUN	NN	Number=Sing	15	_	_	SpaceAfter=No|start_char=2388|end_char=2389
17	(	(	PUNCT	-LRB-	_	16	_	_	SpaceAfter=No|start_char=2389|end_char=2390
18	β	β	NOUN	NN	Number=Sing	17	_	_	SpaceAfter=No|start_char=2390|end_char=2391
19	)	)	PUNCT	-RRB-	_	18	_	_	start_char=2391|end_char=2392
20	to	to	ADP	IN	_	19	_	_	start_char=2393|end_char=2395
21	zero	zero	NUM	CD	NumForm=Word|NumType=Card	20	_	_	start_char=2396|end_char=2400
22	and	and	CCONJ	CC	_	21	_	_	start_char=2401|end_char=2404
23	solve	solve	VERB	VB	VerbForm=Inf	22	_	_	start_char=2405|end_char=2410
24	for	for	ADP	IN	_	23	_	_	start_char=2411|end_char=2414
25	β.	β.	PUNCT	,	_	24	_	_	start_char=2415|end_char=2417
26	however	however	ADV	WRB	PronType=Int	25	_	_	start_char=2418|end_char=2425
27	the	the	DET	DT	Definite=Def|PronType=Art	26	_	_	start_char=2426|end_char=2429
28	nonlinear	nonlinear	ADJ	JJ	Degree=Pos	27	_	_	start_char=2430|end_char=2439
29	function	function	NOUN	NN	Number=Sing	28	_	_	start_char=2440|end_char=2448
30	makes	make	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	29	_	_	start_char=2449|end_char=2454
31	an	a	DET	DT	Definite=Ind|PronType=Art	30	_	_	start_char=2455|end_char=2457
32	analytic	analytic	ADJ	JJ	Degree=Pos	31	_	_	start_char=2458|end_char=2466
33	solution	solution	NOUN	NN	Number=Sing	32	_	_	start_char=2467|end_char=2475
34	very	very	ADV	RB	_	33	_	_	start_char=2476|end_char=2480
35	difficult	difficult	ADJ	JJ	Degree=Pos	34	_	_	SpaceAfter=No|start_char=2481|end_char=2490
36	.	.	PUNCT	.	_	35	_	_	start_char=2490|end_char=2491

# text = therefore we can try to maximize ℓ(β) numerically, using gradient ascent.
# sent_id = 13
1	therefore	therefore	ADV	RB	_	0	_	_	start_char=2492|end_char=2501
2	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	1	_	_	start_char=2502|end_char=2504
3	can	can	AUX	MD	VerbForm=Fin	2	_	_	start_char=2505|end_char=2508
4	try	try	VERB	VB	VerbForm=Inf	3	_	_	start_char=2509|end_char=2512
5	to	to	PART	TO	_	4	_	_	start_char=2513|end_char=2515
6	maximize	maximize	VERB	VB	VerbForm=Inf	5	_	_	start_char=2516|end_char=2524
7	ℓ	ℓ	PUNCT	:	_	6	_	_	SpaceAfter=No|start_char=2525|end_char=2526
8	(	(	PUNCT	-LRB-	_	7	_	_	SpaceAfter=No|start_char=2526|end_char=2527
9	β	β	NOUN	NN	Number=Sing	8	_	_	SpaceAfter=No|start_char=2527|end_char=2528
10	)	)	PUNCT	-RRB-	_	9	_	_	start_char=2528|end_char=2529
11	numerically	numerically	ADV	RB	_	10	_	_	SpaceAfter=No|start_char=2530|end_char=2541
12	,	,	PUNCT	,	_	11	_	_	start_char=2541|end_char=2542
13	using	use	VERB	VBG	Tense=Pres|VerbForm=Part	12	_	_	start_char=2543|end_char=2548
14	gradient	gradient	NOUN	NN	Number=Sing	13	_	_	start_char=2549|end_char=2557
15	ascent	ascent	NOUN	NN	Number=Sing	14	_	_	SpaceAfter=No|start_char=2558|end_char=2564
16	.	.	PUNCT	.	_	15	_	_	start_char=2564|end_char=2565

# text = therefore we compute the derivative of ℓ(β) relative to the vector β: ∇ℓ(β) = n (y i x i -(exp(β t x i )x i )/(1 + exp(β t x i ) which reduces to ∇ℓ(β) = n (y i x i -p(x i , β)x i ) = n x i (y i -p(x i , β)) this is a very interesting expression.
# sent_id = 14
1	therefore	therefore	ADV	RB	_	0	_	_	start_char=2566|end_char=2575
2	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	1	_	_	start_char=2576|end_char=2578
3	compute	compute	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	2	_	_	start_char=2579|end_char=2586
4	the	the	DET	DT	Definite=Def|PronType=Art	3	_	_	start_char=2587|end_char=2590
5	derivative	derivative	NOUN	NN	Number=Sing	4	_	_	start_char=2591|end_char=2601
6	of	of	ADP	IN	_	5	_	_	start_char=2602|end_char=2604
7	ℓ	ℓ	PUNCT	``	_	6	_	_	SpaceAfter=No|start_char=2605|end_char=2606
8	(	(	PUNCT	-LRB-	_	7	_	_	SpaceAfter=No|start_char=2606|end_char=2607
9	β	β	NOUN	NN	Number=Sing	8	_	_	SpaceAfter=No|start_char=2607|end_char=2608
10	)	)	PUNCT	-RRB-	_	9	_	_	start_char=2608|end_char=2609
11	relative	relative	ADJ	JJ	Degree=Pos	10	_	_	start_char=2610|end_char=2618
12	to	to	ADP	IN	_	11	_	_	start_char=2619|end_char=2621
13	the	the	DET	DT	Definite=Def|PronType=Art	12	_	_	start_char=2622|end_char=2625
14	vector	vector	NOUN	NN	Number=Sing	13	_	_	start_char=2626|end_char=2632
15	β	β	NOUN	NN	Number=Sing	14	_	_	SpaceAfter=No|start_char=2633|end_char=2634
16	:	:	PUNCT	:	_	15	_	_	start_char=2634|end_char=2635
17	∇ℓ(	∇ℓ(	PUNCT	-LRB-	_	16	_	_	SpaceAfter=No|start_char=2636|end_char=2639
18	β	β	NOUN	NN	Number=Sing	17	_	_	SpaceAfter=No|start_char=2639|end_char=2640
19	)	)	PUNCT	-RRB-	_	18	_	_	start_char=2640|end_char=2641
20	=	=	SYM	SYM	_	19	_	_	start_char=2642|end_char=2643
21	n	n	NOUN	NN	Number=Sing	20	_	_	start_char=2644|end_char=2645
22	(	(	PUNCT	-LRB-	_	21	_	_	SpaceAfter=No|start_char=2646|end_char=2647
23	y	y	X	FW	_	22	_	_	start_char=2647|end_char=2648
24	i	i	NOUN	NN	Number=Sing	23	_	_	start_char=2649|end_char=2650
25	x	x	NOUN	NN	Number=Sing	24	_	_	start_char=2651|end_char=2652
26	i	i	NOUN	NN	Number=Sing	25	_	_	start_char=2653|end_char=2654
27	-(	-(	PUNCT	,	_	26	_	_	SpaceAfter=No|start_char=2655|end_char=2657
28	exp	exp	NOUN	NN	Number=Sing	27	_	_	SpaceAfter=No|start_char=2657|end_char=2660
29	(	(	PUNCT	-LRB-	_	28	_	_	SpaceAfter=No|start_char=2660|end_char=2661
30	β	β	NOUN	NN	Number=Sing	29	_	_	start_char=2661|end_char=2662
31	t	t	NOUN	NN	Number=Sing	30	_	_	start_char=2663|end_char=2664
32	x	x	NOUN	NN	Number=Sing	31	_	_	start_char=2665|end_char=2666
33	i	i	NOUN	NN	Number=Sing	32	_	_	start_char=2667|end_char=2668
34	)	)	PUNCT	-RRB-	_	33	_	_	SpaceAfter=No|start_char=2669|end_char=2670
35	x	x	NOUN	NN	Number=Sing	34	_	_	start_char=2670|end_char=2671
36	i	i	NOUN	NN	Number=Sing	35	_	_	start_char=2672|end_char=2673
37	)	)	PUNCT	-RRB-	_	36	_	_	SpaceAfter=No|start_char=2674|end_char=2675
38	/(	/(	SYM	SYM	_	37	_	_	SpaceAfter=No|start_char=2675|end_char=2677
39	1	1	NUM	CD	NumForm=Digit|NumType=Card	38	_	_	start_char=2677|end_char=2678
40	+	+	SYM	SYM	_	39	_	_	start_char=2679|end_char=2680
41	exp	exp	NOUN	NN	Number=Sing	40	_	_	SpaceAfter=No|start_char=2681|end_char=2684
42	(	(	PUNCT	-LRB-	_	41	_	_	SpaceAfter=No|start_char=2684|end_char=2685
43	β	β	NOUN	NN	Number=Sing	42	_	_	start_char=2685|end_char=2686
44	t	t	NOUN	NN	Number=Sing	43	_	_	start_char=2687|end_char=2688
45	x	x	NOUN	NN	Number=Sing	44	_	_	start_char=2689|end_char=2690
46	i	i	NOUN	NN	Number=Sing	45	_	_	start_char=2691|end_char=2692
47	)	)	PUNCT	-RRB-	_	46	_	_	start_char=2693|end_char=2694
48	which	which	PRON	WDT	PronType=Rel	47	_	_	start_char=2695|end_char=2700
49	reduces	reduce	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	48	_	_	start_char=2701|end_char=2708
50	to	to	ADP	IN	_	49	_	_	start_char=2709|end_char=2711
51	∇ℓ(	∇ℓ(	PUNCT	-LRB-	_	50	_	_	SpaceAfter=No|start_char=2712|end_char=2715
52	β	β	NOUN	NN	Number=Sing	51	_	_	SpaceAfter=No|start_char=2715|end_char=2716
53	)	)	PUNCT	-RRB-	_	52	_	_	start_char=2716|end_char=2717
54	=	=	SYM	SYM	_	53	_	_	start_char=2718|end_char=2719
55	n	n	NOUN	NN	Number=Sing	54	_	_	start_char=2720|end_char=2721
56	(	(	PUNCT	-LRB-	_	55	_	_	SpaceAfter=No|start_char=2722|end_char=2723
57	y	y	X	FW	_	56	_	_	start_char=2723|end_char=2724
58	i	i	NOUN	NN	Number=Sing	57	_	_	start_char=2725|end_char=2726
59	x	x	NOUN	NN	Number=Sing	58	_	_	start_char=2727|end_char=2728
60	i	i	NOUN	NN	Number=Sing	59	_	_	start_char=2729|end_char=2730
61	-	-	PUNCT	HYPH	_	60	_	_	SpaceAfter=No|start_char=2731|end_char=2732
62	p(	p(	NOUN	NN	Number=Sing	61	_	_	SpaceAfter=No|start_char=2732|end_char=2734
63	x	x	NOUN	NN	Number=Sing	62	_	_	start_char=2734|end_char=2735
64	i	i	NOUN	NN	Number=Sing	63	_	_	start_char=2736|end_char=2737
65	,	,	PUNCT	,	_	64	_	_	start_char=2738|end_char=2739
66	β	β	NOUN	NN	Number=Sing	65	_	_	SpaceAfter=No|start_char=2740|end_char=2741
67	)	)	PUNCT	-RRB-	_	66	_	_	SpaceAfter=No|start_char=2741|end_char=2742
68	x	x	NOUN	NN	Number=Sing	67	_	_	start_char=2742|end_char=2743
69	i	i	NOUN	NN	Number=Sing	68	_	_	start_char=2744|end_char=2745
70	)	)	PUNCT	-RRB-	_	69	_	_	start_char=2746|end_char=2747
71	=	=	SYM	SYM	_	70	_	_	start_char=2748|end_char=2749
72	n	n	NOUN	NN	Number=Sing	71	_	_	start_char=2750|end_char=2751
73	x	x	NOUN	NN	Number=Sing	72	_	_	start_char=2752|end_char=2753
74	i	i	NOUN	NN	Number=Sing	73	_	_	start_char=2754|end_char=2755
75	(	(	PUNCT	-LRB-	_	74	_	_	SpaceAfter=No|start_char=2756|end_char=2757
76	y	y	X	FW	_	75	_	_	start_char=2757|end_char=2758
77	i	i	NOUN	NN	Number=Sing	76	_	_	start_char=2759|end_char=2760
78	-	-	PUNCT	HYPH	_	77	_	_	SpaceAfter=No|start_char=2761|end_char=2762
79	p(	p(	NOUN	NN	Number=Sing	78	_	_	SpaceAfter=No|start_char=2762|end_char=2764
80	x	x	NOUN	NN	Number=Sing	79	_	_	start_char=2764|end_char=2765
81	i	i	NOUN	NN	Number=Sing	80	_	_	start_char=2766|end_char=2767
82	,	,	PUNCT	,	_	81	_	_	start_char=2768|end_char=2769
83	β	β	NOUN	NN	Number=Sing	82	_	_	SpaceAfter=No|start_char=2770|end_char=2771
84	)	)	PUNCT	-RRB-	_	83	_	_	SpaceAfter=No|start_char=2771|end_char=2772
85	)	)	PUNCT	-RRB-	_	84	_	_	start_char=2772|end_char=2773
86	this	this	PRON	DT	Number=Sing|PronType=Dem	85	_	_	start_char=2774|end_char=2778
87	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	86	_	_	start_char=2779|end_char=2781
88	a	a	DET	DT	Definite=Ind|PronType=Art	87	_	_	start_char=2782|end_char=2783
89	very	very	ADV	RB	_	88	_	_	start_char=2784|end_char=2788
90	interesting	interesting	ADJ	JJ	Degree=Pos	89	_	_	start_char=2789|end_char=2800
91	expression	expression	NOUN	NN	Number=Sing	90	_	_	SpaceAfter=No|start_char=2801|end_char=2811
92	.	.	PUNCT	.	_	91	_	_	start_char=2811|end_char=2812

# text = it essentially says that, when doing gradient ascent, the corrections to the vector β are computed in the following way: if x belongs to the positive class (y i = 1) but the probability p(x i , β) is low, we add the vector x i to β, weighted by y i -p(x i , β).
# sent_id = 15
1	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	0	_	_	start_char=2813|end_char=2815
2	essentially	essentially	ADV	RB	_	1	_	_	start_char=2816|end_char=2827
3	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	_	_	start_char=2828|end_char=2832
4	that	that	SCONJ	IN	_	3	_	_	SpaceAfter=No|start_char=2833|end_char=2837
5	,	,	PUNCT	,	_	4	_	_	start_char=2837|end_char=2838
6	when	when	ADV	WRB	PronType=Int	5	_	_	start_char=2839|end_char=2843
7	doing	do	VERB	VBG	Tense=Pres|VerbForm=Part	6	_	_	start_char=2844|end_char=2849
8	gradient	gradient	NOUN	NN	Number=Sing	7	_	_	start_char=2850|end_char=2858
9	ascent	ascent	NOUN	NN	Number=Sing	8	_	_	SpaceAfter=No|start_char=2859|end_char=2865
10	,	,	PUNCT	,	_	9	_	_	start_char=2865|end_char=2866
11	the	the	DET	DT	Definite=Def|PronType=Art	10	_	_	start_char=2867|end_char=2870
12	corrections	correction	NOUN	NNS	Number=Plur	11	_	_	start_char=2871|end_char=2882
13	to	to	ADP	IN	_	12	_	_	start_char=2883|end_char=2885
14	the	the	DET	DT	Definite=Def|PronType=Art	13	_	_	start_char=2886|end_char=2889
15	vector	vector	NOUN	NN	Number=Sing	14	_	_	start_char=2890|end_char=2896
16	β	β	NOUN	NN	Number=Sing	15	_	_	start_char=2897|end_char=2898
17	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	16	_	_	start_char=2899|end_char=2902
18	computed	compute	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	17	_	_	start_char=2903|end_char=2911
19	in	in	ADP	IN	_	18	_	_	start_char=2912|end_char=2914
20	the	the	DET	DT	Definite=Def|PronType=Art	19	_	_	start_char=2915|end_char=2918
21	following	follow	VERB	VBG	VerbForm=Ger	20	_	_	start_char=2919|end_char=2928
22	way	way	NOUN	NN	Number=Sing	21	_	_	SpaceAfter=No|start_char=2929|end_char=2932
23	:	:	PUNCT	:	_	22	_	_	start_char=2932|end_char=2933
24	if	if	SCONJ	IN	_	23	_	_	start_char=2934|end_char=2936
25	x	x	NOUN	NN	Number=Sing	24	_	_	start_char=2937|end_char=2938
26	belongs	belong	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	25	_	_	start_char=2939|end_char=2946
27	to	to	ADP	IN	_	26	_	_	start_char=2947|end_char=2949
28	the	the	DET	DT	Definite=Def|PronType=Art	27	_	_	start_char=2950|end_char=2953
29	positive	positive	ADJ	JJ	Degree=Pos	28	_	_	start_char=2954|end_char=2962
30	class	class	NOUN	NN	Number=Sing	29	_	_	start_char=2963|end_char=2968
31	(	(	PUNCT	-LRB-	_	30	_	_	SpaceAfter=No|start_char=2969|end_char=2970
32	y	y	NOUN	NN	Number=Sing	31	_	_	start_char=2970|end_char=2971
33	i	i	NOUN	NN	Number=Sing	32	_	_	start_char=2972|end_char=2973
34	=	=	SYM	SYM	_	33	_	_	start_char=2974|end_char=2975
35	1	1	NUM	LS	NumForm=Digit|NumType=Card	34	_	_	SpaceAfter=No|start_char=2976|end_char=2977
36	)	)	PUNCT	-RRB-	_	35	_	_	start_char=2977|end_char=2978
37	but	but	CCONJ	CC	_	36	_	_	start_char=2979|end_char=2982
38	the	the	DET	DT	Definite=Def|PronType=Art	37	_	_	start_char=2983|end_char=2986
39	probability	probability	NOUN	NN	Number=Sing	38	_	_	start_char=2987|end_char=2998
40	p(x	p(x	NOUN	NN	Number=Sing	39	_	_	start_char=2999|end_char=3002
41	i	i	NOUN	NN	Number=Sing	40	_	_	start_char=3003|end_char=3004
42	,	,	PUNCT	,	_	41	_	_	start_char=3005|end_char=3006
43	β	β	NOUN	NN	Number=Sing	42	_	_	SpaceAfter=No|start_char=3007|end_char=3008
44	)	)	PUNCT	-RRB-	_	43	_	_	start_char=3008|end_char=3009
45	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	44	_	_	start_char=3010|end_char=3012
46	low	low	ADJ	JJ	Degree=Pos	45	_	_	SpaceAfter=No|start_char=3013|end_char=3016
47	,	,	PUNCT	,	_	46	_	_	start_char=3016|end_char=3017
48	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	47	_	_	start_char=3018|end_char=3020
49	add	add	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	48	_	_	start_char=3021|end_char=3024
50	the	the	DET	DT	Definite=Def|PronType=Art	49	_	_	start_char=3025|end_char=3028
51	vector	vector	NOUN	NN	Number=Sing	50	_	_	start_char=3029|end_char=3035
52	x	x	NOUN	NN	Number=Sing	51	_	_	start_char=3036|end_char=3037
53	i	i	NOUN	NN	Number=Sing	52	_	_	start_char=3038|end_char=3039
54	to	to	ADP	IN	_	53	_	_	start_char=3040|end_char=3042
55	β	β	NOUN	NN	Number=Sing	54	_	_	SpaceAfter=No|start_char=3043|end_char=3044
56	,	,	PUNCT	,	_	55	_	_	start_char=3044|end_char=3045
57	weighted	weight	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	56	_	_	start_char=3046|end_char=3054
58	by	by	ADP	IN	_	57	_	_	start_char=3055|end_char=3057
59	y	y	NOUN	NN	Number=Sing	58	_	_	start_char=3058|end_char=3059
60	i	i	NOUN	NN	Number=Sing	59	_	_	start_char=3060|end_char=3061
61	-	-	PUNCT	HYPH	_	60	_	_	SpaceAfter=No|start_char=3062|end_char=3063
62	p(	p(	NOUN	NN	Number=Sing	61	_	_	SpaceAfter=No|start_char=3063|end_char=3065
63	x	x	NOUN	NN	Number=Sing	62	_	_	start_char=3065|end_char=3066
64	i	i	NOUN	NN	Number=Sing	63	_	_	start_char=3067|end_char=3068
65	,	,	PUNCT	,	_	64	_	_	start_char=3069|end_char=3070
66	β	β	NOUN	NN	Number=Sing	65	_	_	SpaceAfter=No|start_char=3071|end_char=3072
67	)	)	PUNCT	-RRB-	_	66	_	_	SpaceAfter=No|start_char=3072|end_char=3073
68	.	.	PUNCT	.	_	67	_	_	start_char=3073|end_char=3074

# text = and conversely: if x belongs to the negative class (y i = 0) but the probability p(x i , β) is high, we subtract the vector x i from β, weighted by |y i -p(x i , β)|. this is the way the perceptron learning algorithm works, without the weights.
# sent_id = 16
1	and	and	CCONJ	CC	_	0	_	_	start_char=3075|end_char=3078
2	conversely	conversely	ADV	RB	_	1	_	_	SpaceAfter=No|start_char=3079|end_char=3089
3	:	:	PUNCT	:	_	2	_	_	start_char=3089|end_char=3090
4	if	if	SCONJ	IN	_	3	_	_	start_char=3091|end_char=3093
5	x	x	NOUN	NN	Number=Sing	4	_	_	start_char=3094|end_char=3095
6	belongs	belong	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	_	_	start_char=3096|end_char=3103
7	to	to	ADP	IN	_	6	_	_	start_char=3104|end_char=3106
8	the	the	DET	DT	Definite=Def|PronType=Art	7	_	_	start_char=3107|end_char=3110
9	negative	negative	ADJ	JJ	Degree=Pos	8	_	_	start_char=3111|end_char=3119
10	class	class	NOUN	NN	Number=Sing	9	_	_	start_char=3120|end_char=3125
11	(	(	PUNCT	-LRB-	_	10	_	_	SpaceAfter=No|start_char=3126|end_char=3127
12	y	y	NOUN	NN	Number=Sing	11	_	_	start_char=3127|end_char=3128
13	i	i	NOUN	NN	Number=Sing	12	_	_	start_char=3129|end_char=3130
14	=	=	SYM	SYM	_	13	_	_	start_char=3131|end_char=3132
15	0	0	NUM	CD	NumForm=Digit|NumType=Card	14	_	_	SpaceAfter=No|start_char=3133|end_char=3134
16	)	)	PUNCT	-RRB-	_	15	_	_	start_char=3134|end_char=3135
17	but	but	CCONJ	CC	_	16	_	_	start_char=3136|end_char=3139
18	the	the	DET	DT	Definite=Def|PronType=Art	17	_	_	start_char=3140|end_char=3143
19	probability	probability	NOUN	NN	Number=Sing	18	_	_	start_char=3144|end_char=3155
20	p(x	p(x	NOUN	NN	Number=Sing	19	_	_	start_char=3156|end_char=3159
21	i	i	NOUN	NN	Number=Sing	20	_	_	start_char=3160|end_char=3161
22	,	,	PUNCT	,	_	21	_	_	start_char=3162|end_char=3163
23	β	β	NOUN	NN	Number=Sing	22	_	_	SpaceAfter=No|start_char=3164|end_char=3165
24	)	)	PUNCT	-RRB-	_	23	_	_	start_char=3165|end_char=3166
25	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	24	_	_	start_char=3167|end_char=3169
26	high	high	ADJ	JJ	Degree=Pos	25	_	_	SpaceAfter=No|start_char=3170|end_char=3174
27	,	,	PUNCT	,	_	26	_	_	start_char=3174|end_char=3175
28	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	27	_	_	start_char=3176|end_char=3178
29	subtract	subtract	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	28	_	_	start_char=3179|end_char=3187
30	the	the	DET	DT	Definite=Def|PronType=Art	29	_	_	start_char=3188|end_char=3191
31	vector	vector	NOUN	NN	Number=Sing	30	_	_	start_char=3192|end_char=3198
32	x	x	NOUN	NN	Number=Sing	31	_	_	start_char=3199|end_char=3200
33	i	I	PRON	PRP	Case=Nom|Number=Sing|Person=1|PronType=Prs	32	_	_	start_char=3201|end_char=3202
34	from	from	ADP	IN	_	33	_	_	start_char=3203|end_char=3207
35	β	β	NOUN	NN	Number=Sing	34	_	_	SpaceAfter=No|start_char=3208|end_char=3209
36	,	,	PUNCT	,	_	35	_	_	start_char=3209|end_char=3210
37	weighted	weight	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	36	_	_	start_char=3211|end_char=3219
38	by	by	ADP	IN	_	37	_	_	start_char=3220|end_char=3222
39	|y	|y	NOUN	NN	Number=Sing	38	_	_	start_char=3223|end_char=3225
40	i	i	NOUN	NN	Number=Sing	39	_	_	start_char=3226|end_char=3227
41	-	-	PUNCT	HYPH	_	40	_	_	SpaceAfter=No|start_char=3228|end_char=3229
42	p(	p(	NOUN	NN	Number=Sing	41	_	_	SpaceAfter=No|start_char=3229|end_char=3231
43	x	x	NOUN	NN	Number=Sing	42	_	_	start_char=3231|end_char=3232
44	i	i	NOUN	NN	Number=Sing	43	_	_	start_char=3233|end_char=3234
45	,	,	PUNCT	,	_	44	_	_	start_char=3235|end_char=3236
46	β	β	NOUN	NN	Number=Sing	45	_	_	SpaceAfter=No|start_char=3237|end_char=3238
47	)	)	PUNCT	-RRB-	_	46	_	_	SpaceAfter=No|start_char=3238|end_char=3239
48	|.	|.	PUNCT	,	_	47	_	_	start_char=3239|end_char=3241
49	this	this	PRON	DT	Number=Sing|PronType=Dem	48	_	_	start_char=3242|end_char=3246
50	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	49	_	_	start_char=3247|end_char=3249
51	the	the	DET	DT	Definite=Def|PronType=Art	50	_	_	start_char=3250|end_char=3253
52	way	way	NOUN	NN	Number=Sing	51	_	_	start_char=3254|end_char=3257
53	the	the	DET	DT	Definite=Def|PronType=Art	52	_	_	start_char=3258|end_char=3261
54	perceptron	perceptron	NOUN	NN	Number=Sing	53	_	_	start_char=3262|end_char=3272
55	learning	learning	NOUN	NN	Number=Sing	54	_	_	start_char=3273|end_char=3281
56	algorithm	algorithm	NOUN	NN	Number=Sing	55	_	_	start_char=3282|end_char=3291
57	works	work	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	56	_	_	SpaceAfter=No|start_char=3292|end_char=3297
58	,	,	PUNCT	,	_	57	_	_	start_char=3297|end_char=3298
59	without	without	ADP	IN	_	58	_	_	start_char=3299|end_char=3306
60	the	the	DET	DT	Definite=Def|PronType=Art	59	_	_	start_char=3307|end_char=3310
61	weights	weight	NOUN	NNS	Number=Plur	60	_	_	SpaceAfter=No|start_char=3311|end_char=3318
62	.	.	PUNCT	.	_	61	_	_	start_char=3318|end_char=3319

# text = if instead of a logistic function we had a step function for assigning "hard" probabilities of zero and one to the data vectors, we would obtain the perceptron learning algorithm.
# sent_id = 17
1	if	if	SCONJ	IN	_	0	_	_	start_char=3320|end_char=3322
2	instead	instead	ADV	RB	_	1	_	_	start_char=3323|end_char=3330
3	of	of	ADP	IN	_	2	_	_	start_char=3331|end_char=3333
4	a	a	DET	DT	Definite=Ind|PronType=Art	3	_	_	start_char=3334|end_char=3335
5	logistic	logistic	ADJ	JJ	Degree=Pos	4	_	_	start_char=3336|end_char=3344
6	function	function	NOUN	NN	Number=Sing	5	_	_	start_char=3345|end_char=3353
7	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	6	_	_	start_char=3354|end_char=3356
8	had	have	VERB	VBD	Mood=Ind|Number=Plur|Person=1|Tense=Past|VerbForm=Fin	7	_	_	start_char=3357|end_char=3360
9	a	a	DET	DT	Definite=Ind|PronType=Art	8	_	_	start_char=3361|end_char=3362
10	step	step	NOUN	NN	Number=Sing	9	_	_	start_char=3363|end_char=3367
11	function	function	NOUN	NN	Number=Sing	10	_	_	start_char=3368|end_char=3376
12	for	for	SCONJ	IN	_	11	_	_	start_char=3377|end_char=3380
13	assigning	assign	VERB	VBG	VerbForm=Ger	12	_	_	start_char=3381|end_char=3390
14	"	"	PUNCT	``	_	13	_	_	SpaceAfter=No|start_char=3391|end_char=3392
15	hard	hard	ADJ	JJ	Degree=Pos	14	_	_	SpaceAfter=No|start_char=3392|end_char=3396
16	"	"	PUNCT	''	_	15	_	_	start_char=3396|end_char=3397
17	probabilities	probability	NOUN	NNS	Number=Plur	16	_	_	start_char=3398|end_char=3411
18	of	of	ADP	IN	_	17	_	_	start_char=3412|end_char=3414
19	zero	zero	NUM	CD	NumForm=Word|NumType=Card	18	_	_	start_char=3415|end_char=3419
20	and	and	CCONJ	CC	_	19	_	_	start_char=3420|end_char=3423
21	one	one	NUM	CD	NumForm=Word|NumType=Card	20	_	_	start_char=3424|end_char=3427
22	to	to	ADP	IN	_	21	_	_	start_char=3428|end_char=3430
23	the	the	DET	DT	Definite=Def|PronType=Art	22	_	_	start_char=3431|end_char=3434
24	data	datum	NOUN	NNS	Number=Plur	23	_	_	start_char=3435|end_char=3439
25	vectors	vector	NOUN	NNS	Number=Plur	24	_	_	SpaceAfter=No|start_char=3440|end_char=3447
26	,	,	PUNCT	,	_	25	_	_	start_char=3447|end_char=3448
27	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	26	_	_	start_char=3449|end_char=3451
28	would	would	AUX	MD	VerbForm=Fin	27	_	_	start_char=3452|end_char=3457
29	obtain	obtain	VERB	VB	VerbForm=Inf	28	_	_	start_char=3458|end_char=3464
30	the	the	DET	DT	Definite=Def|PronType=Art	29	_	_	start_char=3465|end_char=3468
31	perceptron	perceptron	NOUN	NN	Number=Sing	30	_	_	start_char=3469|end_char=3479
32	learning	learning	NOUN	NN	Number=Sing	31	_	_	start_char=3480|end_char=3488
33	algorithm	algorithm	NOUN	NN	Number=Sing	32	_	_	SpaceAfter=No|start_char=3489|end_char=3498
34	.	.	PUNCT	.	_	33	_	_	SpaceAfter=No|start_char=3498|end_char=3499

