# text = learning moore machines from input-output traces the problem of learning automata from example traces (but no equivalence or membership queries) is fundamental in automata learning theory and practice.
# sent_id = 0
1	learning	learn	VERB	VBG	VerbForm=Ger	0	_	_	start_char=0|end_char=8
2	moore	moore	NOUN	NN	Number=Sing	1	_	_	start_char=9|end_char=14
3	machines	machine	NOUN	NNS	Number=Plur	2	_	_	start_char=15|end_char=23
4	from	from	ADP	IN	_	3	_	_	start_char=24|end_char=28
5	input	input	NOUN	NN	Number=Sing	4	_	_	SpaceAfter=No|start_char=29|end_char=34
6	-	-	PUNCT	HYPH	_	5	_	_	SpaceAfter=No|start_char=34|end_char=35
7	output	output	NOUN	NN	Number=Sing	6	_	_	start_char=35|end_char=41
8	traces	trace	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	_	_	start_char=42|end_char=48
9	the	the	DET	DT	Definite=Def|PronType=Art	8	_	_	start_char=49|end_char=52
10	problem	problem	NOUN	NN	Number=Sing	9	_	_	start_char=53|end_char=60
11	of	of	SCONJ	IN	_	10	_	_	start_char=61|end_char=63
12	learning	learn	VERB	VBG	VerbForm=Ger	11	_	_	start_char=64|end_char=72
13	automata	automata	NOUN	NN	Number=Sing	12	_	_	start_char=73|end_char=81
14	from	from	ADP	IN	_	13	_	_	start_char=82|end_char=86
15	example	example	NOUN	NN	Number=Sing	14	_	_	start_char=87|end_char=94
16	traces	trace	NOUN	NNS	Number=Plur	15	_	_	start_char=95|end_char=101
17	(	(	PUNCT	-LRB-	_	16	_	_	SpaceAfter=No|start_char=102|end_char=103
18	but	but	CCONJ	CC	_	17	_	_	start_char=103|end_char=106
19	no	no	DET	DT	PronType=Neg	18	_	_	start_char=107|end_char=109
20	equivalence	equivalence	NOUN	NN	Number=Sing	19	_	_	start_char=110|end_char=121
21	or	or	CCONJ	CC	_	20	_	_	start_char=122|end_char=124
22	membership	membership	NOUN	NN	Number=Sing	21	_	_	start_char=125|end_char=135
23	queries	query	NOUN	NNS	Number=Plur	22	_	_	SpaceAfter=No|start_char=136|end_char=143
24	)	)	PUNCT	-RRB-	_	23	_	_	start_char=143|end_char=144
25	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	24	_	_	start_char=145|end_char=147
26	fundamental	fundamental	ADJ	JJ	Degree=Pos	25	_	_	start_char=148|end_char=159
27	in	in	ADP	IN	_	26	_	_	start_char=160|end_char=162
28	automata	automata	NOUN	NN	Number=Sing	27	_	_	start_char=163|end_char=171
29	learning	learning	NOUN	NN	Number=Sing	28	_	_	start_char=172|end_char=180
30	theory	theory	NOUN	NN	Number=Sing	29	_	_	start_char=181|end_char=187
31	and	and	CCONJ	CC	_	30	_	_	start_char=188|end_char=191
32	practice	practice	NOUN	NN	Number=Sing	31	_	_	SpaceAfter=No|start_char=192|end_char=200
33	.	.	PUNCT	.	_	32	_	_	start_char=200|end_char=201

# text = in this paper we study this problem for finite state machines with inputs and outputs, and in particular for moore machines.
# sent_id = 1
1	in	in	ADP	IN	_	0	_	_	start_char=202|end_char=204
2	this	this	DET	DT	Number=Sing|PronType=Dem	1	_	_	start_char=205|end_char=209
3	paper	paper	NOUN	NN	Number=Sing	2	_	_	start_char=210|end_char=215
4	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	3	_	_	start_char=216|end_char=218
5	study	study	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	4	_	_	start_char=219|end_char=224
6	this	this	DET	DT	Number=Sing|PronType=Dem	5	_	_	start_char=225|end_char=229
7	problem	problem	NOUN	NN	Number=Sing	6	_	_	start_char=230|end_char=237
8	for	for	ADP	IN	_	7	_	_	start_char=238|end_char=241
9	finite	finite	ADJ	JJ	Degree=Pos	8	_	_	start_char=242|end_char=248
10	state	state	NOUN	NN	Number=Sing	9	_	_	start_char=249|end_char=254
11	machines	machine	NOUN	NNS	Number=Plur	10	_	_	start_char=255|end_char=263
12	with	with	ADP	IN	_	11	_	_	start_char=264|end_char=268
13	inputs	input	NOUN	NNS	Number=Plur	12	_	_	start_char=269|end_char=275
14	and	and	CCONJ	CC	_	13	_	_	start_char=276|end_char=279
15	outputs	output	NOUN	NNS	Number=Plur	14	_	_	SpaceAfter=No|start_char=280|end_char=287
16	,	,	PUNCT	,	_	15	_	_	start_char=287|end_char=288
17	and	and	CCONJ	CC	_	16	_	_	start_char=289|end_char=292
18	in	in	ADP	IN	_	17	_	_	start_char=293|end_char=295
19	particular	particular	ADJ	JJ	Degree=Pos	18	_	_	start_char=296|end_char=306
20	for	for	ADP	IN	_	19	_	_	start_char=307|end_char=310
21	moore	moore	NOUN	NN	Number=Sing	20	_	_	start_char=311|end_char=316
22	machines	machine	NOUN	NNS	Number=Plur	21	_	_	SpaceAfter=No|start_char=317|end_char=325
23	.	.	PUNCT	.	_	22	_	_	start_char=325|end_char=326

# text = we develop three algorithms for solving this problem: (1) the ptap algorithm, which transforms a set of input-output traces into an incomplete moore machine and then completes the machine with self-loops; (2) the prpni algorithm, which uses the well-known rpni algorithm for automata learning to learn a product of automata encoding a moore machine; and (3) the mooremi algorithm, which directly learns a moore machine using ptap extended with state merging.
# sent_id = 2
1	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	0	_	_	start_char=327|end_char=329
2	develop	develop	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	1	_	_	start_char=330|end_char=337
3	three	three	NUM	CD	NumForm=Word|NumType=Card	2	_	_	start_char=338|end_char=343
4	algorithms	algorithm	NOUN	NNS	Number=Plur	3	_	_	start_char=344|end_char=354
5	for	for	SCONJ	IN	_	4	_	_	start_char=355|end_char=358
6	solving	solve	VERB	VBG	VerbForm=Ger	5	_	_	start_char=359|end_char=366
7	this	this	DET	DT	Number=Sing|PronType=Dem	6	_	_	start_char=367|end_char=371
8	problem	problem	NOUN	NN	Number=Sing	7	_	_	SpaceAfter=No|start_char=372|end_char=379
9	:	:	PUNCT	:	_	8	_	_	start_char=379|end_char=380
10	(	(	PUNCT	-LRB-	_	9	_	_	SpaceAfter=No|start_char=381|end_char=382
11	1	1	NUM	LS	NumForm=Digit|NumType=Card	10	_	_	SpaceAfter=No|start_char=382|end_char=383
12	)	)	PUNCT	-RRB-	_	11	_	_	start_char=383|end_char=384
13	the	the	DET	DT	Definite=Def|PronType=Art	12	_	_	start_char=385|end_char=388
14	ptap	ptap	NOUN	NN	Number=Sing	13	_	_	start_char=389|end_char=393
15	algorithm	algorithm	NOUN	NN	Number=Sing	14	_	_	SpaceAfter=No|start_char=394|end_char=403
16	,	,	PUNCT	,	_	15	_	_	start_char=403|end_char=404
17	which	which	PRON	WDT	PronType=Rel	16	_	_	start_char=405|end_char=410
18	transforms	transform	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	17	_	_	start_char=411|end_char=421
19	a	a	DET	DT	Definite=Ind|PronType=Art	18	_	_	start_char=422|end_char=423
20	set	set	NOUN	NN	Number=Sing	19	_	_	start_char=424|end_char=427
21	of	of	ADP	IN	_	20	_	_	start_char=428|end_char=430
22	input	input	NOUN	NN	Number=Sing	21	_	_	SpaceAfter=No|start_char=431|end_char=436
23	-	-	PUNCT	HYPH	_	22	_	_	SpaceAfter=No|start_char=436|end_char=437
24	output	output	NOUN	NN	Number=Sing	23	_	_	start_char=437|end_char=443
25	traces	trace	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	24	_	_	start_char=444|end_char=450
26	into	into	ADP	IN	_	25	_	_	start_char=451|end_char=455
27	an	a	DET	DT	Definite=Ind|PronType=Art	26	_	_	start_char=456|end_char=458
28	incomplete	incomplete	ADJ	JJ	Degree=Pos	27	_	_	start_char=459|end_char=469
29	moore	moore	NOUN	NN	Number=Sing	28	_	_	start_char=470|end_char=475
30	machine	machine	NOUN	NN	Number=Sing	29	_	_	start_char=476|end_char=483
31	and	and	CCONJ	CC	_	30	_	_	start_char=484|end_char=487
32	then	then	ADV	RB	PronType=Dem	31	_	_	start_char=488|end_char=492
33	completes	complete	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	32	_	_	start_char=493|end_char=502
34	the	the	DET	DT	Definite=Def|PronType=Art	33	_	_	start_char=503|end_char=506
35	machine	machine	NOUN	NN	Number=Sing	34	_	_	start_char=507|end_char=514
36	with	with	ADP	IN	_	35	_	_	start_char=515|end_char=519
37	self	self	NOUN	NN	Number=Sing	36	_	_	SpaceAfter=No|start_char=520|end_char=524
38	-	-	PUNCT	HYPH	_	37	_	_	SpaceAfter=No|start_char=524|end_char=525
39	loops	loop	NOUN	NNS	Number=Plur	38	_	_	SpaceAfter=No|start_char=525|end_char=530
40	;	;	PUNCT	:	_	39	_	_	start_char=530|end_char=531
41	(	(	PUNCT	-LRB-	_	40	_	_	SpaceAfter=No|start_char=532|end_char=533
42	2	2	NUM	LS	NumForm=Digit|NumType=Card	41	_	_	SpaceAfter=No|start_char=533|end_char=534
43	)	)	PUNCT	-RRB-	_	42	_	_	start_char=534|end_char=535
44	the	the	DET	DT	Definite=Def|PronType=Art	43	_	_	start_char=536|end_char=539
45	prpni	prpni	NOUN	NN	Number=Sing	44	_	_	start_char=540|end_char=545
46	algorithm	algorithm	NOUN	NN	Number=Sing	45	_	_	SpaceAfter=No|start_char=546|end_char=555
47	,	,	PUNCT	,	_	46	_	_	start_char=555|end_char=556
48	which	which	PRON	WDT	PronType=Rel	47	_	_	start_char=557|end_char=562
49	uses	use	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	48	_	_	start_char=563|end_char=567
50	the	the	DET	DT	Definite=Def|PronType=Art	49	_	_	start_char=568|end_char=571
51	well	well	ADV	RB	Degree=Pos	50	_	_	SpaceAfter=No|start_char=572|end_char=576
52	-	-	PUNCT	HYPH	_	51	_	_	SpaceAfter=No|start_char=576|end_char=577
53	known	know	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	52	_	_	start_char=577|end_char=582
54	rpni	rpni	NOUN	NN	Number=Sing	53	_	_	start_char=583|end_char=587
55	algorithm	algorithm	NOUN	NN	Number=Sing	54	_	_	start_char=588|end_char=597
56	for	for	ADP	IN	_	55	_	_	start_char=598|end_char=601
57	automata	automata	NOUN	NN	Number=Sing	56	_	_	start_char=602|end_char=610
58	learning	learning	NOUN	NN	Number=Sing	57	_	_	start_char=611|end_char=619
59	to	to	PART	TO	_	58	_	_	start_char=620|end_char=622
60	learn	learn	VERB	VB	VerbForm=Inf	59	_	_	start_char=623|end_char=628
61	a	a	DET	DT	Definite=Ind|PronType=Art	60	_	_	start_char=629|end_char=630
62	product	product	NOUN	NN	Number=Sing	61	_	_	start_char=631|end_char=638
63	of	of	ADP	IN	_	62	_	_	start_char=639|end_char=641
64	automata	automata	NOUN	NN	Number=Sing	63	_	_	start_char=642|end_char=650
65	encoding	encod	VERB	VBG	VerbForm=Ger	64	_	_	start_char=651|end_char=659
66	a	a	DET	DT	Definite=Ind|PronType=Art	65	_	_	start_char=660|end_char=661
67	moore	moore	NOUN	NN	Number=Sing	66	_	_	start_char=662|end_char=667
68	machine	machine	NOUN	NN	Number=Sing	67	_	_	SpaceAfter=No|start_char=668|end_char=675
69	;	;	PUNCT	,	_	68	_	_	start_char=675|end_char=676
70	and	and	CCONJ	CC	_	69	_	_	start_char=677|end_char=680
71	(	(	PUNCT	-LRB-	_	70	_	_	SpaceAfter=No|start_char=681|end_char=682
72	3	3	NUM	LS	NumForm=Digit|NumType=Card	71	_	_	SpaceAfter=No|start_char=682|end_char=683
73	)	)	PUNCT	-RRB-	_	72	_	_	start_char=683|end_char=684
74	the	the	DET	DT	Definite=Def|PronType=Art	73	_	_	start_char=685|end_char=688
75	mooremi	mooremi	NOUN	NN	Number=Sing	74	_	_	start_char=689|end_char=696
76	algorithm	algorithm	NOUN	NN	Number=Sing	75	_	_	SpaceAfter=No|start_char=697|end_char=706
77	,	,	PUNCT	,	_	76	_	_	start_char=706|end_char=707
78	which	which	PRON	WDT	PronType=Rel	77	_	_	start_char=708|end_char=713
79	directly	directly	ADV	RB	_	78	_	_	start_char=714|end_char=722
80	learns	learn	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	79	_	_	start_char=723|end_char=729
81	a	a	DET	DT	Definite=Ind|PronType=Art	80	_	_	start_char=730|end_char=731
82	moore	moore	NOUN	NN	Number=Sing	81	_	_	start_char=732|end_char=737
83	machine	machine	NOUN	NN	Number=Sing	82	_	_	start_char=738|end_char=745
84	using	use	VERB	VBG	VerbForm=Ger	83	_	_	start_char=746|end_char=751
85	ptap	ptap	NOUN	NN	Number=Sing	84	_	_	start_char=752|end_char=756
86	extended	extend	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	85	_	_	start_char=757|end_char=765
87	with	with	ADP	IN	_	86	_	_	start_char=766|end_char=770
88	state	state	NOUN	NN	Number=Sing	87	_	_	start_char=771|end_char=776
89	merging	merge	NOUN	NN	Number=Sing	88	_	_	SpaceAfter=No|start_char=777|end_char=784
90	.	.	PUNCT	.	_	89	_	_	start_char=784|end_char=785

# text = we prove that mooremi has the fundamental identification in the limit property.
# sent_id = 3
1	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	0	_	_	start_char=786|end_char=788
2	prove	prove	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	1	_	_	start_char=789|end_char=794
3	that	that	SCONJ	IN	_	2	_	_	start_char=795|end_char=799
4	mooremi	mooremi	PROPN	NNP	Number=Sing	3	_	_	start_char=800|end_char=807
5	has	have	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	_	_	start_char=808|end_char=811
6	the	the	DET	DT	Definite=Def|PronType=Art	5	_	_	start_char=812|end_char=815
7	fundamental	fundamental	ADJ	JJ	Degree=Pos	6	_	_	start_char=816|end_char=827
8	identification	identification	NOUN	NN	Number=Sing	7	_	_	start_char=828|end_char=842
9	in	in	ADP	IN	_	8	_	_	start_char=843|end_char=845
10	the	the	DET	DT	Definite=Def|PronType=Art	9	_	_	start_char=846|end_char=849
11	limit	limit	NOUN	NN	Number=Sing	10	_	_	start_char=850|end_char=855
12	property	property	NOUN	NN	Number=Sing	11	_	_	SpaceAfter=No|start_char=856|end_char=864
13	.	.	PUNCT	.	_	12	_	_	start_char=864|end_char=865

# text = we also compare the algorithms experimentally in terms of the size of the learned machine and several notions of accuracy, introduced in this paper.
# sent_id = 4
1	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	0	_	_	start_char=866|end_char=868
2	also	also	ADV	RB	_	1	_	_	start_char=869|end_char=873
3	compare	compare	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	2	_	_	start_char=874|end_char=881
4	the	the	DET	DT	Definite=Def|PronType=Art	3	_	_	start_char=882|end_char=885
5	algorithms	algorithm	NOUN	NNS	Number=Plur	4	_	_	start_char=886|end_char=896
6	experimentally	experimentally	ADV	RB	_	5	_	_	start_char=897|end_char=911
7	in	in	ADP	IN	_	6	_	_	start_char=912|end_char=914
8	terms	term	NOUN	NNS	Number=Plur	7	_	_	start_char=915|end_char=920
9	of	of	ADP	IN	_	8	_	_	start_char=921|end_char=923
10	the	the	DET	DT	Definite=Def|PronType=Art	9	_	_	start_char=924|end_char=927
11	size	size	NOUN	NN	Number=Sing	10	_	_	start_char=928|end_char=932
12	of	of	ADP	IN	_	11	_	_	start_char=933|end_char=935
13	the	the	DET	DT	Definite=Def|PronType=Art	12	_	_	start_char=936|end_char=939
14	learned	learn	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	13	_	_	start_char=940|end_char=947
15	machine	machine	NOUN	NN	Number=Sing	14	_	_	start_char=948|end_char=955
16	and	and	CCONJ	CC	_	15	_	_	start_char=956|end_char=959
17	several	several	ADJ	JJ	Degree=Pos	16	_	_	start_char=960|end_char=967
18	notions	notion	NOUN	NNS	Number=Plur	17	_	_	start_char=968|end_char=975
19	of	of	ADP	IN	_	18	_	_	start_char=976|end_char=978
20	accuracy	accuracy	NOUN	NN	Number=Sing	19	_	_	SpaceAfter=No|start_char=979|end_char=987
21	,	,	PUNCT	,	_	20	_	_	start_char=987|end_char=988
22	introduced	introduce	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	21	_	_	start_char=989|end_char=999
23	in	in	ADP	IN	_	22	_	_	start_char=1000|end_char=1002
24	this	this	DET	DT	Number=Sing|PronType=Dem	23	_	_	start_char=1003|end_char=1007
25	paper	paper	NOUN	NN	Number=Sing	24	_	_	SpaceAfter=No|start_char=1008|end_char=1013
26	.	.	PUNCT	.	_	25	_	_	start_char=1013|end_char=1014

# text = finally, we compare with ostia, an algorithm that learns a more general class of transducers, and find that ostia generally does not learn a moore machine, even when fed with a characteristic sample.
# sent_id = 5
1	finally	finally	ADV	RB	_	0	_	_	SpaceAfter=No|start_char=1015|end_char=1022
2	,	,	PUNCT	,	_	1	_	_	start_char=1022|end_char=1023
3	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	2	_	_	start_char=1024|end_char=1026
4	compare	compare	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	3	_	_	start_char=1027|end_char=1034
5	with	with	ADP	IN	_	4	_	_	start_char=1035|end_char=1039
6	ostia	ostia	PROPN	NNP	Number=Sing	5	_	_	SpaceAfter=No|start_char=1040|end_char=1045
7	,	,	PUNCT	,	_	6	_	_	start_char=1045|end_char=1046
8	an	a	DET	DT	Definite=Ind|PronType=Art	7	_	_	start_char=1047|end_char=1049
9	algorithm	algorithm	NOUN	NN	Number=Sing	8	_	_	start_char=1050|end_char=1059
10	that	that	PRON	WDT	PronType=Rel	9	_	_	start_char=1060|end_char=1064
11	learns	learn	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	_	_	start_char=1065|end_char=1071
12	a	a	DET	DT	Definite=Ind|PronType=Art	11	_	_	start_char=1072|end_char=1073
13	more	more	ADV	RBR	Degree=Cmp	12	_	_	start_char=1074|end_char=1078
14	general	general	ADJ	JJ	Degree=Pos	13	_	_	start_char=1079|end_char=1086
15	class	class	NOUN	NN	Number=Sing	14	_	_	start_char=1087|end_char=1092
16	of	of	ADP	IN	_	15	_	_	start_char=1093|end_char=1095
17	transducers	transducer	NOUN	NNS	Number=Plur	16	_	_	SpaceAfter=No|start_char=1096|end_char=1107
18	,	,	PUNCT	,	_	17	_	_	start_char=1107|end_char=1108
19	and	and	CCONJ	CC	_	18	_	_	start_char=1109|end_char=1112
20	find	find	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	19	_	_	start_char=1113|end_char=1117
21	that	that	SCONJ	IN	_	20	_	_	start_char=1118|end_char=1122
22	ostia	ostia	PROPN	NNP	Number=Sing	21	_	_	start_char=1123|end_char=1128
23	generally	generally	ADV	RB	Degree=Pos	22	_	_	start_char=1129|end_char=1138
24	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	23	_	_	start_char=1139|end_char=1143
25	not	not	PART	RB	Polarity=Neg	24	_	_	start_char=1144|end_char=1147
26	learn	learn	VERB	VB	VerbForm=Inf	25	_	_	start_char=1148|end_char=1153
27	a	a	DET	DT	Definite=Ind|PronType=Art	26	_	_	start_char=1154|end_char=1155
28	moore	moore	NOUN	NN	Number=Sing	27	_	_	start_char=1156|end_char=1161
29	machine	machine	NOUN	NN	Number=Sing	28	_	_	SpaceAfter=No|start_char=1162|end_char=1169
30	,	,	PUNCT	,	_	29	_	_	start_char=1169|end_char=1170
31	even	even	ADV	RB	_	30	_	_	start_char=1171|end_char=1175
32	when	when	ADV	WRB	PronType=Int	31	_	_	start_char=1176|end_char=1180
33	fed	feed	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	32	_	_	start_char=1181|end_char=1184
34	with	with	ADP	IN	_	33	_	_	start_char=1185|end_char=1189
35	a	a	DET	DT	Definite=Ind|PronType=Art	34	_	_	start_char=1190|end_char=1191
36	characteristic	characteristic	ADJ	JJ	Degree=Pos	35	_	_	start_char=1192|end_char=1206
37	sample	sample	NOUN	NN	Number=Sing	36	_	_	SpaceAfter=No|start_char=1207|end_char=1213
38	.	.	PUNCT	.	_	37	_	_	start_char=1213|end_char=1214

# text = introduction an abundance of data from the internet and from other sources (e.g., sensors) is revolutionizing many sectors of science, technology, and ultimately our society.
# sent_id = 6
1	introduction	introduction	NOUN	NN	Number=Sing	0	_	_	start_char=1215|end_char=1227
2	an	a	DET	DT	Definite=Ind|PronType=Art	1	_	_	start_char=1228|end_char=1230
3	abundance	abundance	NOUN	NN	Number=Sing	2	_	_	start_char=1231|end_char=1240
4	of	of	ADP	IN	_	3	_	_	start_char=1241|end_char=1243
5	data	datum	NOUN	NNS	Number=Plur	4	_	_	start_char=1244|end_char=1248
6	from	from	ADP	IN	_	5	_	_	start_char=1249|end_char=1253
7	the	the	DET	DT	Definite=Def|PronType=Art	6	_	_	start_char=1254|end_char=1257
8	internet	internet	NOUN	NN	Number=Sing	7	_	_	start_char=1258|end_char=1266
9	and	and	CCONJ	CC	_	8	_	_	start_char=1267|end_char=1270
10	from	from	ADP	IN	_	9	_	_	start_char=1271|end_char=1275
11	other	other	ADJ	JJ	Degree=Pos	10	_	_	start_char=1276|end_char=1281
12	sources	source	NOUN	NNS	Number=Plur	11	_	_	start_char=1282|end_char=1289
13	(	(	PUNCT	-LRB-	_	12	_	_	SpaceAfter=No|start_char=1290|end_char=1291
14	e.g.	e.g.	ADV	FW	Abbr=Yes	13	_	_	SpaceAfter=No|start_char=1291|end_char=1295
15	,	,	PUNCT	,	_	14	_	_	start_char=1295|end_char=1296
16	sensors	sensor	NOUN	NNS	Number=Plur	15	_	_	SpaceAfter=No|start_char=1297|end_char=1304
17	)	)	PUNCT	-RRB-	_	16	_	_	start_char=1304|end_char=1305
18	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	17	_	_	start_char=1306|end_char=1308
19	revolutionizing	revolutionize	VERB	VBG	Tense=Pres|VerbForm=Part	18	_	_	start_char=1309|end_char=1324
20	many	many	ADJ	JJ	Degree=Pos	19	_	_	start_char=1325|end_char=1329
21	sectors	sector	NOUN	NNS	Number=Plur	20	_	_	start_char=1330|end_char=1337
22	of	of	ADP	IN	_	21	_	_	start_char=1338|end_char=1340
23	science	science	NOUN	NN	Number=Sing	22	_	_	SpaceAfter=No|start_char=1341|end_char=1348
24	,	,	PUNCT	,	_	23	_	_	start_char=1348|end_char=1349
25	technology	technology	NOUN	NN	Number=Sing	24	_	_	SpaceAfter=No|start_char=1350|end_char=1360
26	,	,	PUNCT	,	_	25	_	_	start_char=1360|end_char=1361
27	and	and	CCONJ	CC	_	26	_	_	start_char=1362|end_char=1365
28	ultimately	ultimately	ADV	RB	_	27	_	_	start_char=1366|end_char=1376
29	our	our	PRON	PRP$	Case=Gen|Number=Plur|Person=1|Poss=Yes|PronType=Prs	28	_	_	start_char=1377|end_char=1380
30	society	society	NOUN	NN	Number=Sing	29	_	_	SpaceAfter=No|start_char=1381|end_char=1388
31	.	.	PUNCT	.	_	30	_	_	start_char=1388|end_char=1389

# text = at the heart of this revolution lies machine learning, a broad spectrum of techniques to derive information from data.
# sent_id = 7
1	at	at	ADP	IN	_	0	_	_	start_char=1390|end_char=1392
2	the	the	DET	DT	Definite=Def|PronType=Art	1	_	_	start_char=1393|end_char=1396
3	heart	heart	NOUN	NN	Number=Sing	2	_	_	start_char=1397|end_char=1402
4	of	of	ADP	IN	_	3	_	_	start_char=1403|end_char=1405
5	this	this	DET	DT	Number=Sing|PronType=Dem	4	_	_	start_char=1406|end_char=1410
6	revolution	revolution	NOUN	NN	Number=Sing	5	_	_	start_char=1411|end_char=1421
7	lies	lie	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	_	_	start_char=1422|end_char=1426
8	machine	machine	NOUN	NN	Number=Sing	7	_	_	start_char=1427|end_char=1434
9	learning	learning	NOUN	NN	Number=Sing	8	_	_	SpaceAfter=No|start_char=1435|end_char=1443
10	,	,	PUNCT	,	_	9	_	_	start_char=1443|end_char=1444
11	a	a	DET	DT	Definite=Ind|PronType=Art	10	_	_	start_char=1445|end_char=1446
12	broad	broad	ADJ	JJ	Degree=Pos	11	_	_	start_char=1447|end_char=1452
13	spectrum	spectrum	NOUN	NN	Number=Sing	12	_	_	start_char=1453|end_char=1461
14	of	of	ADP	IN	_	13	_	_	start_char=1462|end_char=1464
15	techniques	technique	NOUN	NNS	Number=Plur	14	_	_	start_char=1465|end_char=1475
16	to	to	PART	TO	_	15	_	_	start_char=1476|end_char=1478
17	derive	derive	VERB	VB	VerbForm=Inf	16	_	_	start_char=1479|end_char=1485
18	information	information	NOUN	NN	Number=Sing	17	_	_	start_char=1486|end_char=1497
19	from	from	ADP	IN	_	18	_	_	start_char=1498|end_char=1502
20	data	datum	NOUN	NNS	Number=Plur	19	_	_	SpaceAfter=No|start_char=1503|end_char=1507
21	.	.	PUNCT	.	_	20	_	_	start_char=1507|end_char=1508

# text = traditionally, objects studied by machine learning include classifiers, decision trees, and neural networks, with applications to fields as diverse as artificial intelligence, marketing, finance, or medicine [38] . in the context of system design, an important problem, with numerous applications, is automatically generating models from data.
# sent_id = 8
1	traditionally	traditionally	ADV	RB	_	0	_	_	SpaceAfter=No|start_char=1509|end_char=1522
2	,	,	PUNCT	,	_	1	_	_	start_char=1522|end_char=1523
3	objects	object	NOUN	NNS	Number=Plur	2	_	_	start_char=1524|end_char=1531
4	studied	study	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	3	_	_	start_char=1532|end_char=1539
5	by	by	ADP	IN	_	4	_	_	start_char=1540|end_char=1542
6	machine	machine	NOUN	NN	Number=Sing	5	_	_	start_char=1543|end_char=1550
7	learning	learning	NOUN	NN	Number=Sing	6	_	_	start_char=1551|end_char=1559
8	include	include	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	7	_	_	start_char=1560|end_char=1567
9	classifiers	classifier	NOUN	NNS	Number=Plur	8	_	_	SpaceAfter=No|start_char=1568|end_char=1579
10	,	,	PUNCT	,	_	9	_	_	start_char=1579|end_char=1580
11	decision	decision	NOUN	NN	Number=Sing	10	_	_	start_char=1581|end_char=1589
12	trees	tree	NOUN	NNS	Number=Plur	11	_	_	SpaceAfter=No|start_char=1590|end_char=1595
13	,	,	PUNCT	,	_	12	_	_	start_char=1595|end_char=1596
14	and	and	CCONJ	CC	_	13	_	_	start_char=1597|end_char=1600
15	neural	neural	ADJ	JJ	Degree=Pos	14	_	_	start_char=1601|end_char=1607
16	networks	network	NOUN	NNS	Number=Plur	15	_	_	SpaceAfter=No|start_char=1608|end_char=1616
17	,	,	PUNCT	,	_	16	_	_	start_char=1616|end_char=1617
18	with	with	ADP	IN	_	17	_	_	start_char=1618|end_char=1622
19	applications	application	NOUN	NNS	Number=Plur	18	_	_	start_char=1623|end_char=1635
20	to	to	ADP	IN	_	19	_	_	start_char=1636|end_char=1638
21	fields	field	NOUN	NNS	Number=Plur	20	_	_	start_char=1639|end_char=1645
22	as	as	ADV	RB	_	21	_	_	start_char=1646|end_char=1648
23	diverse	diverse	ADJ	JJ	Degree=Pos	22	_	_	start_char=1649|end_char=1656
24	as	as	ADP	IN	_	23	_	_	start_char=1657|end_char=1659
25	artificial	artificial	ADJ	JJ	Degree=Pos	24	_	_	start_char=1660|end_char=1670
26	intelligence	intelligence	NOUN	NN	Number=Sing	25	_	_	SpaceAfter=No|start_char=1671|end_char=1683
27	,	,	PUNCT	,	_	26	_	_	start_char=1683|end_char=1684
28	marketing	marketing	NOUN	NN	Number=Sing	27	_	_	SpaceAfter=No|start_char=1685|end_char=1694
29	,	,	PUNCT	,	_	28	_	_	start_char=1694|end_char=1695
30	finance	finance	NOUN	NN	Number=Sing	29	_	_	SpaceAfter=No|start_char=1696|end_char=1703
31	,	,	PUNCT	,	_	30	_	_	start_char=1703|end_char=1704
32	or	or	CCONJ	CC	_	31	_	_	start_char=1705|end_char=1707
33	medicine	medicine	NOUN	NN	Number=Sing	32	_	_	start_char=1708|end_char=1716
34	[	[	PUNCT	-LRB-	_	33	_	_	SpaceAfter=No|start_char=1717|end_char=1718
35	38	38	NUM	CD	NumForm=Digit|NumType=Card	34	_	_	SpaceAfter=No|start_char=1718|end_char=1720
36	]	]	PUNCT	-RRB-	_	35	_	_	start_char=1720|end_char=1721
37	.	.	PUNCT	.	_	36	_	_	start_char=1722|end_char=1723
38	in	in	ADP	IN	_	37	_	_	start_char=1724|end_char=1726
39	the	the	DET	DT	Definite=Def|PronType=Art	38	_	_	start_char=1727|end_char=1730
40	context	context	NOUN	NN	Number=Sing	39	_	_	start_char=1731|end_char=1738
41	of	of	ADP	IN	_	40	_	_	start_char=1739|end_char=1741
42	system	system	NOUN	NN	Number=Sing	41	_	_	start_char=1742|end_char=1748
43	design	design	NOUN	NN	Number=Sing	42	_	_	SpaceAfter=No|start_char=1749|end_char=1755
44	,	,	PUNCT	,	_	43	_	_	start_char=1755|end_char=1756
45	an	a	DET	DT	Definite=Ind|PronType=Art	44	_	_	start_char=1757|end_char=1759
46	important	important	ADJ	JJ	Degree=Pos	45	_	_	start_char=1760|end_char=1769
47	problem	problem	NOUN	NN	Number=Sing	46	_	_	SpaceAfter=No|start_char=1770|end_char=1777
48	,	,	PUNCT	,	_	47	_	_	start_char=1777|end_char=1778
49	with	with	ADP	IN	_	48	_	_	start_char=1779|end_char=1783
50	numerous	numerous	ADJ	JJ	Degree=Pos	49	_	_	start_char=1784|end_char=1792
51	applications	application	NOUN	NNS	Number=Plur	50	_	_	SpaceAfter=No|start_char=1793|end_char=1805
52	,	,	PUNCT	,	_	51	_	_	start_char=1805|end_char=1806
53	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	52	_	_	start_char=1807|end_char=1809
54	automatically	automatically	ADV	RB	_	53	_	_	start_char=1810|end_char=1823
55	generating	generate	VERB	VBG	Tense=Pres|VerbForm=Part	54	_	_	start_char=1824|end_char=1834
56	models	model	NOUN	NNS	Number=Plur	55	_	_	start_char=1835|end_char=1841
57	from	from	ADP	IN	_	56	_	_	start_char=1842|end_char=1846
58	data	datum	NOUN	NNS	Number=Plur	57	_	_	SpaceAfter=No|start_char=1847|end_char=1851
59	.	.	PUNCT	.	_	58	_	_	start_char=1851|end_char=1852

# text = there are many variants of this problem, depending on what types of models and data are considered, as well as other assumptions or restrictions.
# sent_id = 9
1	there	there	PRON	EX	_	0	_	_	start_char=1853|end_char=1858
2	are	be	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	1	_	_	start_char=1859|end_char=1862
3	many	many	ADJ	JJ	Degree=Pos	2	_	_	start_char=1863|end_char=1867
4	variants	variant	NOUN	NNS	Number=Plur	3	_	_	start_char=1868|end_char=1876
5	of	of	ADP	IN	_	4	_	_	start_char=1877|end_char=1879
6	this	this	DET	DT	Number=Sing|PronType=Dem	5	_	_	start_char=1880|end_char=1884
7	problem	problem	NOUN	NN	Number=Sing	6	_	_	SpaceAfter=No|start_char=1885|end_char=1892
8	,	,	PUNCT	,	_	7	_	_	start_char=1892|end_char=1893
9	depending	depend	VERB	VBG	Tense=Pres|VerbForm=Part	8	_	_	start_char=1894|end_char=1903
10	on	on	ADP	IN	_	9	_	_	start_char=1904|end_char=1906
11	what	what	DET	WDT	PronType=Int	10	_	_	start_char=1907|end_char=1911
12	types	type	NOUN	NNS	Number=Plur	11	_	_	start_char=1912|end_char=1917
13	of	of	ADP	IN	_	12	_	_	start_char=1918|end_char=1920
14	models	model	NOUN	NNS	Number=Plur	13	_	_	start_char=1921|end_char=1927
15	and	and	CCONJ	CC	_	14	_	_	start_char=1928|end_char=1931
16	data	datum	NOUN	NNS	Number=Plur	15	_	_	start_char=1932|end_char=1936
17	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	16	_	_	start_char=1937|end_char=1940
18	considered	consider	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	17	_	_	SpaceAfter=No|start_char=1941|end_char=1951
19	,	,	PUNCT	,	_	18	_	_	start_char=1951|end_char=1952
20	as	as	ADV	RB	ExtPos=CCONJ	19	_	_	start_char=1953|end_char=1955
21	well	well	ADV	RB	Degree=Pos	20	_	_	start_char=1956|end_char=1960
22	as	as	ADP	IN	_	21	_	_	start_char=1961|end_char=1963
23	other	other	ADJ	JJ	Degree=Pos	22	_	_	start_char=1964|end_char=1969
24	assumptions	assumption	NOUN	NNS	Number=Plur	23	_	_	start_char=1970|end_char=1981
25	or	or	CCONJ	CC	_	24	_	_	start_char=1982|end_char=1984
26	restrictions	restriction	NOUN	NNS	Number=Plur	25	_	_	SpaceAfter=No|start_char=1985|end_char=1997
27	.	.	PUNCT	.	_	26	_	_	start_char=1997|end_char=1998

# text = examples include, but are by no means limited to, the classic field of system identification [35] , as well as more recent works on synthesizing programs, controllers, or other artifacts from examples [44, 21, 42, 41, 5] . in this paper we consider a basic problem, that of learning a moore machine from a set of input-output traces.
# sent_id = 10
1	examples	example	NOUN	NNS	Number=Plur	0	_	_	start_char=1999|end_char=2007
2	include	include	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	1	_	_	SpaceAfter=No|start_char=2008|end_char=2015
3	,	,	PUNCT	,	_	2	_	_	start_char=2015|end_char=2016
4	but	but	CCONJ	CC	_	3	_	_	start_char=2017|end_char=2020
5	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	4	_	_	start_char=2021|end_char=2024
6	by	by	ADP	IN	_	5	_	_	start_char=2025|end_char=2027
7	no	no	DET	DT	PronType=Neg	6	_	_	start_char=2028|end_char=2030
8	means	means	NOUN	NNS	Number=Ptan	7	_	_	start_char=2031|end_char=2036
9	limited	limit	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	8	_	_	start_char=2037|end_char=2044
10	to	to	ADP	IN	_	9	_	_	SpaceAfter=No|start_char=2045|end_char=2047
11	,	,	PUNCT	,	_	10	_	_	start_char=2047|end_char=2048
12	the	the	DET	DT	Definite=Def|PronType=Art	11	_	_	start_char=2049|end_char=2052
13	classic	classic	ADJ	JJ	Degree=Pos	12	_	_	start_char=2053|end_char=2060
14	field	field	NOUN	NN	Number=Sing	13	_	_	start_char=2061|end_char=2066
15	of	of	ADP	IN	_	14	_	_	start_char=2067|end_char=2069
16	system	system	NOUN	NN	Number=Sing	15	_	_	start_char=2070|end_char=2076
17	identification	identification	NOUN	NN	Number=Sing	16	_	_	start_char=2077|end_char=2091
18	[	[	PUNCT	-LRB-	_	17	_	_	SpaceAfter=No|start_char=2092|end_char=2093
19	35	35	NUM	CD	NumForm=Digit|NumType=Card	18	_	_	SpaceAfter=No|start_char=2093|end_char=2095
20	]	]	PUNCT	-RRB-	_	19	_	_	start_char=2095|end_char=2096
21	,	,	PUNCT	,	_	20	_	_	start_char=2097|end_char=2098
22	as	as	ADV	RB	ExtPos=CCONJ	21	_	_	start_char=2099|end_char=2101
23	well	well	ADV	RB	Degree=Pos	22	_	_	start_char=2102|end_char=2106
24	as	as	ADP	IN	_	23	_	_	start_char=2107|end_char=2109
25	more	more	ADV	RBR	Degree=Cmp	24	_	_	start_char=2110|end_char=2114
26	recent	recent	ADJ	JJ	Degree=Pos	25	_	_	start_char=2115|end_char=2121
27	works	work	NOUN	NNS	Number=Plur	26	_	_	start_char=2122|end_char=2127
28	on	on	ADP	IN	_	27	_	_	start_char=2128|end_char=2130
29	synthesizing	synthesizing	NOUN	NN	Number=Sing	28	_	_	start_char=2131|end_char=2143
30	programs	program	NOUN	NNS	Number=Plur	29	_	_	SpaceAfter=No|start_char=2144|end_char=2152
31	,	,	PUNCT	,	_	30	_	_	start_char=2152|end_char=2153
32	controllers	controller	NOUN	NNS	Number=Plur	31	_	_	SpaceAfter=No|start_char=2154|end_char=2165
33	,	,	PUNCT	,	_	32	_	_	start_char=2165|end_char=2166
34	or	or	CCONJ	CC	_	33	_	_	start_char=2167|end_char=2169
35	other	other	ADJ	JJ	Degree=Pos	34	_	_	start_char=2170|end_char=2175
36	artifacts	artifact	NOUN	NNS	Number=Plur	35	_	_	start_char=2176|end_char=2185
37	from	from	ADP	IN	_	36	_	_	start_char=2186|end_char=2190
38	examples	example	NOUN	NNS	Number=Plur	37	_	_	start_char=2191|end_char=2199
39	[	[	PUNCT	-LRB-	_	38	_	_	SpaceAfter=No|start_char=2200|end_char=2201
40	44	44	NUM	CD	NumForm=Digit|NumType=Card	39	_	_	SpaceAfter=No|start_char=2201|end_char=2203
41	,	,	PUNCT	,	_	40	_	_	start_char=2203|end_char=2204
42	21	21	NUM	CD	NumForm=Digit|NumType=Card	41	_	_	SpaceAfter=No|start_char=2205|end_char=2207
43	,	,	PUNCT	,	_	42	_	_	start_char=2207|end_char=2208
44	42	42	NUM	CD	NumForm=Digit|NumType=Card	43	_	_	SpaceAfter=No|start_char=2209|end_char=2211
45	,	,	PUNCT	,	_	44	_	_	start_char=2211|end_char=2212
46	41	41	NUM	CD	NumForm=Digit|NumType=Card	45	_	_	SpaceAfter=No|start_char=2213|end_char=2215
47	,	,	PUNCT	,	_	46	_	_	start_char=2215|end_char=2216
48	5	5	NUM	CD	NumForm=Digit|NumType=Card	47	_	_	SpaceAfter=No|start_char=2217|end_char=2218
49	]	]	PUNCT	-RRB-	_	48	_	_	start_char=2218|end_char=2219
50	.	.	PUNCT	.	_	49	_	_	start_char=2220|end_char=2221
51	in	in	ADP	IN	_	50	_	_	start_char=2222|end_char=2224
52	this	this	DET	DT	Number=Sing|PronType=Dem	51	_	_	start_char=2225|end_char=2229
53	paper	paper	NOUN	NN	Number=Sing	52	_	_	start_char=2230|end_char=2235
54	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	53	_	_	start_char=2236|end_char=2238
55	consider	consider	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	54	_	_	start_char=2239|end_char=2247
56	a	a	DET	DT	Definite=Ind|PronType=Art	55	_	_	start_char=2248|end_char=2249
57	basic	basic	ADJ	JJ	Degree=Pos	56	_	_	start_char=2250|end_char=2255
58	problem	problem	NOUN	NN	Number=Sing	57	_	_	SpaceAfter=No|start_char=2256|end_char=2263
59	,	,	PUNCT	,	_	58	_	_	start_char=2263|end_char=2264
60	that	that	SCONJ	IN	_	59	_	_	start_char=2265|end_char=2269
61	of	of	SCONJ	IN	_	60	_	_	start_char=2270|end_char=2272
62	learning	learn	VERB	VBG	VerbForm=Ger	61	_	_	start_char=2273|end_char=2281
63	a	a	DET	DT	Definite=Ind|PronType=Art	62	_	_	start_char=2282|end_char=2283
64	moore	moore	NOUN	NN	Number=Sing	63	_	_	start_char=2284|end_char=2289
65	machine	machine	NOUN	NN	Number=Sing	64	_	_	start_char=2290|end_char=2297
66	from	from	ADP	IN	_	65	_	_	start_char=2298|end_char=2302
67	a	a	DET	DT	Definite=Ind|PronType=Art	66	_	_	start_char=2303|end_char=2304
68	set	set	NOUN	NN	Number=Sing	67	_	_	start_char=2305|end_char=2308
69	of	of	ADP	IN	_	68	_	_	start_char=2309|end_char=2311
70	input	input	NOUN	NN	Number=Sing	69	_	_	SpaceAfter=No|start_char=2312|end_char=2317
71	-	-	PUNCT	HYPH	_	70	_	_	SpaceAfter=No|start_char=2317|end_char=2318
72	output	output	NOUN	NN	Number=Sing	71	_	_	start_char=2318|end_char=2324
73	traces	trace	NOUN	NNS	Number=Plur	72	_	_	SpaceAfter=No|start_char=2325|end_char=2331
74	.	.	PUNCT	.	_	73	_	_	start_char=2331|end_char=2332

# text = a moore machine is a type of finite-state machine (fsm) with inputs and outputs, where the output always depends on the current state, but not on the current input [30] . moore machines are typically deterministic and complete, meaning that for given state and input, the next state is always defined and is unique; and for given state, the output is also always uniquely defined.
# sent_id = 11
1	a	a	DET	DT	Definite=Ind|PronType=Art	0	_	_	start_char=2333|end_char=2334
2	moore	moore	NOUN	NN	Number=Sing	1	_	_	start_char=2335|end_char=2340
3	machine	machine	NOUN	NN	Number=Sing	2	_	_	start_char=2341|end_char=2348
4	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	_	_	start_char=2349|end_char=2351
5	a	a	DET	DT	Definite=Ind|PronType=Art	4	_	_	start_char=2352|end_char=2353
6	type	type	NOUN	NN	Number=Sing	5	_	_	start_char=2354|end_char=2358
7	of	of	ADP	IN	_	6	_	_	start_char=2359|end_char=2361
8	finite	finite	ADJ	JJ	Degree=Pos	7	_	_	SpaceAfter=No|start_char=2362|end_char=2368
9	-	-	PUNCT	HYPH	_	8	_	_	SpaceAfter=No|start_char=2368|end_char=2369
10	state	state	NOUN	NN	Number=Sing	9	_	_	start_char=2369|end_char=2374
11	machine	machine	NOUN	NN	Number=Sing	10	_	_	start_char=2375|end_char=2382
12	(	(	PUNCT	-LRB-	_	11	_	_	SpaceAfter=No|start_char=2383|end_char=2384
13	fsm	fsm	NOUN	NN	Number=Sing	12	_	_	SpaceAfter=No|start_char=2384|end_char=2387
14	)	)	PUNCT	-RRB-	_	13	_	_	start_char=2387|end_char=2388
15	with	with	ADP	IN	_	14	_	_	start_char=2389|end_char=2393
16	inputs	input	NOUN	NNS	Number=Plur	15	_	_	start_char=2394|end_char=2400
17	and	and	CCONJ	CC	_	16	_	_	start_char=2401|end_char=2404
18	outputs	output	NOUN	NNS	Number=Plur	17	_	_	SpaceAfter=No|start_char=2405|end_char=2412
19	,	,	PUNCT	,	_	18	_	_	start_char=2412|end_char=2413
20	where	where	ADV	WRB	PronType=Rel	19	_	_	start_char=2414|end_char=2419
21	the	the	DET	DT	Definite=Def|PronType=Art	20	_	_	start_char=2420|end_char=2423
22	output	output	NOUN	NN	Number=Sing	21	_	_	start_char=2424|end_char=2430
23	always	always	ADV	RB	PronType=Tot	22	_	_	start_char=2431|end_char=2437
24	depends	depend	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	23	_	_	start_char=2438|end_char=2445
25	on	on	ADP	IN	_	24	_	_	start_char=2446|end_char=2448
26	the	the	DET	DT	Definite=Def|PronType=Art	25	_	_	start_char=2449|end_char=2452
27	current	current	ADJ	JJ	Degree=Pos	26	_	_	start_char=2453|end_char=2460
28	state	state	NOUN	NN	Number=Sing	27	_	_	SpaceAfter=No|start_char=2461|end_char=2466
29	,	,	PUNCT	,	_	28	_	_	start_char=2466|end_char=2467
30	but	but	CCONJ	CC	_	29	_	_	start_char=2468|end_char=2471
31	not	not	PART	RB	Polarity=Neg	30	_	_	start_char=2472|end_char=2475
32	on	on	ADP	IN	_	31	_	_	start_char=2476|end_char=2478
33	the	the	DET	DT	Definite=Def|PronType=Art	32	_	_	start_char=2479|end_char=2482
34	current	current	ADJ	JJ	Degree=Pos	33	_	_	start_char=2483|end_char=2490
35	input	input	NOUN	NN	Number=Sing	34	_	_	start_char=2491|end_char=2496
36	[	[	PUNCT	-LRB-	_	35	_	_	SpaceAfter=No|start_char=2497|end_char=2498
37	30	30	NUM	CD	NumForm=Digit|NumType=Card	36	_	_	SpaceAfter=No|start_char=2498|end_char=2500
38	]	]	PUNCT	-RRB-	_	37	_	_	start_char=2500|end_char=2501
39	.	.	PUNCT	.	_	38	_	_	start_char=2502|end_char=2503
40	moore	moore	PROPN	NNP	Number=Sing	39	_	_	start_char=2504|end_char=2509
41	machines	machine	NOUN	NNS	Number=Plur	40	_	_	start_char=2510|end_char=2518
42	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	41	_	_	start_char=2519|end_char=2522
43	typically	typically	ADV	RB	_	42	_	_	start_char=2523|end_char=2532
44	deterministic	deterministic	ADJ	JJ	Degree=Pos	43	_	_	start_char=2533|end_char=2546
45	and	and	CCONJ	CC	_	44	_	_	start_char=2547|end_char=2550
46	complete	complete	ADJ	JJ	Degree=Pos	45	_	_	SpaceAfter=No|start_char=2551|end_char=2559
47	,	,	PUNCT	,	_	46	_	_	start_char=2559|end_char=2560
48	meaning	mean	VERB	VBG	Tense=Pres|VerbForm=Part	47	_	_	start_char=2561|end_char=2568
49	that	that	SCONJ	IN	_	48	_	_	start_char=2569|end_char=2573
50	for	for	ADP	IN	_	49	_	_	start_char=2574|end_char=2577
51	given	give	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	50	_	_	start_char=2578|end_char=2583
52	state	state	NOUN	NN	Number=Sing	51	_	_	start_char=2584|end_char=2589
53	and	and	CCONJ	CC	_	52	_	_	start_char=2590|end_char=2593
54	input	input	NOUN	NN	Number=Sing	53	_	_	SpaceAfter=No|start_char=2594|end_char=2599
55	,	,	PUNCT	,	_	54	_	_	start_char=2599|end_char=2600
56	the	the	DET	DT	Definite=Def|PronType=Art	55	_	_	start_char=2601|end_char=2604
57	next	next	ADJ	JJ	Degree=Pos	56	_	_	start_char=2605|end_char=2609
58	state	state	NOUN	NN	Number=Sing	57	_	_	start_char=2610|end_char=2615
59	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	58	_	_	start_char=2616|end_char=2618
60	always	always	ADV	RB	PronType=Tot	59	_	_	start_char=2619|end_char=2625
61	defined	define	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	60	_	_	start_char=2626|end_char=2633
62	and	and	CCONJ	CC	_	61	_	_	start_char=2634|end_char=2637
63	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	62	_	_	start_char=2638|end_char=2640
64	unique	unique	ADJ	JJ	Degree=Pos	63	_	_	SpaceAfter=No|start_char=2641|end_char=2647
65	;	;	PUNCT	:	_	64	_	_	start_char=2647|end_char=2648
66	and	and	CCONJ	CC	_	65	_	_	start_char=2649|end_char=2652
67	for	for	ADP	IN	_	66	_	_	start_char=2653|end_char=2656
68	given	give	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	67	_	_	start_char=2657|end_char=2662
69	state	state	NOUN	NN	Number=Sing	68	_	_	SpaceAfter=No|start_char=2663|end_char=2668
70	,	,	PUNCT	,	_	69	_	_	start_char=2668|end_char=2669
71	the	the	DET	DT	Definite=Def|PronType=Art	70	_	_	start_char=2670|end_char=2673
72	output	output	NOUN	NN	Number=Sing	71	_	_	start_char=2674|end_char=2680
73	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	72	_	_	start_char=2681|end_char=2683
74	also	also	ADV	RB	_	73	_	_	start_char=2684|end_char=2688
75	always	always	ADV	RB	PronType=Tot	74	_	_	start_char=2689|end_char=2695
76	uniquely	uniquely	ADV	RB	_	75	_	_	start_char=2696|end_char=2704
77	defined	define	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	76	_	_	SpaceAfter=No|start_char=2705|end_char=2712
78	.	.	PUNCT	.	_	77	_	_	start_char=2712|end_char=2713

# text = such machines are useful in many applications, for instance, for representing digital circuits or controllers.
# sent_id = 12
1	such	such	ADJ	JJ	Degree=Pos	0	_	_	start_char=2714|end_char=2718
2	machines	machine	NOUN	NNS	Number=Plur	1	_	_	start_char=2719|end_char=2727
3	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	2	_	_	start_char=2728|end_char=2731
4	useful	useful	ADJ	JJ	Degree=Pos	3	_	_	start_char=2732|end_char=2738
5	in	in	ADP	IN	_	4	_	_	start_char=2739|end_char=2741
6	many	many	ADJ	JJ	Degree=Pos	5	_	_	start_char=2742|end_char=2746
7	applications	application	NOUN	NNS	Number=Plur	6	_	_	SpaceAfter=No|start_char=2747|end_char=2759
8	,	,	PUNCT	,	_	7	_	_	start_char=2759|end_char=2760
9	for	for	ADP	IN	_	8	_	_	start_char=2761|end_char=2764
10	instance	instance	NOUN	NN	Number=Sing	9	_	_	SpaceAfter=No|start_char=2765|end_char=2773
11	,	,	PUNCT	,	_	10	_	_	start_char=2773|end_char=2774
12	for	for	SCONJ	IN	_	11	_	_	start_char=2775|end_char=2778
13	representing	represent	VERB	VBG	Tense=Pres|VerbForm=Part	12	_	_	start_char=2779|end_char=2791
14	digital	digital	ADJ	JJ	Degree=Pos	13	_	_	start_char=2792|end_char=2799
15	circuits	circuit	NOUN	NNS	Number=Plur	14	_	_	start_char=2800|end_char=2808
16	or	or	CCONJ	CC	_	15	_	_	start_char=2809|end_char=2811
17	controllers	controller	NOUN	NNS	Number=Plur	16	_	_	SpaceAfter=No|start_char=2812|end_char=2823
18	.	.	PUNCT	.	_	17	_	_	start_char=2823|end_char=2824

# text = in this paper we are interested in learning deterministic and complete moore machines.
# sent_id = 13
1	in	in	ADP	IN	_	0	_	_	start_char=2825|end_char=2827
2	this	this	DET	DT	Number=Sing|PronType=Dem	1	_	_	start_char=2828|end_char=2832
3	paper	paper	NOUN	NN	Number=Sing	2	_	_	start_char=2833|end_char=2838
4	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	3	_	_	start_char=2839|end_char=2841
5	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	4	_	_	start_char=2842|end_char=2845
6	interested	interested	ADJ	JJ	Degree=Pos	5	_	_	start_char=2846|end_char=2856
7	in	in	SCONJ	IN	_	6	_	_	start_char=2857|end_char=2859
8	learning	learn	VERB	VBG	Tense=Pres|VerbForm=Part	7	_	_	start_char=2860|end_char=2868
9	deterministic	deterministic	ADJ	JJ	Degree=Pos	8	_	_	start_char=2869|end_char=2882
10	and	and	CCONJ	CC	_	9	_	_	start_char=2883|end_char=2886
11	complete	complete	ADJ	JJ	Degree=Pos	10	_	_	start_char=2887|end_char=2895
12	moore	moore	NOUN	NN	Number=Sing	11	_	_	start_char=2896|end_char=2901
13	machines	machine	NOUN	NNS	Number=Plur	12	_	_	SpaceAfter=No|start_char=2902|end_char=2910
14	.	.	PUNCT	.	_	13	_	_	start_char=2910|end_char=2911

# text = we want to learn a moore machine from a given set of input-output traces.
# sent_id = 14
1	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	0	_	_	start_char=2912|end_char=2914
2	want	want	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	1	_	_	start_char=2915|end_char=2919
3	to	to	PART	TO	_	2	_	_	start_char=2920|end_char=2922
4	learn	learn	VERB	VB	VerbForm=Inf	3	_	_	start_char=2923|end_char=2928
5	a	a	DET	DT	Definite=Ind|PronType=Art	4	_	_	start_char=2929|end_char=2930
6	moore	moore	NOUN	NN	Number=Sing	5	_	_	start_char=2931|end_char=2936
7	machine	machine	NOUN	NN	Number=Sing	6	_	_	start_char=2937|end_char=2944
8	from	from	ADP	IN	_	7	_	_	start_char=2945|end_char=2949
9	a	a	DET	DT	Definite=Ind|PronType=Art	8	_	_	start_char=2950|end_char=2951
10	given	give	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	9	_	_	start_char=2952|end_char=2957
11	set	set	NOUN	NN	Number=Sing	10	_	_	start_char=2958|end_char=2961
12	of	of	ADP	IN	_	11	_	_	start_char=2962|end_char=2964
13	input	input	NOUN	NN	Number=Sing	12	_	_	SpaceAfter=No|start_char=2965|end_char=2970
14	-	-	PUNCT	HYPH	_	13	_	_	SpaceAfter=No|start_char=2970|end_char=2971
15	output	output	NOUN	NN	Number=Sing	14	_	_	start_char=2971|end_char=2977
16	traces	trace	NOUN	NNS	Number=Plur	15	_	_	SpaceAfter=No|start_char=2978|end_char=2984
17	.	.	PUNCT	.	_	16	_	_	start_char=2984|end_char=2985

# text = one such trace is a sequence of inputs, ρ in , and the corresponding sequence of outputs, ρ out , that the machine must produce when fed with ρ in . as in standard machine learning methods, we call the set of traces given to the learning algorithm the training set.
# sent_id = 15
1	one	one	NUM	CD	NumForm=Word|NumType=Card	0	_	_	start_char=2986|end_char=2989
2	such	such	ADJ	JJ	Degree=Pos	1	_	_	start_char=2990|end_char=2994
3	trace	trace	NOUN	NN	Number=Sing	2	_	_	start_char=2995|end_char=3000
4	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	_	_	start_char=3001|end_char=3003
5	a	a	DET	DT	Definite=Ind|PronType=Art	4	_	_	start_char=3004|end_char=3005
6	sequence	sequence	NOUN	NN	Number=Sing	5	_	_	start_char=3006|end_char=3014
7	of	of	ADP	IN	_	6	_	_	start_char=3015|end_char=3017
8	inputs	input	NOUN	NNS	Number=Plur	7	_	_	SpaceAfter=No|start_char=3018|end_char=3024
9	,	,	PUNCT	,	_	8	_	_	start_char=3024|end_char=3025
10	ρ	ρ	NOUN	NN	Number=Sing	9	_	_	start_char=3026|end_char=3027
11	in	in	ADP	RP	_	10	_	_	start_char=3028|end_char=3030
12	,	,	PUNCT	,	_	11	_	_	start_char=3031|end_char=3032
13	and	and	CCONJ	CC	_	12	_	_	start_char=3033|end_char=3036
14	the	the	DET	DT	Definite=Def|PronType=Art	13	_	_	start_char=3037|end_char=3040
15	corresponding	corresponding	VERB	VBG	VerbForm=Ger	14	_	_	start_char=3041|end_char=3054
16	sequence	sequence	NOUN	NN	Number=Sing	15	_	_	start_char=3055|end_char=3063
17	of	of	ADP	IN	_	16	_	_	start_char=3064|end_char=3066
18	outputs	output	NOUN	NNS	Number=Plur	17	_	_	SpaceAfter=No|start_char=3067|end_char=3074
19	,	,	PUNCT	,	_	18	_	_	start_char=3074|end_char=3075
20	ρ	ρ	NOUN	NN	Number=Sing	19	_	_	start_char=3076|end_char=3077
21	out	out	ADP	RP	_	20	_	_	start_char=3078|end_char=3081
22	,	,	PUNCT	,	_	21	_	_	start_char=3082|end_char=3083
23	that	that	SCONJ	IN	_	22	_	_	start_char=3084|end_char=3088
24	the	the	DET	DT	Definite=Def|PronType=Art	23	_	_	start_char=3089|end_char=3092
25	machine	machine	NOUN	NN	Number=Sing	24	_	_	start_char=3093|end_char=3100
26	must	must	AUX	MD	VerbForm=Fin	25	_	_	start_char=3101|end_char=3105
27	produce	produce	VERB	VB	VerbForm=Inf	26	_	_	start_char=3106|end_char=3113
28	when	when	ADV	WRB	PronType=Int	27	_	_	start_char=3114|end_char=3118
29	fed	feed	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	28	_	_	start_char=3119|end_char=3122
30	with	with	ADP	IN	_	29	_	_	start_char=3123|end_char=3127
31	ρ	ρ	NOUN	NN	Number=Sing	30	_	_	start_char=3128|end_char=3129
32	in	in	ADP	IN	_	31	_	_	start_char=3130|end_char=3132
33	.	.	PUNCT	.	_	32	_	_	start_char=3133|end_char=3134
34	as	as	ADP	IN	_	33	_	_	start_char=3135|end_char=3137
35	in	in	ADP	IN	_	34	_	_	start_char=3138|end_char=3140
36	standard	standard	ADJ	JJ	Degree=Pos	35	_	_	start_char=3141|end_char=3149
37	machine	machine	NOUN	NN	Number=Sing	36	_	_	start_char=3150|end_char=3157
38	learning	learning	NOUN	NN	Number=Sing	37	_	_	start_char=3158|end_char=3166
39	methods	method	NOUN	NNS	Number=Plur	38	_	_	SpaceAfter=No|start_char=3167|end_char=3174
40	,	,	PUNCT	,	_	39	_	_	start_char=3174|end_char=3175
41	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	40	_	_	start_char=3176|end_char=3178
42	call	call	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	41	_	_	start_char=3179|end_char=3183
43	the	the	DET	DT	Definite=Def|PronType=Art	42	_	_	start_char=3184|end_char=3187
44	set	set	NOUN	NN	Number=Sing	43	_	_	start_char=3188|end_char=3191
45	of	of	ADP	IN	_	44	_	_	start_char=3192|end_char=3194
46	traces	trace	NOUN	NNS	Number=Plur	45	_	_	start_char=3195|end_char=3201
47	given	give	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	46	_	_	start_char=3202|end_char=3207
48	to	to	ADP	IN	_	47	_	_	start_char=3208|end_char=3210
49	the	the	DET	DT	Definite=Def|PronType=Art	48	_	_	start_char=3211|end_char=3214
50	learning	learning	NOUN	NN	Number=Sing	49	_	_	start_char=3215|end_char=3223
51	algorithm	algorithm	NOUN	NN	Number=Sing	50	_	_	start_char=3224|end_char=3233
52	the	the	DET	DT	Definite=Def|PronType=Art	51	_	_	start_char=3234|end_char=3237
53	training	training	NOUN	NN	Number=Sing	52	_	_	start_char=3238|end_char=3246
54	set	set	NOUN	NN	Number=Sing	53	_	_	SpaceAfter=No|start_char=3247|end_char=3250
55	.	.	PUNCT	.	_	54	_	_	start_char=3250|end_char=3251

# text = obviously, we would like the learned machine m to be consistent w.r.t. the training set r, meaning that for every pair (ρ in , ρ out ) ∈ r, m must output ρ out when fed with ρ in . but in addition to consistency, we would like m to behave well w.r.t. several performance criteria, including complexity of the learning algorithm, size of the learned machine m (its number of states), and accuracy of m , which captures how well m performs on a testing set of traces, different from the training set.
# sent_id = 16
1	obviously	obviously	ADV	RB	_	0	_	_	SpaceAfter=No|start_char=3252|end_char=3261
2	,	,	PUNCT	,	_	1	_	_	start_char=3261|end_char=3262
3	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	2	_	_	start_char=3263|end_char=3265
4	would	would	AUX	MD	VerbForm=Fin	3	_	_	start_char=3266|end_char=3271
5	like	like	VERB	VB	VerbForm=Inf	4	_	_	start_char=3272|end_char=3276
6	the	the	DET	DT	Definite=Def|PronType=Art	5	_	_	start_char=3277|end_char=3280
7	learned	learn	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	6	_	_	start_char=3281|end_char=3288
8	machine	machine	NOUN	NN	Number=Sing	7	_	_	start_char=3289|end_char=3296
9	m	m	NOUN	NN	Number=Sing	8	_	_	start_char=3297|end_char=3298
10	to	to	PART	TO	_	9	_	_	start_char=3299|end_char=3301
11	be	be	AUX	VB	VerbForm=Inf	10	_	_	start_char=3302|end_char=3304
12	consistent	consistent	ADJ	JJ	Degree=Pos	11	_	_	start_char=3305|end_char=3315
13	w.r.t.	w.r.t.	PUNCT	,	_	12	_	_	start_char=3316|end_char=3322
14	the	the	DET	DT	Definite=Def|PronType=Art	13	_	_	start_char=3323|end_char=3326
15	training	training	NOUN	NN	Number=Sing	14	_	_	start_char=3327|end_char=3335
16	set	set	NOUN	NN	Number=Sing	15	_	_	start_char=3336|end_char=3339
17	r	be	X	AFX	_	16	_	_	SpaceAfter=No|start_char=3340|end_char=3341
18	,	,	PUNCT	,	_	17	_	_	start_char=3341|end_char=3342
19	meaning	mean	VERB	VBG	Tense=Pres|VerbForm=Part	18	_	_	start_char=3343|end_char=3350
20	that	that	SCONJ	IN	_	19	_	_	start_char=3351|end_char=3355
21	for	for	ADP	IN	_	20	_	_	start_char=3356|end_char=3359
22	every	every	DET	DT	PronType=Tot	21	_	_	start_char=3360|end_char=3365
23	pair	pair	NOUN	NN	Number=Sing	22	_	_	start_char=3366|end_char=3370
24	(	(	PUNCT	-LRB-	_	23	_	_	SpaceAfter=No|start_char=3371|end_char=3372
25	ρ	ρ	NOUN	NN	Number=Sing	24	_	_	start_char=3372|end_char=3373
26	in	in	ADP	IN	_	25	_	_	start_char=3374|end_char=3376
27	,	,	PUNCT	,	_	26	_	_	start_char=3377|end_char=3378
28	ρ	ρ	NOUN	NN	Number=Sing	27	_	_	start_char=3379|end_char=3380
29	out	out	ADP	RP	_	28	_	_	start_char=3381|end_char=3384
30	)	)	PUNCT	-RRB-	_	29	_	_	start_char=3385|end_char=3386
31	∈	∈	NOUN	NN	Number=Sing	30	_	_	start_char=3387|end_char=3388
32	r	be	X	AFX	_	31	_	_	SpaceAfter=No|start_char=3389|end_char=3390
33	,	,	PUNCT	,	_	32	_	_	start_char=3390|end_char=3391
34	m	m	NOUN	NN	Number=Sing	33	_	_	start_char=3392|end_char=3393
35	must	must	AUX	MD	VerbForm=Fin	34	_	_	start_char=3394|end_char=3398
36	output	output	VERB	VB	VerbForm=Inf	35	_	_	start_char=3399|end_char=3405
37	ρ	ρ	NOUN	NN	Number=Sing	36	_	_	start_char=3406|end_char=3407
38	out	out	ADP	RP	_	37	_	_	start_char=3408|end_char=3411
39	when	when	ADV	WRB	PronType=Int	38	_	_	start_char=3412|end_char=3416
40	fed	feed	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	39	_	_	start_char=3417|end_char=3420
41	with	with	ADP	IN	_	40	_	_	start_char=3421|end_char=3425
42	ρ	ρ	NOUN	NN	Number=Sing	41	_	_	start_char=3426|end_char=3427
43	in	in	ADP	IN	_	42	_	_	start_char=3428|end_char=3430
44	.	.	PUNCT	.	_	43	_	_	start_char=3431|end_char=3432
45	but	but	CCONJ	CC	_	44	_	_	start_char=3433|end_char=3436
46	in	in	ADP	IN	_	45	_	_	start_char=3437|end_char=3439
47	addition	addition	NOUN	NN	Number=Sing	46	_	_	start_char=3440|end_char=3448
48	to	to	ADP	IN	_	47	_	_	start_char=3449|end_char=3451
49	consistency	consistency	NOUN	NN	Number=Sing	48	_	_	SpaceAfter=No|start_char=3452|end_char=3463
50	,	,	PUNCT	,	_	49	_	_	start_char=3463|end_char=3464
51	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	50	_	_	start_char=3465|end_char=3467
52	would	would	AUX	MD	VerbForm=Fin	51	_	_	start_char=3468|end_char=3473
53	like	like	VERB	VB	VerbForm=Inf	52	_	_	start_char=3474|end_char=3478
54	m	m	NOUN	NN	Number=Sing	53	_	_	start_char=3479|end_char=3480
55	to	to	PART	TO	_	54	_	_	start_char=3481|end_char=3483
56	behave	behave	VERB	VB	VerbForm=Inf	55	_	_	start_char=3484|end_char=3490
57	well	well	ADV	RB	Degree=Pos	56	_	_	start_char=3491|end_char=3495
58	w.r.t.	w.r.t.	ADP	IN	_	57	_	_	start_char=3496|end_char=3502
59	several	several	ADJ	JJ	Degree=Pos	58	_	_	start_char=3503|end_char=3510
60	performance	performance	NOUN	NN	Number=Sing	59	_	_	start_char=3511|end_char=3522
61	criteria	criterion	NOUN	NNS	Number=Plur	60	_	_	SpaceAfter=No|start_char=3523|end_char=3531
62	,	,	PUNCT	,	_	61	_	_	start_char=3531|end_char=3532
63	including	include	VERB	VBG	Tense=Pres|VerbForm=Part	62	_	_	start_char=3533|end_char=3542
64	complexity	complexity	NOUN	NN	Number=Sing	63	_	_	start_char=3543|end_char=3553
65	of	of	ADP	IN	_	64	_	_	start_char=3554|end_char=3556
66	the	the	DET	DT	Definite=Def|PronType=Art	65	_	_	start_char=3557|end_char=3560
67	learning	learning	NOUN	NN	Number=Sing	66	_	_	start_char=3561|end_char=3569
68	algorithm	algorithm	NOUN	NN	Number=Sing	67	_	_	SpaceAfter=No|start_char=3570|end_char=3579
69	,	,	PUNCT	,	_	68	_	_	start_char=3579|end_char=3580
70	size	size	NOUN	NN	Number=Sing	69	_	_	start_char=3581|end_char=3585
71	of	of	ADP	IN	_	70	_	_	start_char=3586|end_char=3588
72	the	the	DET	DT	Definite=Def|PronType=Art	71	_	_	start_char=3589|end_char=3592
73	learned	learn	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	72	_	_	start_char=3593|end_char=3600
74	machine	machine	NOUN	NN	Number=Sing	73	_	_	start_char=3601|end_char=3608
75	m	m	NOUN	NN	Number=Sing	74	_	_	start_char=3609|end_char=3610
76	(	(	PUNCT	-LRB-	_	75	_	_	SpaceAfter=No|start_char=3611|end_char=3612
77	its	its	PRON	PRP$	Case=Gen|Gender=Neut|Number=Sing|Person=3|Poss=Yes|PronType=Prs	76	_	_	start_char=3612|end_char=3615
78	number	number	NOUN	NN	Number=Sing	77	_	_	start_char=3616|end_char=3622
79	of	of	ADP	IN	_	78	_	_	start_char=3623|end_char=3625
80	states	state	NOUN	NNS	Number=Plur	79	_	_	SpaceAfter=No|start_char=3626|end_char=3632
81	)	)	PUNCT	-RRB-	_	80	_	_	SpaceAfter=No|start_char=3632|end_char=3633
82	,	,	PUNCT	,	_	81	_	_	start_char=3633|end_char=3634
83	and	and	CCONJ	CC	_	82	_	_	start_char=3635|end_char=3638
84	accuracy	accuracy	NOUN	NN	Number=Sing	83	_	_	start_char=3639|end_char=3647
85	of	of	ADP	IN	_	84	_	_	start_char=3648|end_char=3650
86	m	m	NOUN	NN	Number=Sing	85	_	_	start_char=3651|end_char=3652
87	,	,	PUNCT	,	_	86	_	_	start_char=3653|end_char=3654
88	which	which	PRON	WDT	PronType=Rel	87	_	_	start_char=3655|end_char=3660
89	captures	capture	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	88	_	_	start_char=3661|end_char=3669
90	how	how	ADV	WRB	PronType=Int	89	_	_	start_char=3670|end_char=3673
91	well	well	ADV	RB	Degree=Pos	90	_	_	start_char=3674|end_char=3678
92	m	m	NOUN	NN	Number=Sing	91	_	_	start_char=3679|end_char=3680
93	performs	perform	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	92	_	_	start_char=3681|end_char=3689
94	on	on	ADP	IN	_	93	_	_	start_char=3690|end_char=3692
95	a	a	DET	DT	Definite=Ind|PronType=Art	94	_	_	start_char=3693|end_char=3694
96	testing	testing	NOUN	NN	Number=Sing	95	_	_	start_char=3695|end_char=3702
97	set	set	NOUN	NN	Number=Sing	96	_	_	start_char=3703|end_char=3706
98	of	of	ADP	IN	_	97	_	_	start_char=3707|end_char=3709
99	traces	trace	NOUN	NNS	Number=Plur	98	_	_	SpaceAfter=No|start_char=3710|end_char=3716
100	,	,	PUNCT	,	_	99	_	_	start_char=3716|end_char=3717
101	different	different	ADJ	JJ	Degree=Pos	100	_	_	start_char=3718|end_char=3727
102	from	from	ADP	IN	_	101	_	_	start_char=3728|end_char=3732
103	the	the	DET	DT	Definite=Def|PronType=Art	102	_	_	start_char=3733|end_char=3736
104	training	training	NOUN	NN	Number=Sing	103	_	_	start_char=3737|end_char=3745
105	set	set	NOUN	NN	Number=Sing	104	_	_	SpaceAfter=No|start_char=3746|end_char=3749
106	.	.	PUNCT	.	_	105	_	_	start_char=3749|end_char=3750

# text = even though this is a basic problem, it appears not to have received much attention in the literature.
# sent_id = 17
1	even	even	ADV	RB	_	0	_	_	start_char=3751|end_char=3755
2	though	though	SCONJ	IN	_	1	_	_	start_char=3756|end_char=3762
3	this	this	PRON	DT	Number=Sing|PronType=Dem	2	_	_	start_char=3763|end_char=3767
4	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	_	_	start_char=3768|end_char=3770
5	a	a	DET	DT	Definite=Ind|PronType=Art	4	_	_	start_char=3771|end_char=3772
6	basic	basic	ADJ	JJ	Degree=Pos	5	_	_	start_char=3773|end_char=3778
7	problem	problem	NOUN	NN	Number=Sing	6	_	_	SpaceAfter=No|start_char=3779|end_char=3786
8	,	,	PUNCT	,	_	7	_	_	start_char=3786|end_char=3787
9	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	8	_	_	start_char=3788|end_char=3790
10	appears	appear	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	_	_	start_char=3791|end_char=3798
11	not	not	PART	RB	Polarity=Neg	10	_	_	start_char=3799|end_char=3802
12	to	to	PART	TO	_	11	_	_	start_char=3803|end_char=3805
13	have	have	AUX	VB	VerbForm=Inf	12	_	_	start_char=3806|end_char=3810
14	received	receive	VERB	VBN	Tense=Past|VerbForm=Part	13	_	_	start_char=3811|end_char=3819
15	much	much	ADJ	JJ	Degree=Pos	14	_	_	start_char=3820|end_char=3824
16	attention	attention	NOUN	NN	Number=Sing	15	_	_	start_char=3825|end_char=3834
17	in	in	ADP	IN	_	16	_	_	start_char=3835|end_char=3837
18	the	the	DET	DT	Definite=Def|PronType=Art	17	_	_	start_char=3838|end_char=3841
19	literature	literature	NOUN	NN	Number=Sing	18	_	_	SpaceAfter=No|start_char=3842|end_char=3852
20	.	.	PUNCT	.	_	19	_	_	start_char=3852|end_char=3853

# text = in fact, to the best of our knowledge, this is the first paper which formalizes and studies this problem.
# sent_id = 18
1	in	in	ADP	IN	_	0	_	_	start_char=3854|end_char=3856
2	fact	fact	NOUN	NN	Number=Sing	1	_	_	SpaceAfter=No|start_char=3857|end_char=3861
3	,	,	PUNCT	,	_	2	_	_	start_char=3861|end_char=3862
4	to	to	ADP	IN	_	3	_	_	start_char=3863|end_char=3865
5	the	the	DET	DT	Definite=Def|PronType=Art	4	_	_	start_char=3866|end_char=3869
6	best	good	ADJ	JJS	Degree=Sup	5	_	_	start_char=3870|end_char=3874
7	of	of	ADP	IN	_	6	_	_	start_char=3875|end_char=3877
8	our	our	PRON	PRP$	Case=Gen|Number=Plur|Person=1|Poss=Yes|PronType=Prs	7	_	_	start_char=3878|end_char=3881
9	knowledge	knowledge	NOUN	NN	Number=Sing	8	_	_	SpaceAfter=No|start_char=3882|end_char=3891
10	,	,	PUNCT	,	_	9	_	_	start_char=3891|end_char=3892
11	this	this	PRON	DT	Number=Sing|PronType=Dem	10	_	_	start_char=3893|end_char=3897
12	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	11	_	_	start_char=3898|end_char=3900
13	the	the	DET	DT	Definite=Def|PronType=Art	12	_	_	start_char=3901|end_char=3904
14	first	first	ADJ	JJ	Degree=Pos|NumForm=Word|NumType=Ord	13	_	_	start_char=3905|end_char=3910
15	paper	paper	NOUN	NN	Number=Sing	14	_	_	start_char=3911|end_char=3916
16	which	which	PRON	WDT	PronType=Rel	15	_	_	start_char=3917|end_char=3922
17	formalizes	formalize	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	16	_	_	start_char=3923|end_char=3933
18	and	and	CCONJ	CC	_	17	_	_	start_char=3934|end_char=3937
19	studies	study	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	18	_	_	start_char=3938|end_char=3945
20	this	this	DET	DT	Number=Sing|PronType=Dem	19	_	_	start_char=3946|end_char=3950
21	problem	problem	NOUN	NN	Number=Sing	20	_	_	SpaceAfter=No|start_char=3951|end_char=3958
22	.	.	PUNCT	.	_	21	_	_	start_char=3958|end_char=3959

# text = this is despite a large body of all algorithms developed in this paper belong in the heuristic category in the sense that we do not attempt to find a smallest machine.
# sent_id = 19
1	this	this	PRON	DT	Number=Sing|PronType=Dem	0	_	_	start_char=3960|end_char=3964
2	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	1	_	_	start_char=3965|end_char=3967
3	despite	despite	ADP	IN	_	2	_	_	start_char=3968|end_char=3975
4	a	a	DET	DT	Definite=Ind|PronType=Art	3	_	_	start_char=3976|end_char=3977
5	large	large	ADJ	JJ	Degree=Pos	4	_	_	start_char=3978|end_char=3983
6	body	body	NOUN	NN	Number=Sing	5	_	_	start_char=3984|end_char=3988
7	of	of	ADP	IN	_	6	_	_	start_char=3989|end_char=3991
8	all	all	DET	DT	PronType=Tot	7	_	_	start_char=3992|end_char=3995
9	algorithms	algorithm	NOUN	NNS	Number=Plur	8	_	_	start_char=3996|end_char=4006
10	developed	develop	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	9	_	_	start_char=4007|end_char=4016
11	in	in	ADP	IN	_	10	_	_	start_char=4017|end_char=4019
12	this	this	DET	DT	Number=Sing|PronType=Dem	11	_	_	start_char=4020|end_char=4024
13	paper	paper	NOUN	NN	Number=Sing	12	_	_	start_char=4025|end_char=4030
14	belong	belong	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	13	_	_	start_char=4031|end_char=4037
15	in	in	ADP	IN	_	14	_	_	start_char=4038|end_char=4040
16	the	the	DET	DT	Definite=Def|PronType=Art	15	_	_	start_char=4041|end_char=4044
17	heuristic	heuristic	ADJ	JJ	Degree=Pos	16	_	_	start_char=4045|end_char=4054
18	category	category	NOUN	NN	Number=Sing	17	_	_	start_char=4055|end_char=4063
19	in	in	ADP	IN	_	18	_	_	start_char=4064|end_char=4066
20	the	the	DET	DT	Definite=Def|PronType=Art	19	_	_	start_char=4067|end_char=4070
21	sense	sense	NOUN	NN	Number=Sing	20	_	_	start_char=4071|end_char=4076
22	that	that	SCONJ	IN	_	21	_	_	start_char=4077|end_char=4081
23	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	22	_	_	start_char=4082|end_char=4084
24	do	do	AUX	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	23	_	_	start_char=4085|end_char=4087
25	not	not	PART	RB	Polarity=Neg	24	_	_	start_char=4088|end_char=4091
26	attempt	attempt	VERB	VB	VerbForm=Inf	25	_	_	start_char=4092|end_char=4099
27	to	to	PART	TO	_	26	_	_	start_char=4100|end_char=4102
28	find	find	VERB	VB	VerbForm=Inf	27	_	_	start_char=4103|end_char=4107
29	a	a	DET	DT	Definite=Ind|PronType=Art	28	_	_	start_char=4108|end_char=4109
30	smallest	small	ADJ	JJS	Degree=Sup	29	_	_	start_char=4110|end_char=4118
31	machine	machine	NOUN	NN	Number=Sing	30	_	_	SpaceAfter=No|start_char=4119|end_char=4126
32	.	.	PUNCT	.	_	31	_	_	start_char=4126|end_char=4127

# text = however, we would still like to learn a small machine.
# sent_id = 20
1	however	however	ADV	RB	_	0	_	_	SpaceAfter=No|start_char=4128|end_char=4135
2	,	,	PUNCT	,	_	1	_	_	start_char=4135|end_char=4136
3	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	2	_	_	start_char=4137|end_char=4139
4	would	would	AUX	MD	VerbForm=Fin	3	_	_	start_char=4140|end_char=4145
5	still	still	ADV	RB	_	4	_	_	start_char=4146|end_char=4151
6	like	like	VERB	VB	VerbForm=Inf	5	_	_	start_char=4152|end_char=4156
7	to	to	PART	TO	_	6	_	_	start_char=4157|end_char=4159
8	learn	learn	VERB	VB	VerbForm=Inf	7	_	_	start_char=4160|end_char=4165
9	a	a	DET	DT	Definite=Ind|PronType=Art	8	_	_	start_char=4166|end_char=4167
10	small	small	ADJ	JJ	Degree=Pos	9	_	_	start_char=4168|end_char=4173
11	machine	machine	NOUN	NN	Number=Sing	10	_	_	SpaceAfter=No|start_char=4174|end_char=4181
12	.	.	PUNCT	.	_	11	_	_	start_char=4181|end_char=4182

# text = thus, size is an important performance criterion, as explained in section 5.1. like rpni and other algorithms, mooremi is also a state-merging algorithm. [46] is close to our work, but the algorithm described there does not always yield a deterministic moore machine, while our algorithms do.
# sent_id = 21
1	thus	thus	ADV	RB	_	0	_	_	SpaceAfter=No|start_char=4183|end_char=4187
2	,	,	PUNCT	,	_	1	_	_	start_char=4187|end_char=4188
3	size	size	NOUN	NN	Number=Sing	2	_	_	start_char=4189|end_char=4193
4	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	_	_	start_char=4194|end_char=4196
5	an	a	DET	DT	Definite=Ind|PronType=Art	4	_	_	start_char=4197|end_char=4199
6	important	important	ADJ	JJ	Degree=Pos	5	_	_	start_char=4200|end_char=4209
7	performance	performance	NOUN	NN	Number=Sing	6	_	_	start_char=4210|end_char=4221
8	criterion	criterion	NOUN	NN	Number=Sing	7	_	_	SpaceAfter=No|start_char=4222|end_char=4231
9	,	,	PUNCT	,	_	8	_	_	start_char=4231|end_char=4232
10	as	as	SCONJ	IN	_	9	_	_	start_char=4233|end_char=4235
11	explained	explain	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	10	_	_	start_char=4236|end_char=4245
12	in	in	ADP	IN	_	11	_	_	start_char=4246|end_char=4248
13	section	section	NOUN	NN	Number=Sing	12	_	_	start_char=4249|end_char=4256
14	5.1	5.1	NUM	CD	NumForm=Digit|NumType=Frac	13	_	_	SpaceAfter=No|start_char=4257|end_char=4260
15	.	.	PUNCT	.	_	14	_	_	start_char=4260|end_char=4261
16	like	like	ADP	IN	_	15	_	_	start_char=4262|end_char=4266
17	rpni	rpni	NOUN	NN	Number=Sing	16	_	_	start_char=4267|end_char=4271
18	and	and	CCONJ	CC	_	17	_	_	start_char=4272|end_char=4275
19	other	other	ADJ	JJ	Degree=Pos	18	_	_	start_char=4276|end_char=4281
20	algorithms	algorithm	NOUN	NNS	Number=Plur	19	_	_	SpaceAfter=No|start_char=4282|end_char=4292
21	,	,	PUNCT	,	_	20	_	_	start_char=4292|end_char=4293
22	mooremi	mooremi	NOUN	NN	Number=Sing	21	_	_	start_char=4294|end_char=4301
23	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	22	_	_	start_char=4302|end_char=4304
24	also	also	ADV	RB	_	23	_	_	start_char=4305|end_char=4309
25	a	a	DET	DT	Definite=Ind|PronType=Art	24	_	_	start_char=4310|end_char=4311
26	state	state	NOUN	NN	Number=Sing	25	_	_	SpaceAfter=No|start_char=4312|end_char=4317
27	-	-	PUNCT	HYPH	_	26	_	_	SpaceAfter=No|start_char=4317|end_char=4318
28	merging	merge	NOUN	NN	Number=Sing	27	_	_	start_char=4318|end_char=4325
29	algorithm	algorithm	NOUN	NN	Number=Sing	28	_	_	SpaceAfter=No|start_char=4326|end_char=4335
30	.	.	PUNCT	.	_	29	_	_	start_char=4335|end_char=4336
31	[	[	PUNCT	-LRB-	_	30	_	_	SpaceAfter=No|start_char=4337|end_char=4338
32	46	46	NUM	CD	NumForm=Digit|NumType=Card	31	_	_	SpaceAfter=No|start_char=4338|end_char=4340
33	]	]	PUNCT	-RRB-	_	32	_	_	start_char=4340|end_char=4341
34	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	33	_	_	start_char=4342|end_char=4344
35	close	close	ADJ	JJ	Degree=Pos	34	_	_	start_char=4345|end_char=4350
36	to	to	ADP	IN	_	35	_	_	start_char=4351|end_char=4353
37	our	our	PRON	PRP$	Case=Gen|Number=Plur|Person=1|Poss=Yes|PronType=Prs	36	_	_	start_char=4354|end_char=4357
38	work	work	NOUN	NN	Number=Sing	37	_	_	SpaceAfter=No|start_char=4358|end_char=4362
39	,	,	PUNCT	,	_	38	_	_	start_char=4362|end_char=4363
40	but	but	CCONJ	CC	_	39	_	_	start_char=4364|end_char=4367
41	the	the	DET	DT	Definite=Def|PronType=Art	40	_	_	start_char=4368|end_char=4371
42	algorithm	algorithm	NOUN	NN	Number=Sing	41	_	_	start_char=4372|end_char=4381
43	described	describe	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	42	_	_	start_char=4382|end_char=4391
44	there	there	PRON	EX	_	43	_	_	start_char=4392|end_char=4397
45	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	44	_	_	start_char=4398|end_char=4402
46	not	not	PART	RB	Polarity=Neg	45	_	_	start_char=4403|end_char=4406
47	always	always	ADV	RB	PronType=Tot	46	_	_	start_char=4407|end_char=4413
48	yield	yield	VERB	VB	VerbForm=Inf	47	_	_	start_char=4414|end_char=4419
49	a	a	DET	DT	Definite=Ind|PronType=Art	48	_	_	start_char=4420|end_char=4421
50	deterministic	deterministic	ADJ	JJ	Degree=Pos	49	_	_	start_char=4422|end_char=4435
51	moore	moore	NOUN	NN	Number=Sing	50	_	_	start_char=4436|end_char=4441
52	machine	machine	NOUN	NN	Number=Sing	51	_	_	SpaceAfter=No|start_char=4442|end_char=4449
53	,	,	PUNCT	,	_	52	_	_	start_char=4449|end_char=4450
54	while	while	SCONJ	IN	_	53	_	_	start_char=4451|end_char=4456
55	our	our	PRON	PRP$	Case=Gen|Number=Plur|Person=1|Poss=Yes|PronType=Prs	54	_	_	start_char=4457|end_char=4460
56	algorithms	algorithm	NOUN	NNS	Number=Plur	55	_	_	start_char=4461|end_char=4471
57	do	do	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	56	_	_	SpaceAfter=No|start_char=4472|end_char=4474
58	.	.	PUNCT	.	_	57	_	_	start_char=4474|end_char=4475

# text = this is important because we want to learn systems like digital circuits, embedded controllers (e.g. modeled in simulink), etc., and such systems are typically deterministic.
# sent_id = 22
1	this	this	PRON	DT	Number=Sing|PronType=Dem	0	_	_	start_char=4476|end_char=4480
2	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	1	_	_	start_char=4481|end_char=4483
3	important	important	ADJ	JJ	Degree=Pos	2	_	_	start_char=4484|end_char=4493
4	because	because	SCONJ	IN	_	3	_	_	start_char=4494|end_char=4501
5	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	4	_	_	start_char=4502|end_char=4504
6	want	want	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	5	_	_	start_char=4505|end_char=4509
7	to	to	PART	TO	_	6	_	_	start_char=4510|end_char=4512
8	learn	learn	VERB	VB	VerbForm=Inf	7	_	_	start_char=4513|end_char=4518
9	systems	system	NOUN	NNS	Number=Plur	8	_	_	start_char=4519|end_char=4526
10	like	like	ADP	IN	_	9	_	_	start_char=4527|end_char=4531
11	digital	digital	ADJ	JJ	Degree=Pos	10	_	_	start_char=4532|end_char=4539
12	circuits	circuit	NOUN	NNS	Number=Plur	11	_	_	SpaceAfter=No|start_char=4540|end_char=4548
13	,	,	PUNCT	,	_	12	_	_	start_char=4548|end_char=4549
14	embedded	embed	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	13	_	_	start_char=4550|end_char=4558
15	controllers	controller	NOUN	NNS	Number=Plur	14	_	_	start_char=4559|end_char=4570
16	(	(	PUNCT	-LRB-	_	15	_	_	SpaceAfter=No|start_char=4571|end_char=4572
17	e.g.	e.g.	ADV	FW	Abbr=Yes	16	_	_	start_char=4572|end_char=4576
18	modeled	model	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	17	_	_	start_char=4577|end_char=4584
19	in	in	ADP	IN	_	18	_	_	start_char=4585|end_char=4587
20	simulink	simulink	NOUN	NN	Number=Sing	19	_	_	SpaceAfter=No|start_char=4588|end_char=4596
21	)	)	PUNCT	-RRB-	_	20	_	_	SpaceAfter=No|start_char=4596|end_char=4597
22	,	,	PUNCT	,	_	21	_	_	start_char=4597|end_char=4598
23	etc.	etc.	NOUN	FW	Abbr=Yes|Number=Plur	22	_	_	SpaceAfter=No|start_char=4599|end_char=4603
24	,	,	PUNCT	,	_	23	_	_	start_char=4603|end_char=4604
25	and	and	CCONJ	CC	_	24	_	_	start_char=4605|end_char=4608
26	such	such	ADJ	JJ	Degree=Pos	25	_	_	start_char=4609|end_char=4613
27	systems	system	NOUN	NNS	Number=Plur	26	_	_	start_char=4614|end_char=4621
28	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	27	_	_	start_char=4622|end_char=4625
29	typically	typically	ADV	RB	_	28	_	_	start_char=4626|end_char=4635
30	deterministic	deterministic	ADJ	JJ	Degree=Pos	29	_	_	SpaceAfter=No|start_char=4636|end_char=4649
31	.	.	PUNCT	.	_	30	_	_	start_char=4649|end_char=4650

# text = the k-tails algorithm for finite state machine inference [9] may also result in non-deterministic machines.
# sent_id = 23
1	the	the	DET	DT	Definite=Def|PronType=Art	0	_	_	start_char=4651|end_char=4654
2	k-	k-	PROPN	NNP	Number=Sing	1	_	_	SpaceAfter=No|start_char=4655|end_char=4657
3	tails	tail	NOUN	NNS	Number=Plur	2	_	_	start_char=4657|end_char=4662
4	algorithm	algorithm	NOUN	NN	Number=Sing	3	_	_	start_char=4663|end_char=4672
5	for	for	ADP	IN	_	4	_	_	start_char=4673|end_char=4676
6	finite	finite	ADJ	JJ	Degree=Pos	5	_	_	start_char=4677|end_char=4683
7	state	state	NOUN	NN	Number=Sing	6	_	_	start_char=4684|end_char=4689
8	machine	machine	NOUN	NN	Number=Sing	7	_	_	start_char=4690|end_char=4697
9	inference	inference	NOUN	NN	Number=Sing	8	_	_	start_char=4698|end_char=4707
10	[	[	PUNCT	-LRB-	_	9	_	_	SpaceAfter=No|start_char=4708|end_char=4709
11	9	9	NUM	CD	NumForm=Digit|NumType=Card	10	_	_	SpaceAfter=No|start_char=4709|end_char=4710
12	]	]	PUNCT	-RRB-	_	11	_	_	start_char=4710|end_char=4711
13	may	may	AUX	MD	VerbForm=Fin	12	_	_	start_char=4712|end_char=4715
14	also	also	ADV	RB	_	13	_	_	start_char=4716|end_char=4720
15	result	result	VERB	VB	VerbForm=Inf	14	_	_	start_char=4721|end_char=4727
16	in	in	ADP	IN	_	15	_	_	start_char=4728|end_char=4730
17	non-deterministic	non-deterministic	ADJ	JJ	Degree=Pos	16	_	_	start_char=4731|end_char=4748
18	machines	machine	NOUN	NNS	Number=Plur	17	_	_	SpaceAfter=No|start_char=4749|end_char=4757
19	.	.	PUNCT	.	_	18	_	_	start_char=4757|end_char=4758

# text = moreover, this algorithm does not generally yield smallest machines, since the initial partition of the input words into equivalence classes (which then become the states of the learned machine) can be overly conservative . 4 the work in [29] deals with learning finite state machine abstractions of non-linear analog circuits.
# sent_id = 24
1	moreover	moreover	ADV	RB	_	0	_	_	SpaceAfter=No|start_char=4759|end_char=4767
2	,	,	PUNCT	,	_	1	_	_	start_char=4767|end_char=4768
3	this	this	DET	DT	Number=Sing|PronType=Dem	2	_	_	start_char=4769|end_char=4773
4	algorithm	algorithm	NOUN	NN	Number=Sing	3	_	_	start_char=4774|end_char=4783
5	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	_	_	start_char=4784|end_char=4788
6	not	not	PART	RB	Polarity=Neg	5	_	_	start_char=4789|end_char=4792
7	generally	generally	ADV	RB	Degree=Pos	6	_	_	start_char=4793|end_char=4802
8	yield	yield	VERB	VB	VerbForm=Inf	7	_	_	start_char=4803|end_char=4808
9	smallest	small	ADJ	JJS	Degree=Sup	8	_	_	start_char=4809|end_char=4817
10	machines	machine	NOUN	NNS	Number=Plur	9	_	_	SpaceAfter=No|start_char=4818|end_char=4826
11	,	,	PUNCT	,	_	10	_	_	start_char=4826|end_char=4827
12	since	since	ADP	IN	_	11	_	_	start_char=4828|end_char=4833
13	the	the	DET	DT	Definite=Def|PronType=Art	12	_	_	start_char=4834|end_char=4837
14	initial	initial	ADJ	JJ	Degree=Pos	13	_	_	start_char=4838|end_char=4845
15	partition	partition	NOUN	NN	Number=Sing	14	_	_	start_char=4846|end_char=4855
16	of	of	ADP	IN	_	15	_	_	start_char=4856|end_char=4858
17	the	the	DET	DT	Definite=Def|PronType=Art	16	_	_	start_char=4859|end_char=4862
18	input	input	NOUN	NN	Number=Sing	17	_	_	start_char=4863|end_char=4868
19	words	word	NOUN	NNS	Number=Plur	18	_	_	start_char=4869|end_char=4874
20	into	into	ADP	IN	_	19	_	_	start_char=4875|end_char=4879
21	equivalence	equivalence	NOUN	NN	Number=Sing	20	_	_	start_char=4880|end_char=4891
22	classes	class	NOUN	NNS	Number=Plur	21	_	_	start_char=4892|end_char=4899
23	(	(	PUNCT	-LRB-	_	22	_	_	SpaceAfter=No|start_char=4900|end_char=4901
24	which	which	PRON	WDT	PronType=Rel	23	_	_	start_char=4901|end_char=4906
25	then	then	ADV	RB	PronType=Dem	24	_	_	start_char=4907|end_char=4911
26	become	become	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	25	_	_	start_char=4912|end_char=4918
27	the	the	DET	DT	Definite=Def|PronType=Art	26	_	_	start_char=4919|end_char=4922
28	states	state	NOUN	NNS	Number=Plur	27	_	_	start_char=4923|end_char=4929
29	of	of	ADP	IN	_	28	_	_	start_char=4930|end_char=4932
30	the	the	DET	DT	Definite=Def|PronType=Art	29	_	_	start_char=4933|end_char=4936
31	learned	learn	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	30	_	_	start_char=4937|end_char=4944
32	machine	machine	NOUN	NN	Number=Sing	31	_	_	SpaceAfter=No|start_char=4945|end_char=4952
33	)	)	PUNCT	-RRB-	_	32	_	_	start_char=4952|end_char=4953
34	can	can	AUX	MD	VerbForm=Fin	33	_	_	start_char=4954|end_char=4957
35	be	be	AUX	VB	VerbForm=Inf	34	_	_	start_char=4958|end_char=4960
36	overly	overly	ADV	RB	_	35	_	_	start_char=4961|end_char=4967
37	conservative	conservative	ADJ	JJ	Degree=Pos	36	_	_	start_char=4968|end_char=4980
38	.	.	PUNCT	.	_	37	_	_	start_char=4981|end_char=4982
39	4	4	NUM	CD	NumForm=Digit|NumType=Card	38	_	_	start_char=4983|end_char=4984
40	the	the	DET	DT	Definite=Def|PronType=Art	39	_	_	start_char=4985|end_char=4988
41	work	work	NOUN	NN	Number=Sing	40	_	_	start_char=4989|end_char=4993
42	in	in	ADP	IN	_	41	_	_	start_char=4994|end_char=4996
43	[	[	PUNCT	-LRB-	_	42	_	_	SpaceAfter=No|start_char=4997|end_char=4998
44	29	29	NUM	CD	NumForm=Digit|NumType=Card	43	_	_	SpaceAfter=No|start_char=4998|end_char=5000
45	]	]	PUNCT	-RRB-	_	44	_	_	start_char=5000|end_char=5001
46	deals	deal	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	45	_	_	start_char=5002|end_char=5007
47	with	with	SCONJ	IN	_	46	_	_	start_char=5008|end_char=5012
48	learning	learning	NOUN	NN	Number=Sing	47	_	_	start_char=5013|end_char=5021
49	finite	finite	ADJ	JJ	Degree=Pos	48	_	_	start_char=5022|end_char=5028
50	state	state	NOUN	NN	Number=Sing	49	_	_	start_char=5029|end_char=5034
51	machine	machine	NOUN	NN	Number=Sing	50	_	_	start_char=5035|end_char=5042
52	abstractions	abstraction	NOUN	NNS	Number=Plur	51	_	_	start_char=5043|end_char=5055
53	of	of	ADP	IN	_	52	_	_	start_char=5056|end_char=5058
54	non-linear	non-linear	ADJ	JJ	Degree=Pos	53	_	_	start_char=5059|end_char=5069
55	analog	analog	NOUN	NN	Number=Sing	54	_	_	start_char=5070|end_char=5076
56	circuits	circuit	NOUN	NNS	Number=Plur	55	_	_	SpaceAfter=No|start_char=5077|end_char=5085
57	.	.	PUNCT	.	_	56	_	_	start_char=5085|end_char=5086

# text = the algorithm described in [29] is very different from ours, and uses the circuit's number of inputs to determine a subset of the states in the learned abstraction.
# sent_id = 25
1	the	the	DET	DT	Definite=Def|PronType=Art	0	_	_	start_char=5087|end_char=5090
2	algorithm	algorithm	NOUN	NN	Number=Sing	1	_	_	start_char=5091|end_char=5100
3	described	describe	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	2	_	_	start_char=5101|end_char=5110
4	in	in	ADP	IN	_	3	_	_	start_char=5111|end_char=5113
5	[	[	PUNCT	-LRB-	_	4	_	_	SpaceAfter=No|start_char=5114|end_char=5115
6	29	29	NUM	CD	NumForm=Digit|NumType=Card	5	_	_	SpaceAfter=No|start_char=5115|end_char=5117
7	]	]	PUNCT	-RRB-	_	6	_	_	start_char=5117|end_char=5118
8	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	_	_	start_char=5119|end_char=5121
9	very	very	ADV	RB	_	8	_	_	start_char=5122|end_char=5126
10	different	different	ADJ	JJ	Degree=Pos	9	_	_	start_char=5127|end_char=5136
11	from	from	ADP	IN	_	10	_	_	start_char=5137|end_char=5141
12	ours	our	PRON	PRP	Number=Plur|Person=1|Poss=Yes|PronType=Prs	11	_	_	SpaceAfter=No|start_char=5142|end_char=5146
13	,	,	PUNCT	,	_	12	_	_	start_char=5146|end_char=5147
14	and	and	CCONJ	CC	_	13	_	_	start_char=5148|end_char=5151
15	uses	use	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	_	_	start_char=5152|end_char=5156
16	the	the	DET	DT	Definite=Def|PronType=Art	15	_	_	start_char=5157|end_char=5160
17-18	circuit's	_	_	_	_	_	_	_	start_char=5161|end_char=5170
17	circuit	circuit	NOUN	NN	Number=Sing	16	_	_	start_char=5161|end_char=5168
18	's	's	PART	POS	_	17	_	_	start_char=5168|end_char=5170
19	number	number	NOUN	NN	Number=Sing	18	_	_	start_char=5171|end_char=5177
20	of	of	ADP	IN	_	19	_	_	start_char=5178|end_char=5180
21	inputs	input	NOUN	NNS	Number=Plur	20	_	_	start_char=5181|end_char=5187
22	to	to	PART	TO	_	21	_	_	start_char=5188|end_char=5190
23	determine	determine	VERB	VB	VerbForm=Inf	22	_	_	start_char=5191|end_char=5200
24	a	a	DET	DT	Definite=Ind|PronType=Art	23	_	_	start_char=5201|end_char=5202
25	subset	subset	NOUN	NN	Number=Sing	24	_	_	start_char=5203|end_char=5209
26	of	of	ADP	IN	_	25	_	_	start_char=5210|end_char=5212
27	the	the	DET	DT	Definite=Def|PronType=Art	26	_	_	start_char=5213|end_char=5216
28	states	state	NOUN	NNS	Number=Plur	27	_	_	start_char=5217|end_char=5223
29	in	in	ADP	IN	_	28	_	_	start_char=5224|end_char=5226
30	the	the	DET	DT	Definite=Def|PronType=Art	29	_	_	start_char=5227|end_char=5230
31	learned	learn	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	30	_	_	start_char=5231|end_char=5238
32	abstraction	abstraction	NOUN	NN	Number=Sing	31	_	_	SpaceAfter=No|start_char=5239|end_char=5250
33	.	.	PUNCT	.	_	32	_	_	start_char=5250|end_char=5251

# text = also, identification in the limit is not considered in [29] . learning from "inexperienced teachers", i.e. by using either (1) only equivalence queries or (2) equivalence plus membership queries that may be answered inconclusively, has been studied in [20, 34] . related but different from our work are approaches which synthesize state machines from scenarios and requirements.
# sent_id = 26
1	also	also	ADV	RB	_	0	_	_	SpaceAfter=No|start_char=5252|end_char=5256
2	,	,	PUNCT	,	_	1	_	_	start_char=5256|end_char=5257
3	identification	identification	NOUN	NN	Number=Sing	2	_	_	start_char=5258|end_char=5272
4	in	in	ADP	IN	_	3	_	_	start_char=5273|end_char=5275
5	the	the	DET	DT	Definite=Def|PronType=Art	4	_	_	start_char=5276|end_char=5279
6	limit	limit	NOUN	NN	Number=Sing	5	_	_	start_char=5280|end_char=5285
7	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	_	_	start_char=5286|end_char=5288
8	not	not	PART	RB	Polarity=Neg	7	_	_	start_char=5289|end_char=5292
9	considered	consider	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	8	_	_	start_char=5293|end_char=5303
10	in	in	ADP	IN	_	9	_	_	start_char=5304|end_char=5306
11	[	[	PUNCT	-LRB-	_	10	_	_	SpaceAfter=No|start_char=5307|end_char=5308
12	29	29	NUM	CD	NumForm=Digit|NumType=Card	11	_	_	SpaceAfter=No|start_char=5308|end_char=5310
13	]	]	PUNCT	-RRB-	_	12	_	_	start_char=5310|end_char=5311
14	.	.	PUNCT	.	_	13	_	_	start_char=5312|end_char=5313
15	learning	learning	NOUN	NN	Number=Sing	14	_	_	start_char=5314|end_char=5322
16	from	from	ADP	IN	_	15	_	_	start_char=5323|end_char=5327
17	"	"	PUNCT	``	_	16	_	_	SpaceAfter=No|start_char=5328|end_char=5329
18	inexperienced	inexperienced	ADJ	JJ	Degree=Pos	17	_	_	start_char=5329|end_char=5342
19	teachers	teacher	NOUN	NNS	Number=Plur	18	_	_	SpaceAfter=No|start_char=5343|end_char=5351
20	"	"	PUNCT	''	_	19	_	_	SpaceAfter=No|start_char=5351|end_char=5352
21	,	,	PUNCT	,	_	20	_	_	start_char=5352|end_char=5353
22	i.e.	i.e.	ADV	FW	Abbr=Yes	21	_	_	start_char=5354|end_char=5358
23	by	by	SCONJ	IN	_	22	_	_	start_char=5359|end_char=5361
24	using	use	VERB	VBG	Tense=Pres|VerbForm=Part	23	_	_	start_char=5362|end_char=5367
25	either	either	CCONJ	CC	_	24	_	_	start_char=5368|end_char=5374
26	(	(	PUNCT	-LRB-	_	25	_	_	SpaceAfter=No|start_char=5375|end_char=5376
27	1	1	NUM	LS	NumForm=Digit|NumType=Card	26	_	_	SpaceAfter=No|start_char=5376|end_char=5377
28	)	)	PUNCT	-RRB-	_	27	_	_	start_char=5377|end_char=5378
29	only	only	ADV	RB	_	28	_	_	start_char=5379|end_char=5383
30	equivalence	equivalence	NOUN	NN	Number=Sing	29	_	_	start_char=5384|end_char=5395
31	queries	query	NOUN	NNS	Number=Plur	30	_	_	start_char=5396|end_char=5403
32	or	or	CCONJ	CC	_	31	_	_	start_char=5404|end_char=5406
33	(	(	PUNCT	-LRB-	_	32	_	_	SpaceAfter=No|start_char=5407|end_char=5408
34	2	2	NUM	LS	NumForm=Digit|NumType=Card	33	_	_	SpaceAfter=No|start_char=5408|end_char=5409
35	)	)	PUNCT	-RRB-	_	34	_	_	start_char=5409|end_char=5410
36	equivalence	equivalence	NOUN	NN	Number=Sing	35	_	_	start_char=5411|end_char=5422
37	plus	plus	CCONJ	CC	_	36	_	_	start_char=5423|end_char=5427
38	membership	membership	NOUN	NN	Number=Sing	37	_	_	start_char=5428|end_char=5438
39	queries	query	NOUN	NNS	Number=Plur	38	_	_	start_char=5439|end_char=5446
40	that	that	PRON	WDT	PronType=Rel	39	_	_	start_char=5447|end_char=5451
41	may	may	AUX	MD	VerbForm=Fin	40	_	_	start_char=5452|end_char=5455
42	be	be	AUX	VB	VerbForm=Inf	41	_	_	start_char=5456|end_char=5458
43	answered	answer	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	42	_	_	start_char=5459|end_char=5467
44	inconclusively	inconclusively	ADV	RB	_	43	_	_	SpaceAfter=No|start_char=5468|end_char=5482
45	,	,	PUNCT	,	_	44	_	_	start_char=5482|end_char=5483
46	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	45	_	_	start_char=5484|end_char=5487
47	been	be	AUX	VBN	Tense=Past|VerbForm=Part	46	_	_	start_char=5488|end_char=5492
48	studied	study	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	47	_	_	start_char=5493|end_char=5500
49	in	in	ADP	IN	_	48	_	_	start_char=5501|end_char=5503
50	[	[	PUNCT	-LRB-	_	49	_	_	SpaceAfter=No|start_char=5504|end_char=5505
51	20	20	NUM	CD	NumForm=Digit|NumType=Card	50	_	_	SpaceAfter=No|start_char=5505|end_char=5507
52	,	,	PUNCT	,	_	51	_	_	start_char=5507|end_char=5508
53	34	34	NUM	CD	NumForm=Digit|NumType=Card	52	_	_	SpaceAfter=No|start_char=5509|end_char=5511
54	]	]	PUNCT	-RRB-	_	53	_	_	start_char=5511|end_char=5512
55	.	.	PUNCT	.	_	54	_	_	start_char=5513|end_char=5514
56	related	related	ADJ	JJ	Degree=Pos	55	_	_	start_char=5515|end_char=5522
57	but	but	CCONJ	CC	_	56	_	_	start_char=5523|end_char=5526
58	different	different	ADJ	JJ	Degree=Pos	57	_	_	start_char=5527|end_char=5536
59	from	from	ADP	IN	_	58	_	_	start_char=5537|end_char=5541
60	our	our	PRON	PRP$	Case=Gen|Number=Plur|Person=1|Poss=Yes|PronType=Prs	59	_	_	start_char=5542|end_char=5545
61	work	work	NOUN	NN	Number=Sing	60	_	_	start_char=5546|end_char=5550
62	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	61	_	_	start_char=5551|end_char=5554
63	approaches	approach	NOUN	NNS	Number=Plur	62	_	_	start_char=5555|end_char=5565
64	which	which	PRON	WDT	PronType=Rel	63	_	_	start_char=5566|end_char=5571
65	synthesize	synthesize	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	64	_	_	start_char=5572|end_char=5582
66	state	state	NOUN	NN	Number=Sing	65	_	_	start_char=5583|end_char=5588
67	machines	machine	NOUN	NNS	Number=Plur	66	_	_	start_char=5589|end_char=5597
68	from	from	ADP	IN	_	67	_	_	start_char=5598|end_char=5602
69	scenarios	scenario	NOUN	NNS	Number=Plur	68	_	_	start_char=5603|end_char=5612
70	and	and	CCONJ	CC	_	69	_	_	start_char=5613|end_char=5616
71	requirements	requirement	NOUN	NNS	Number=Plur	70	_	_	SpaceAfter=No|start_char=5617|end_char=5629
72	.	.	PUNCT	.	_	71	_	_	start_char=5629|end_char=5630

# text = scenarios can be provided in various forms, e.g. message sequence charts [5] , event sequence charts [24] , or simply, input-output examples [47] . requirements can be temporal logic formulas as in [5, 47] , or other types of constraints such as the scenario constraints used in [24] . in this paper we have examples, but no requirements.
# sent_id = 27
1	scenarios	scenario	NOUN	NNS	Number=Plur	0	_	_	start_char=5631|end_char=5640
2	can	can	AUX	MD	VerbForm=Fin	1	_	_	start_char=5641|end_char=5644
3	be	be	AUX	VB	VerbForm=Inf	2	_	_	start_char=5645|end_char=5647
4	provided	provide	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	3	_	_	start_char=5648|end_char=5656
5	in	in	ADP	IN	_	4	_	_	start_char=5657|end_char=5659
6	various	various	ADJ	JJ	Degree=Pos	5	_	_	start_char=5660|end_char=5667
7	forms	form	NOUN	NNS	Number=Plur	6	_	_	SpaceAfter=No|start_char=5668|end_char=5673
8	,	,	PUNCT	,	_	7	_	_	start_char=5673|end_char=5674
9	e.g.	e.g.	ADV	FW	Abbr=Yes	8	_	_	start_char=5675|end_char=5679
10	message	message	NOUN	NN	Number=Sing	9	_	_	start_char=5680|end_char=5687
11	sequence	sequence	NOUN	NN	Number=Sing	10	_	_	start_char=5688|end_char=5696
12	charts	chart	NOUN	NNS	Number=Plur	11	_	_	start_char=5697|end_char=5703
13	[	[	PUNCT	-LRB-	_	12	_	_	SpaceAfter=No|start_char=5704|end_char=5705
14	5	5	NUM	CD	NumForm=Digit|NumType=Card	13	_	_	SpaceAfter=No|start_char=5705|end_char=5706
15	]	]	PUNCT	-RRB-	_	14	_	_	start_char=5706|end_char=5707
16	,	,	PUNCT	,	_	15	_	_	start_char=5708|end_char=5709
17	event	event	NOUN	NN	Number=Sing	16	_	_	start_char=5710|end_char=5715
18	sequence	sequence	NOUN	NN	Number=Sing	17	_	_	start_char=5716|end_char=5724
19	charts	chart	NOUN	NNS	Number=Plur	18	_	_	start_char=5725|end_char=5731
20	[	[	PUNCT	-LRB-	_	19	_	_	SpaceAfter=No|start_char=5732|end_char=5733
21	24	24	NUM	CD	NumForm=Digit|NumType=Card	20	_	_	SpaceAfter=No|start_char=5733|end_char=5735
22	]	]	PUNCT	-RRB-	_	21	_	_	start_char=5735|end_char=5736
23	,	,	PUNCT	,	_	22	_	_	start_char=5737|end_char=5738
24	or	or	CCONJ	CC	_	23	_	_	start_char=5739|end_char=5741
25	simply	simply	ADV	RB	_	24	_	_	SpaceAfter=No|start_char=5742|end_char=5748
26	,	,	PUNCT	,	_	25	_	_	start_char=5748|end_char=5749
27	input	input	NOUN	NN	Number=Sing	26	_	_	SpaceAfter=No|start_char=5750|end_char=5755
28	-	-	PUNCT	HYPH	_	27	_	_	SpaceAfter=No|start_char=5755|end_char=5756
29	output	output	NOUN	NN	Number=Sing	28	_	_	start_char=5756|end_char=5762
30	examples	example	NOUN	NNS	Number=Plur	29	_	_	start_char=5763|end_char=5771
31	[	[	PUNCT	-LRB-	_	30	_	_	SpaceAfter=No|start_char=5772|end_char=5773
32	47	47	NUM	CD	NumForm=Digit|NumType=Card	31	_	_	SpaceAfter=No|start_char=5773|end_char=5775
33	]	]	PUNCT	-RRB-	_	32	_	_	start_char=5775|end_char=5776
34	.	.	PUNCT	.	_	33	_	_	start_char=5777|end_char=5778
35	requirements	requirement	NOUN	NNS	Number=Plur	34	_	_	start_char=5779|end_char=5791
36	can	can	AUX	MD	VerbForm=Fin	35	_	_	start_char=5792|end_char=5795
37	be	be	AUX	VB	VerbForm=Inf	36	_	_	start_char=5796|end_char=5798
38	temporal	temporal	ADJ	JJ	Degree=Pos	37	_	_	start_char=5799|end_char=5807
39	logic	logic	NOUN	NN	Number=Sing	38	_	_	start_char=5808|end_char=5813
40	formulas	formula	NOUN	NNS	Number=Plur	39	_	_	start_char=5814|end_char=5822
41	as	as	ADP	IN	_	40	_	_	start_char=5823|end_char=5825
42	in	in	ADP	IN	_	41	_	_	start_char=5826|end_char=5828
43	[	[	PUNCT	-LRB-	_	42	_	_	SpaceAfter=No|start_char=5829|end_char=5830
44	5	5	NUM	CD	NumForm=Digit|NumType=Card	43	_	_	SpaceAfter=No|start_char=5830|end_char=5831
45	,	,	PUNCT	,	_	44	_	_	start_char=5831|end_char=5832
46	47	47	NUM	CD	NumForm=Digit|NumType=Card	45	_	_	SpaceAfter=No|start_char=5833|end_char=5835
47	]	]	PUNCT	-RRB-	_	46	_	_	start_char=5835|end_char=5836
48	,	,	PUNCT	,	_	47	_	_	start_char=5837|end_char=5838
49	or	or	CCONJ	CC	_	48	_	_	start_char=5839|end_char=5841
50	other	other	ADJ	JJ	Degree=Pos	49	_	_	start_char=5842|end_char=5847
51	types	type	NOUN	NNS	Number=Plur	50	_	_	start_char=5848|end_char=5853
52	of	of	ADP	IN	_	51	_	_	start_char=5854|end_char=5856
53	constraints	constraint	NOUN	NNS	Number=Plur	52	_	_	start_char=5857|end_char=5868
54	such	such	ADJ	JJ	ExtPos=ADP	53	_	_	start_char=5869|end_char=5873
55	as	as	ADP	IN	_	54	_	_	start_char=5874|end_char=5876
56	the	the	DET	DT	Definite=Def|PronType=Art	55	_	_	start_char=5877|end_char=5880
57	scenario	scenario	NOUN	NN	Number=Sing	56	_	_	start_char=5881|end_char=5889
58	constraints	constraint	NOUN	NNS	Number=Plur	57	_	_	start_char=5890|end_char=5901
59	used	use	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	58	_	_	start_char=5902|end_char=5906
60	in	in	ADP	IN	_	59	_	_	start_char=5907|end_char=5909
61	[	[	PUNCT	-LRB-	_	60	_	_	SpaceAfter=No|start_char=5910|end_char=5911
62	24	24	NUM	CD	NumForm=Digit|NumType=Card	61	_	_	SpaceAfter=No|start_char=5911|end_char=5913
63	]	]	PUNCT	-RRB-	_	62	_	_	start_char=5913|end_char=5914
64	.	.	PUNCT	.	_	63	_	_	start_char=5915|end_char=5916
65	in	in	ADP	IN	_	64	_	_	start_char=5917|end_char=5919
66	this	this	DET	DT	Number=Sing|PronType=Dem	65	_	_	start_char=5920|end_char=5924
67	paper	paper	NOUN	NN	Number=Sing	66	_	_	start_char=5925|end_char=5930
68	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	67	_	_	start_char=5931|end_char=5933
69	have	have	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	68	_	_	start_char=5934|end_char=5938
70	examples	example	NOUN	NNS	Number=Plur	69	_	_	SpaceAfter=No|start_char=5939|end_char=5947
71	,	,	PUNCT	,	_	70	_	_	start_char=5947|end_char=5948
72	but	but	CCONJ	CC	_	71	_	_	start_char=5949|end_char=5952
73	no	no	DET	DT	PronType=Neg	72	_	_	start_char=5953|end_char=5955
74	requirements	requirement	NOUN	NNS	Number=Plur	73	_	_	SpaceAfter=No|start_char=5956|end_char=5968
75	.	.	PUNCT	.	_	74	_	_	start_char=5968|end_char=5969

# text = also related but different from ours is work in the areas of invariant generation and specification mining, which extract properties of a program or system model, such as invariants [22, 13, 23] , temporal logic formulas [27, 33] or non-deterministic finite automata [6] . fsm learning is related to fsm testing [32] . in particular, notions similar to the nucleus of an fsm and to distinguishing suffixes of states, which are used to define characteristic samples, are also used in [12, 16] . the connection between conformance testing and regular inference is made explicit in [8] and [32] describes how an active learning algorithm can be used for fault detection.
# sent_id = 28
1	also	also	ADV	RB	_	0	_	_	start_char=5970|end_char=5974
2	related	related	ADJ	JJ	Degree=Pos	1	_	_	start_char=5975|end_char=5982
3	but	but	CCONJ	CC	_	2	_	_	start_char=5983|end_char=5986
4	different	different	ADJ	JJ	Degree=Pos	3	_	_	start_char=5987|end_char=5996
5	from	from	ADP	IN	_	4	_	_	start_char=5997|end_char=6001
6	ours	our	PRON	PRP	Number=Plur|Person=1|Poss=Yes|PronType=Prs	5	_	_	start_char=6002|end_char=6006
7	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	_	_	start_char=6007|end_char=6009
8	work	work	NOUN	NN	Number=Sing	7	_	_	start_char=6010|end_char=6014
9	in	in	ADP	IN	_	8	_	_	start_char=6015|end_char=6017
10	the	the	DET	DT	Definite=Def|PronType=Art	9	_	_	start_char=6018|end_char=6021
11	areas	area	NOUN	NNS	Number=Plur	10	_	_	start_char=6022|end_char=6027
12	of	of	ADP	IN	_	11	_	_	start_char=6028|end_char=6030
13	invariant	invariant	ADJ	JJ	Degree=Pos	12	_	_	start_char=6031|end_char=6040
14	generation	generation	NOUN	NN	Number=Sing	13	_	_	start_char=6041|end_char=6051
15	and	and	CCONJ	CC	_	14	_	_	start_char=6052|end_char=6055
16	specification	specification	NOUN	NN	Number=Sing	15	_	_	start_char=6056|end_char=6069
17	mining	mining	NOUN	NN	Number=Sing	16	_	_	SpaceAfter=No|start_char=6070|end_char=6076
18	,	,	PUNCT	,	_	17	_	_	start_char=6076|end_char=6077
19	which	which	PRON	WDT	PronType=Rel	18	_	_	start_char=6078|end_char=6083
20	extract	extract	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	19	_	_	start_char=6084|end_char=6091
21	properties	property	NOUN	NNS	Number=Plur	20	_	_	start_char=6092|end_char=6102
22	of	of	ADP	IN	_	21	_	_	start_char=6103|end_char=6105
23	a	a	DET	DT	Definite=Ind|PronType=Art	22	_	_	start_char=6106|end_char=6107
24	program	program	NOUN	NN	Number=Sing	23	_	_	start_char=6108|end_char=6115
25	or	or	CCONJ	CC	_	24	_	_	start_char=6116|end_char=6118
26	system	system	NOUN	NN	Number=Sing	25	_	_	start_char=6119|end_char=6125
27	model	model	NOUN	NN	Number=Sing	26	_	_	SpaceAfter=No|start_char=6126|end_char=6131
28	,	,	PUNCT	,	_	27	_	_	start_char=6131|end_char=6132
29	such	such	ADJ	JJ	ExtPos=ADP	28	_	_	start_char=6133|end_char=6137
30	as	as	ADP	IN	_	29	_	_	start_char=6138|end_char=6140
31	invariants	invariant	NOUN	NNS	Number=Plur	30	_	_	start_char=6141|end_char=6151
32	[	[	PUNCT	-LRB-	_	31	_	_	SpaceAfter=No|start_char=6152|end_char=6153
33	22	22	NUM	CD	NumForm=Digit|NumType=Card	32	_	_	SpaceAfter=No|start_char=6153|end_char=6155
34	,	,	PUNCT	,	_	33	_	_	start_char=6155|end_char=6156
35	13	13	NUM	CD	NumForm=Digit|NumType=Card	34	_	_	SpaceAfter=No|start_char=6157|end_char=6159
36	,	,	PUNCT	,	_	35	_	_	start_char=6159|end_char=6160
37	23	23	NUM	CD	NumForm=Digit|NumType=Card	36	_	_	SpaceAfter=No|start_char=6161|end_char=6163
38	]	]	PUNCT	-RRB-	_	37	_	_	start_char=6163|end_char=6164
39	,	,	PUNCT	,	_	38	_	_	start_char=6165|end_char=6166
40	temporal	temporal	ADJ	JJ	Degree=Pos	39	_	_	start_char=6167|end_char=6175
41	logic	logic	NOUN	NN	Number=Sing	40	_	_	start_char=6176|end_char=6181
42	formulas	formula	NOUN	NNS	Number=Plur	41	_	_	start_char=6182|end_char=6190
43	[	[	PUNCT	-LRB-	_	42	_	_	SpaceAfter=No|start_char=6191|end_char=6192
44	27	27	NUM	CD	NumForm=Digit|NumType=Card	43	_	_	SpaceAfter=No|start_char=6192|end_char=6194
45	,	,	PUNCT	,	_	44	_	_	start_char=6194|end_char=6195
46	33	33	NUM	CD	NumForm=Digit|NumType=Card	45	_	_	SpaceAfter=No|start_char=6196|end_char=6198
47	]	]	PUNCT	-RRB-	_	46	_	_	start_char=6198|end_char=6199
48	or	or	CCONJ	CC	_	47	_	_	start_char=6200|end_char=6202
49	non-deterministic	non-deterministic	ADJ	JJ	Degree=Pos	48	_	_	start_char=6203|end_char=6220
50	finite	finite	ADJ	JJ	Degree=Pos	49	_	_	start_char=6221|end_char=6227
51	automata	automata	NOUN	NN	Number=Sing	50	_	_	start_char=6228|end_char=6236
52	[	[	PUNCT	-LRB-	_	51	_	_	SpaceAfter=No|start_char=6237|end_char=6238
53	6	6	NUM	CD	NumForm=Digit|NumType=Card	52	_	_	SpaceAfter=No|start_char=6238|end_char=6239
54	]	]	PUNCT	-RRB-	_	53	_	_	start_char=6239|end_char=6240
55	.	.	PUNCT	.	_	54	_	_	start_char=6241|end_char=6242
56	fsm	fsm	NOUN	NN	Number=Sing	55	_	_	start_char=6243|end_char=6246
57	learning	learning	NOUN	NN	Number=Sing	56	_	_	start_char=6247|end_char=6255
58	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	57	_	_	start_char=6256|end_char=6258
59	related	related	ADJ	JJ	Degree=Pos	58	_	_	start_char=6259|end_char=6266
60	to	to	ADP	IN	_	59	_	_	start_char=6267|end_char=6269
61	fsm	fsm	NOUN	NN	Number=Sing	60	_	_	start_char=6270|end_char=6273
62	testing	testing	NOUN	NN	Number=Sing	61	_	_	start_char=6274|end_char=6281
63	[	[	PUNCT	-LRB-	_	62	_	_	SpaceAfter=No|start_char=6282|end_char=6283
64	32	32	NUM	CD	NumForm=Digit|NumType=Card	63	_	_	SpaceAfter=No|start_char=6283|end_char=6285
65	]	]	PUNCT	-RRB-	_	64	_	_	start_char=6285|end_char=6286
66	.	.	PUNCT	.	_	65	_	_	start_char=6287|end_char=6288
67	in	in	ADP	IN	_	66	_	_	start_char=6289|end_char=6291
68	particular	particular	ADJ	JJ	Degree=Pos	67	_	_	SpaceAfter=No|start_char=6292|end_char=6302
69	,	,	PUNCT	,	_	68	_	_	start_char=6302|end_char=6303
70	notions	notion	NOUN	NNS	Number=Plur	69	_	_	start_char=6304|end_char=6311
71	similar	similar	ADJ	JJ	Degree=Pos	70	_	_	start_char=6312|end_char=6319
72	to	to	ADP	IN	_	71	_	_	start_char=6320|end_char=6322
73	the	the	DET	DT	Definite=Def|PronType=Art	72	_	_	start_char=6323|end_char=6326
74	nucleus	nucleus	NOUN	NN	Number=Sing	73	_	_	start_char=6327|end_char=6334
75	of	of	ADP	IN	_	74	_	_	start_char=6335|end_char=6337
76	an	a	DET	DT	Definite=Ind|PronType=Art	75	_	_	start_char=6338|end_char=6340
77	fsm	fsm	NOUN	NN	Number=Sing	76	_	_	start_char=6341|end_char=6344
78	and	and	CCONJ	CC	_	77	_	_	start_char=6345|end_char=6348
79	to	to	ADP	IN	_	78	_	_	start_char=6349|end_char=6351
80	distinguishing	distinguish	VERB	VBG	VerbForm=Ger	79	_	_	start_char=6352|end_char=6366
81	suffixes	suffixe	NOUN	NNS	Number=Plur	80	_	_	start_char=6367|end_char=6375
82	of	of	ADP	IN	_	81	_	_	start_char=6376|end_char=6378
83	states	state	NOUN	NNS	Number=Plur	82	_	_	SpaceAfter=No|start_char=6379|end_char=6385
84	,	,	PUNCT	,	_	83	_	_	start_char=6385|end_char=6386
85	which	which	PRON	WDT	PronType=Rel	84	_	_	start_char=6387|end_char=6392
86	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	85	_	_	start_char=6393|end_char=6396
87	used	use	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	86	_	_	start_char=6397|end_char=6401
88	to	to	PART	TO	_	87	_	_	start_char=6402|end_char=6404
89	define	define	VERB	VB	VerbForm=Inf	88	_	_	start_char=6405|end_char=6411
90	characteristic	characteristic	ADJ	JJ	Degree=Pos	89	_	_	start_char=6412|end_char=6426
91	samples	sample	NOUN	NNS	Number=Plur	90	_	_	SpaceAfter=No|start_char=6427|end_char=6434
92	,	,	PUNCT	,	_	91	_	_	start_char=6434|end_char=6435
93	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	92	_	_	start_char=6436|end_char=6439
94	also	also	ADV	RB	_	93	_	_	start_char=6440|end_char=6444
95	used	use	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	94	_	_	start_char=6445|end_char=6449
96	in	in	ADP	IN	_	95	_	_	start_char=6450|end_char=6452
97	[	[	PUNCT	-LRB-	_	96	_	_	SpaceAfter=No|start_char=6453|end_char=6454
98	12	12	NUM	CD	NumForm=Digit|NumType=Card	97	_	_	SpaceAfter=No|start_char=6454|end_char=6456
99	,	,	PUNCT	,	_	98	_	_	start_char=6456|end_char=6457
100	16	16	NUM	CD	NumForm=Digit|NumType=Card	99	_	_	SpaceAfter=No|start_char=6458|end_char=6460
101	]	]	PUNCT	-RRB-	_	100	_	_	start_char=6460|end_char=6461
102	.	.	PUNCT	.	_	101	_	_	start_char=6462|end_char=6463
103	the	the	DET	DT	Definite=Def|PronType=Art	102	_	_	start_char=6464|end_char=6467
104	connection	connection	NOUN	NN	Number=Sing	103	_	_	start_char=6468|end_char=6478
105	between	between	ADP	IN	_	104	_	_	start_char=6479|end_char=6486
106	conformance	conformance	NOUN	NN	Number=Sing	105	_	_	start_char=6487|end_char=6498
107	testing	testing	NOUN	NN	Number=Sing	106	_	_	start_char=6499|end_char=6506
108	and	and	CCONJ	CC	_	107	_	_	start_char=6507|end_char=6510
109	regular	regular	ADJ	JJ	Degree=Pos	108	_	_	start_char=6511|end_char=6518
110	inference	inference	NOUN	NN	Number=Sing	109	_	_	start_char=6519|end_char=6528
111	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	110	_	_	start_char=6529|end_char=6531
112	made	make	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	111	_	_	start_char=6532|end_char=6536
113	explicit	explicit	ADJ	JJ	Degree=Pos	112	_	_	start_char=6537|end_char=6545
114	in	in	ADP	IN	_	113	_	_	start_char=6546|end_char=6548
115	[	[	PUNCT	-LRB-	_	114	_	_	SpaceAfter=No|start_char=6549|end_char=6550
116	8	8	NUM	CD	NumForm=Digit|NumType=Card	115	_	_	SpaceAfter=No|start_char=6550|end_char=6551
117	]	]	PUNCT	-RRB-	_	116	_	_	start_char=6551|end_char=6552
118	and	and	CCONJ	CC	_	117	_	_	start_char=6553|end_char=6556
119	[	[	PUNCT	-LRB-	_	118	_	_	SpaceAfter=No|start_char=6557|end_char=6558
120	32	32	NUM	CD	NumForm=Digit|NumType=Card	119	_	_	SpaceAfter=No|start_char=6558|end_char=6560
121	]	]	PUNCT	-RRB-	_	120	_	_	start_char=6560|end_char=6561
122	describes	describe	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	121	_	_	start_char=6562|end_char=6571
123	how	how	ADV	WRB	PronType=Int	122	_	_	start_char=6572|end_char=6575
124	an	a	DET	DT	Definite=Ind|PronType=Art	123	_	_	start_char=6576|end_char=6578
125	active	active	ADJ	JJ	Degree=Pos	124	_	_	start_char=6579|end_char=6585
126	learning	learning	NOUN	NN	Number=Sing	125	_	_	start_char=6586|end_char=6594
127	algorithm	algorithm	NOUN	NN	Number=Sing	126	_	_	start_char=6595|end_char=6604
128	can	can	AUX	MD	VerbForm=Fin	127	_	_	start_char=6605|end_char=6608
129	be	be	AUX	VB	VerbForm=Inf	128	_	_	start_char=6609|end_char=6611
130	used	use	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	129	_	_	start_char=6612|end_char=6616
131	for	for	ADP	IN	_	130	_	_	start_char=6617|end_char=6620
132	fault	fault	NOUN	NN	Number=Sing	131	_	_	start_char=6621|end_char=6626
133	detection	detection	NOUN	NN	Number=Sing	132	_	_	SpaceAfter=No|start_char=6627|end_char=6636
134	.	.	PUNCT	.	_	133	_	_	start_char=6636|end_char=6637

# text = reviewers of an earlier version of this paper pointed out the similarity of moore and mealy machines: a moore machine is a special case of a mealy machine where the output depends only on the state but not on the input; and a mealy machine can be transformed into a moore machine by delaying the output by one step.
# sent_id = 29
1	reviewers	reviewer	NOUN	NNS	Number=Plur	0	_	_	start_char=6638|end_char=6647
2	of	of	ADP	IN	_	1	_	_	start_char=6648|end_char=6650
3	an	a	DET	DT	Definite=Ind|PronType=Art	2	_	_	start_char=6651|end_char=6653
4	earlier	early	ADJ	JJR	Degree=Cmp	3	_	_	start_char=6654|end_char=6661
5	version	version	NOUN	NN	Number=Sing	4	_	_	start_char=6662|end_char=6669
6	of	of	ADP	IN	_	5	_	_	start_char=6670|end_char=6672
7	this	this	DET	DT	Number=Sing|PronType=Dem	6	_	_	start_char=6673|end_char=6677
8	paper	paper	NOUN	NN	Number=Sing	7	_	_	start_char=6678|end_char=6683
9	pointed	point	VERB	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	8	_	_	start_char=6684|end_char=6691
10	out	out	ADP	RP	_	9	_	_	start_char=6692|end_char=6695
11	the	the	DET	DT	Definite=Def|PronType=Art	10	_	_	start_char=6696|end_char=6699
12	similarity	similarity	NOUN	NN	Number=Sing	11	_	_	start_char=6700|end_char=6710
13	of	of	ADP	IN	_	12	_	_	start_char=6711|end_char=6713
14	moore	moore	NOUN	NN	Number=Sing	13	_	_	start_char=6714|end_char=6719
15	and	and	CCONJ	CC	_	14	_	_	start_char=6720|end_char=6723
16	mealy	mealy	ADJ	JJ	Degree=Pos	15	_	_	start_char=6724|end_char=6729
17	machines	machine	NOUN	NNS	Number=Plur	16	_	_	SpaceAfter=No|start_char=6730|end_char=6738
18	:	:	PUNCT	:	_	17	_	_	start_char=6738|end_char=6739
19	a	a	DET	DT	Definite=Ind|PronType=Art	18	_	_	start_char=6740|end_char=6741
20	moore	moore	NOUN	NN	Number=Sing	19	_	_	start_char=6742|end_char=6747
21	machine	machine	NOUN	NN	Number=Sing	20	_	_	start_char=6748|end_char=6755
22	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	21	_	_	start_char=6756|end_char=6758
23	a	a	DET	DT	Definite=Ind|PronType=Art	22	_	_	start_char=6759|end_char=6760
24	special	special	ADJ	JJ	Degree=Pos	23	_	_	start_char=6761|end_char=6768
25	case	case	NOUN	NN	Number=Sing	24	_	_	start_char=6769|end_char=6773
26	of	of	ADP	IN	_	25	_	_	start_char=6774|end_char=6776
27	a	a	DET	DT	Definite=Ind|PronType=Art	26	_	_	start_char=6777|end_char=6778
28	mealy	mealy	ADJ	JJ	Degree=Pos	27	_	_	start_char=6779|end_char=6784
29	machine	machine	NOUN	NN	Number=Sing	28	_	_	start_char=6785|end_char=6792
30	where	where	ADV	WRB	PronType=Rel	29	_	_	start_char=6793|end_char=6798
31	the	the	DET	DT	Definite=Def|PronType=Art	30	_	_	start_char=6799|end_char=6802
32	output	output	NOUN	NN	Number=Sing	31	_	_	start_char=6803|end_char=6809
33	depends	depend	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	32	_	_	start_char=6810|end_char=6817
34	only	only	ADV	RB	_	33	_	_	start_char=6818|end_char=6822
35	on	on	ADP	IN	_	34	_	_	start_char=6823|end_char=6825
36	the	the	DET	DT	Definite=Def|PronType=Art	35	_	_	start_char=6826|end_char=6829
37	state	state	NOUN	NN	Number=Sing	36	_	_	start_char=6830|end_char=6835
38	but	but	CCONJ	CC	_	37	_	_	start_char=6836|end_char=6839
39	not	not	PART	RB	Polarity=Neg	38	_	_	start_char=6840|end_char=6843
40	on	on	ADP	IN	_	39	_	_	start_char=6844|end_char=6846
41	the	the	DET	DT	Definite=Def|PronType=Art	40	_	_	start_char=6847|end_char=6850
42	input	input	NOUN	NN	Number=Sing	41	_	_	SpaceAfter=No|start_char=6851|end_char=6856
43	;	;	PUNCT	,	_	42	_	_	start_char=6856|end_char=6857
44	and	and	CCONJ	CC	_	43	_	_	start_char=6858|end_char=6861
45	a	a	DET	DT	Definite=Ind|PronType=Art	44	_	_	start_char=6862|end_char=6863
46	mealy	mealy	ADJ	JJ	Degree=Pos	45	_	_	start_char=6864|end_char=6869
47	machine	machine	NOUN	NN	Number=Sing	46	_	_	start_char=6870|end_char=6877
48	can	can	AUX	MD	VerbForm=Fin	47	_	_	start_char=6878|end_char=6881
49	be	be	AUX	VB	VerbForm=Inf	48	_	_	start_char=6882|end_char=6884
50	transformed	transform	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	49	_	_	start_char=6885|end_char=6896
51	into	into	ADP	IN	_	50	_	_	start_char=6897|end_char=6901
52	a	a	DET	DT	Definite=Ind|PronType=Art	51	_	_	start_char=6902|end_char=6903
53	moore	moore	NOUN	NN	Number=Sing	52	_	_	start_char=6904|end_char=6909
54	machine	machine	NOUN	NN	Number=Sing	53	_	_	start_char=6910|end_char=6917
55	by	by	SCONJ	IN	_	54	_	_	start_char=6918|end_char=6920
56	delaying	delay	VERB	VBG	Tense=Pres|VerbForm=Part	55	_	_	start_char=6921|end_char=6929
57	the	the	DET	DT	Definite=Def|PronType=Art	56	_	_	start_char=6930|end_char=6933
58	output	output	NOUN	NN	Number=Sing	57	_	_	start_char=6934|end_char=6940
59	by	by	ADP	IN	_	58	_	_	start_char=6941|end_char=6943
60	one	one	NUM	CD	NumForm=Word|NumType=Card	59	_	_	start_char=6944|end_char=6947
61	step	step	NOUN	NN	Number=Sing	60	_	_	SpaceAfter=No|start_char=6948|end_char=6952
62	.	.	PUNCT	.	_	61	_	_	start_char=6952|end_char=6953

# text = this similarity naturally raises the question to what extent methods to learn mealy machines can be used to learn moore machines (and vice versa).
# sent_id = 30
1	this	this	DET	DT	Number=Sing|PronType=Dem	0	_	_	start_char=6954|end_char=6958
2	similarity	similarity	NOUN	NN	Number=Sing	1	_	_	start_char=6959|end_char=6969
3	naturally	naturally	ADV	RB	_	2	_	_	start_char=6970|end_char=6979
4	raises	raise	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	_	_	start_char=6980|end_char=6986
5	the	the	DET	DT	Definite=Def|PronType=Art	4	_	_	start_char=6987|end_char=6990
6	question	question	NOUN	NN	Number=Sing	5	_	_	start_char=6991|end_char=6999
7	to	to	ADP	IN	_	6	_	_	start_char=7000|end_char=7002
8	what	what	DET	WDT	PronType=Int	7	_	_	start_char=7003|end_char=7007
9	extent	extent	NOUN	NN	Number=Sing	8	_	_	start_char=7008|end_char=7014
10	methods	method	NOUN	NNS	Number=Plur	9	_	_	start_char=7015|end_char=7022
11	to	to	PART	TO	_	10	_	_	start_char=7023|end_char=7025
12	learn	learn	VERB	VB	VerbForm=Inf	11	_	_	start_char=7026|end_char=7031
13	mealy	mealy	ADJ	JJ	Degree=Pos	12	_	_	start_char=7032|end_char=7037
14	machines	machine	NOUN	NNS	Number=Plur	13	_	_	start_char=7038|end_char=7046
15	can	can	AUX	MD	VerbForm=Fin	14	_	_	start_char=7047|end_char=7050
16	be	be	AUX	VB	VerbForm=Inf	15	_	_	start_char=7051|end_char=7053
17	used	use	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	16	_	_	start_char=7054|end_char=7058
18	to	to	PART	TO	_	17	_	_	start_char=7059|end_char=7061
19	learn	learn	VERB	VB	VerbForm=Inf	18	_	_	start_char=7062|end_char=7067
20	moore	moore	NOUN	NN	Number=Sing	19	_	_	start_char=7068|end_char=7073
21	machines	machine	NOUN	NNS	Number=Plur	20	_	_	start_char=7074|end_char=7082
22	(	(	PUNCT	-LRB-	_	21	_	_	SpaceAfter=No|start_char=7083|end_char=7084
23	and	and	CCONJ	CC	_	22	_	_	start_char=7084|end_char=7087
24	vice	vice	ADV	RB	_	23	_	_	start_char=7088|end_char=7092
25	versa	versa	ADV	RB	_	24	_	_	SpaceAfter=No|start_char=7093|end_char=7098
26	)	)	PUNCT	-RRB-	_	25	_	_	SpaceAfter=No|start_char=7098|end_char=7099
27	.	.	PUNCT	.	_	26	_	_	start_char=7099|end_char=7100

# text = answering this question is beyond the scope of the current paper.
# sent_id = 31
1	answering	answer	VERB	VBG	VerbForm=Ger	0	_	_	start_char=7101|end_char=7110
2	this	this	DET	DT	Number=Sing|PronType=Dem	1	_	_	start_char=7111|end_char=7115
3	question	question	NOUN	NN	Number=Sing	2	_	_	start_char=7116|end_char=7124
4	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	_	_	start_char=7125|end_char=7127
5	beyond	beyond	ADP	IN	_	4	_	_	start_char=7128|end_char=7134
6	the	the	DET	DT	Definite=Def|PronType=Art	5	_	_	start_char=7135|end_char=7138
7	scope	scope	NOUN	NN	Number=Sing	6	_	_	start_char=7139|end_char=7144
8	of	of	ADP	IN	_	7	_	_	start_char=7145|end_char=7147
9	the	the	DET	DT	Definite=Def|PronType=Art	8	_	_	start_char=7148|end_char=7151
10	current	current	ADJ	JJ	Degree=Pos	9	_	_	start_char=7152|end_char=7159
11	paper	paper	NOUN	NN	Number=Sing	10	_	_	SpaceAfter=No|start_char=7160|end_char=7165
12	.	.	PUNCT	.	_	11	_	_	start_char=7165|end_char=7166

# text = however, note that an algorithm that learns a mealy machine cannot be used as a black box to learn moore machines, for two reasons: first, the input-output traces for a moore machine are not directly compatible with mealy machines, and therefore need to be transformed somehow; second, the learned mealy machine must also be transformed into a moore machine.
# sent_id = 32
1	however	however	ADV	RB	_	0	_	_	SpaceAfter=No|start_char=7167|end_char=7174
2	,	,	PUNCT	,	_	1	_	_	start_char=7174|end_char=7175
3	note	note	VERB	VB	Mood=Imp|VerbForm=Fin	2	_	_	start_char=7176|end_char=7180
4	that	that	SCONJ	IN	_	3	_	_	start_char=7181|end_char=7185
5	an	a	DET	DT	Definite=Ind|PronType=Art	4	_	_	start_char=7186|end_char=7188
6	algorithm	algorithm	NOUN	NN	Number=Sing	5	_	_	start_char=7189|end_char=7198
7	that	that	PRON	WDT	PronType=Rel	6	_	_	start_char=7199|end_char=7203
8	learns	learn	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	_	_	start_char=7204|end_char=7210
9	a	a	DET	DT	Definite=Ind|PronType=Art	8	_	_	start_char=7211|end_char=7212
10	mealy	mealy	ADJ	JJ	Degree=Pos	9	_	_	start_char=7213|end_char=7218
11	machine	machine	NOUN	NN	Number=Sing	10	_	_	start_char=7219|end_char=7226
12-13	cannot	_	_	_	_	_	_	_	start_char=7227|end_char=7233
12	can	can	AUX	MD	VerbForm=Fin	11	_	_	start_char=7227|end_char=7230
13	not	not	PART	RB	Polarity=Neg	12	_	_	start_char=7230|end_char=7233
14	be	be	AUX	VB	VerbForm=Inf	13	_	_	start_char=7234|end_char=7236
15	used	use	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	14	_	_	start_char=7237|end_char=7241
16	as	as	ADP	IN	_	15	_	_	start_char=7242|end_char=7244
17	a	a	DET	DT	Definite=Ind|PronType=Art	16	_	_	start_char=7245|end_char=7246
18	black	black	ADJ	JJ	Degree=Pos	17	_	_	start_char=7247|end_char=7252
19	box	box	NOUN	NN	Number=Sing	18	_	_	start_char=7253|end_char=7256
20	to	to	PART	TO	_	19	_	_	start_char=7257|end_char=7259
21	learn	learn	VERB	VB	VerbForm=Inf	20	_	_	start_char=7260|end_char=7265
22	moore	moore	NOUN	NN	Number=Sing	21	_	_	start_char=7266|end_char=7271
23	machines	machine	NOUN	NNS	Number=Plur	22	_	_	SpaceAfter=No|start_char=7272|end_char=7280
24	,	,	PUNCT	,	_	23	_	_	start_char=7280|end_char=7281
25	for	for	ADP	IN	_	24	_	_	start_char=7282|end_char=7285
26	two	two	NUM	CD	NumForm=Word|NumType=Card	25	_	_	start_char=7286|end_char=7289
27	reasons	reason	NOUN	NNS	Number=Plur	26	_	_	SpaceAfter=No|start_char=7290|end_char=7297
28	:	:	PUNCT	:	_	27	_	_	start_char=7297|end_char=7298
29	first	first	ADV	RB	Degree=Pos|NumForm=Word|NumType=Ord	28	_	_	SpaceAfter=No|start_char=7299|end_char=7304
30	,	,	PUNCT	,	_	29	_	_	start_char=7304|end_char=7305
31	the	the	DET	DT	Definite=Def|PronType=Art	30	_	_	start_char=7306|end_char=7309
32	input	input	NOUN	NN	Number=Sing	31	_	_	SpaceAfter=No|start_char=7310|end_char=7315
33	-	-	PUNCT	HYPH	_	32	_	_	SpaceAfter=No|start_char=7315|end_char=7316
34	output	output	NOUN	NN	Number=Sing	33	_	_	start_char=7316|end_char=7322
35	traces	trace	NOUN	NNS	Number=Plur	34	_	_	start_char=7323|end_char=7329
36	for	for	ADP	IN	_	35	_	_	start_char=7330|end_char=7333
37	a	a	DET	DT	Definite=Ind|PronType=Art	36	_	_	start_char=7334|end_char=7335
38	moore	moore	NOUN	NN	Number=Sing	37	_	_	start_char=7336|end_char=7341
39	machine	machine	NOUN	NN	Number=Sing	38	_	_	start_char=7342|end_char=7349
40	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	39	_	_	start_char=7350|end_char=7353
41	not	not	PART	RB	Polarity=Neg	40	_	_	start_char=7354|end_char=7357
42	directly	directly	ADV	RB	_	41	_	_	start_char=7358|end_char=7366
43	compatible	compatible	ADJ	JJ	Degree=Pos	42	_	_	start_char=7367|end_char=7377
44	with	with	ADP	IN	_	43	_	_	start_char=7378|end_char=7382
45	mealy	mealy	ADJ	JJ	Degree=Pos	44	_	_	start_char=7383|end_char=7388
46	machines	machine	NOUN	NNS	Number=Plur	45	_	_	SpaceAfter=No|start_char=7389|end_char=7397
47	,	,	PUNCT	,	_	46	_	_	start_char=7397|end_char=7398
48	and	and	CCONJ	CC	_	47	_	_	start_char=7399|end_char=7402
49	therefore	therefore	ADV	RB	_	48	_	_	start_char=7403|end_char=7412
50	need	need	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	49	_	_	start_char=7413|end_char=7417
51	to	to	PART	TO	_	50	_	_	start_char=7418|end_char=7420
52	be	be	AUX	VB	VerbForm=Inf	51	_	_	start_char=7421|end_char=7423
53	transformed	transform	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	52	_	_	start_char=7424|end_char=7435
54	somehow	somehow	ADV	RB	_	53	_	_	SpaceAfter=No|start_char=7436|end_char=7443
55	;	;	PUNCT	:	_	54	_	_	start_char=7443|end_char=7444
56	second	second	ADV	RB	Degree=Pos|NumForm=Word|NumType=Ord	55	_	_	SpaceAfter=No|start_char=7445|end_char=7451
57	,	,	PUNCT	,	_	56	_	_	start_char=7451|end_char=7452
58	the	the	DET	DT	Definite=Def|PronType=Art	57	_	_	start_char=7453|end_char=7456
59	learned	learn	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	58	_	_	start_char=7457|end_char=7464
60	mealy	mealy	NOUN	NN	Number=Sing	59	_	_	start_char=7465|end_char=7470
61	machine	machine	NOUN	NN	Number=Sing	60	_	_	start_char=7471|end_char=7478
62	must	must	AUX	MD	VerbForm=Fin	61	_	_	start_char=7479|end_char=7483
63	also	also	ADV	RB	_	62	_	_	start_char=7484|end_char=7488
64	be	be	AUX	VB	VerbForm=Inf	63	_	_	start_char=7489|end_char=7491
65	transformed	transform	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	64	_	_	start_char=7492|end_char=7503
66	into	into	ADP	IN	_	65	_	_	start_char=7504|end_char=7508
67	a	a	DET	DT	Definite=Ind|PronType=Art	66	_	_	start_char=7509|end_char=7510
68	moore	moore	NOUN	NN	Number=Sing	67	_	_	start_char=7511|end_char=7516
69	machine	machine	NOUN	NN	Number=Sing	68	_	_	SpaceAfter=No|start_char=7517|end_char=7524
70	.	.	PUNCT	.	_	69	_	_	start_char=7524|end_char=7525

# text = the exact form of such transformations and their correctness remain to be demonstrated.
# sent_id = 33
1	the	the	DET	DT	Definite=Def|PronType=Art	0	_	_	start_char=7526|end_char=7529
2	exact	exact	ADJ	JJ	Degree=Pos	1	_	_	start_char=7530|end_char=7535
3	form	form	NOUN	NN	Number=Sing	2	_	_	start_char=7536|end_char=7540
4	of	of	ADP	IN	_	3	_	_	start_char=7541|end_char=7543
5	such	such	ADJ	JJ	Degree=Pos	4	_	_	start_char=7544|end_char=7548
6	transformations	transformation	NOUN	NNS	Number=Plur	5	_	_	start_char=7549|end_char=7564
7	and	and	CCONJ	CC	_	6	_	_	start_char=7565|end_char=7568
8	their	their	PRON	PRP$	Case=Gen|Number=Plur|Person=3|Poss=Yes|PronType=Prs	7	_	_	start_char=7569|end_char=7574
9	correctness	correctness	NOUN	NN	Number=Sing	8	_	_	start_char=7575|end_char=7586
10	remain	remain	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	9	_	_	start_char=7587|end_char=7593
11	to	to	PART	TO	_	10	_	_	start_char=7594|end_char=7596
12	be	be	AUX	VB	VerbForm=Inf	11	_	_	start_char=7597|end_char=7599
13	demonstrated	demonstrate	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	12	_	_	SpaceAfter=No|start_char=7600|end_char=7612
14	.	.	PUNCT	.	_	13	_	_	start_char=7612|end_char=7613

# text = such transformations may also incur performance penalties which make a learning method especially designed for moore machines more attractive in practice.
# sent_id = 34
1	such	such	ADJ	JJ	Degree=Pos	0	_	_	start_char=7614|end_char=7618
2	transformations	transformation	NOUN	NNS	Number=Plur	1	_	_	start_char=7619|end_char=7634
3	may	may	AUX	MD	VerbForm=Fin	2	_	_	start_char=7635|end_char=7638
4	also	also	ADV	RB	_	3	_	_	start_char=7639|end_char=7643
5	incur	incur	VERB	VB	VerbForm=Inf	4	_	_	start_char=7644|end_char=7649
6	performance	performance	NOUN	NN	Number=Sing	5	_	_	start_char=7650|end_char=7661
7	penalties	penalty	NOUN	NNS	Number=Plur	6	_	_	start_char=7662|end_char=7671
8	which	which	PRON	WDT	PronType=Rel	7	_	_	start_char=7672|end_char=7677
9	make	make	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	8	_	_	start_char=7678|end_char=7682
10	a	a	DET	DT	Definite=Ind|PronType=Art	9	_	_	start_char=7683|end_char=7684
11	learning	learning	NOUN	NN	Number=Sing	10	_	_	start_char=7685|end_char=7693
12	method	method	NOUN	NN	Number=Sing	11	_	_	start_char=7694|end_char=7700
13	especially	especially	ADV	RB	_	12	_	_	start_char=7701|end_char=7711
14	designed	design	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	13	_	_	start_char=7712|end_char=7720
15	for	for	ADP	IN	_	14	_	_	start_char=7721|end_char=7724
16	moore	moore	NOUN	NN	Number=Sing	15	_	_	start_char=7725|end_char=7730
17	machines	machine	NOUN	NNS	Number=Plur	16	_	_	start_char=7731|end_char=7739
18	more	more	ADV	RBR	Degree=Cmp	17	_	_	start_char=7740|end_char=7744
19	attractive	attractive	ADJ	JJ	Degree=Pos	18	_	_	start_char=7745|end_char=7755
20	in	in	ADP	IN	_	19	_	_	start_char=7756|end_char=7758
21	practice	practice	NOUN	NN	Number=Sing	20	_	_	SpaceAfter=No|start_char=7759|end_char=7767
22	.	.	PUNCT	.	_	21	_	_	SpaceAfter=No|start_char=7767|end_char=7768

