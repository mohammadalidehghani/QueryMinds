{
  "title": "Deep Learning and Its Applications to Machine Health Monitoring: A Survey",
  "abstract": "Since 2006, deep learning (DL) has become a rapidly growing research direction, redefining state-of-the-art performances in a wide range of areas such as object recognition, image segmentation, speech recognition and machine translation. In modern manufacturing systems, data-driven machine health monitoring is gaining in popularity due to the widespread deployment of low-cost sensors and their connection to the Internet. Meanwhile, deep learning provides useful tools for processing and analyzing these big machinery data. The main purpose of this paper is to review and summarize the emerging research work of deep learning on machine health monitoring. After the brief introduction of deep learning techniques, the applications of deep learning in machine health monitoring systems are reviewed mainly from the following aspects: Autoencoder (AE) and its variants, Restricted Boltzmann Machines and its variants including Deep Belief Network (DBN) and Deep Boltzmann Machines (DBM), Convolutional Neural Networks (CNN) and Recurrent Neural Networks (RNN). Finally, some new trends of DL-based machine health monitoring methods are discussed.",
  "introduction": "I. INTRODUCTION I NDUSTRIAL Internet of Things (IoT) and data-driven techniques have been revolutionizing manufacturing by enabling computer networks to gather the huge amount of data from connected machines and turn the big machinery data into actionable information [1] , [2] , [3] . As a key component in modern manufacturing system, machine health monitoring has fully embraced the big data revolution. Compared to top-down modeling provided by the traditional physics-based models [4] , [5] , [6] , data-driven machine health monitoring systems offer a new paradigm of bottom-up solution for detection of faults after the occurrence of certain failures (diagnosis) and predictions of the future working conditions and the remaining useful life (prognosis) [1] , [7] . As we know, the complexity and noisy working condition hinder the construction of physical models. And most of these physicsbased models are unable to be updated with on-line measured data, which limits their effectiveness and flexibility. On the other hand, with significant development of sensors, sensor networks and computing systems, data-driven machine health monitoring models have become more and more attractive. To extract useful knowledge and make appropriate decisions from big data, machine learning techniques have been regarded as a powerful solution. As the hottest subfield of machine R. Yan is the corresponding author. E-mail: ruqiang@seu.edu.cn This manuscript has been submitted to IEEE Transactions on Neural Networks and Learning Systems learning, deep learning is able to act as a bridge connecting big machinery data and intelligent machine health monitoring. As a branch of machine learning, deep learning attempts to model high level representations behind data and classify(predict) patterns via stacking multiple layers of information processing modules in hierarchical architectures. Recently, deep learning has been successfully adopted in various areas such as computer vision, automatic speech recognition, natural language processing, audio recognition and bioinformatics [8] , [9] , [10] , [11] . In fact, deep learning is not a new idea, which even dates back to the 1940s [12] , [13] . The popularity of deep learning today can be contributed to the following points: * Increasing Computing Power: the advent of graphics processor unit (GPU), the lowered cost of hardware, the better software infrastructure and the faster network connectivity all reduce the required running time of deep learning algorithms significantly. For example, as reported in [14] , the time required to learn a four-layer DBN with 100 million free parameters can be reduced from several weeks to around a single day. * Increasing Data Size: there is no doubt that the era of Big Data is coming. Our activities are almost all digitized, recorded by computers and sensors, connected to Internet, and stored in cloud. As pointed out in [1] that in industry-related applications such as industrial informatics and electronics, almost 1000 exabytes are generated per year and a 20-fold increase can be expected in the next ten years. The study in [3] predicts that 30 billion devices will be connected by 2020. Therefore, the huge amount of data is able to offset the complexity increase behind deep learning and improve its generalization capability. * Advanced Deep Learning Research: the first breakthrough of deep learning is the pre-training method in an unsupervised way [15] , where Hinton proposed to pre-train one layer at a time via restricted Boltzmann machine (RBM) and then fine-tune using backpropagation. This has been proven to be effective to train multilayer neural networks. Considering the capability of deep learning to address largescale data and learn high-level representation, deep learning can be a powerful and effective solution for machine health monitoring systems (MHMS). Conventional data-driven MHMS usually consists of the following key parts: handcrafted feature design, feature extraction/selection and model training. The right set of features are designed, and then provided to some shallow machine learning algorithms including arXiv:1612.07640v1 [cs.LG] 16 Dec 2016 Support Vector Machines (SVM), Naive Bayes (NB), logistic regression [16] , [17] , [18] . It is shown that the representation defines the upper-bound performances of machine learning algorithms [19] . However, it is difficult to know and determine what kind of good features should be designed. To alleviate this issue, feature extraction/selection methods, which can be regarded as a kind of information fusion, are performed between hand-crafted feature design and classification/regression models [20] , [21] , [22] . However, manually designing features for a complex domain requires a great deal of human labor and can not be updated on-line. At the same time, feature extraction/selection is another tricky problem, which involves prior selection of hyperparameters such as latent dimension. At last, the above three modules including feature design, feature extraction/selection and model training can not be jointly optimized which may hinder the final performance of the whole system. Deep learning based MHMS (DL-based MHMS) aim to extract hierarchical representations from input data by building deep neural networks with multiple layers of non-linear transformations. Intuitively, one layer operation can be regarded as a transformation from input values to output values. Therefore, the application of one layer can learn a new representation of the input data and then, the stacking structure of multiple layers can enable MHMS to learn complex concepts out of simpler concepts that can be constructed from raw input. In addition, DL-based MHMS achieve an end-to-end system, which can automatically learn internal representations from raw input and predict targets. Compared to conventional data driven MHMS, DL-based MHMS do not require extensive human labor and knowledge for handcrafted feature design. All model parameters including feature module and pattern classification/regression module can be trained jointly. Therefore, DL-based models can be applied to addressing machine health monitoring in a very general way. For example, it is possible that the model trained for fault diagnosis problem can be used for prognosis by only replacing the top softmax layer with a linear regression layer. The comparison between conventional data-driven MHMS and DL-based MHMS is given in Table I . A high-level illustration of the principles behind these three kinds of MHMS discussed above is shown in Figure 1 . Deep learning models have several variants such as Auto-Dncoders [23] , Deep Belief Network [24] , Deep Boltzmann Machines [25] , Convolutional Neural Networks [26] and Recurrent Neural Networks [27] . During recent years, various researchers have demonstrated success of these deep learning models in the application of machine health monitoring. This paper attempts to provide a wide overview on these latest DL-based MHMS works that impact the state-of-the art technologies. Compared to these frontiers of deep learning including Computer Vision and Natural Language Processing, machine health monitoring community is catching up and has witnessed an emerging research. Therefore, the purpose of this survey article is to present researchers and engineers in the area of machine health monitoring system, a global view of this hot and active topic, and help them to acquire basic knowledge, quickly apply deep learning models and develop novel DL-based MHMS. The remainder of this paper is organized as follows. The basic information on these above deep learning models are given in section II. Then, section III reviews applications of deep learning models on machine health monitoring. Finally, section IV gives a brief summary of the recent achievements of DL-based MHMS and discusses some potential trends of deep learning in machine health monitoring. II. DEEP LEARNING Originated from artificial neural network, deep learning is a branch of machine learning which is featured by multiple nonlinear processing layers. Deep learning aims to learn hierarchy representations of data. Up to date, there are various deep learning architectures and this research topic is fast-growing, in which new models are being developed even per week. And the community is quite open and there are a number of deep learning tutorials and books of good-quality [28] , [29] . Therefore, only a brief introduction to some major deep learning techniques that have been applied in machine health monitoring is given. In the following, four deep architectures including Auto-encoders, RBM, CNN and RNN and their corresponding variants are reviewed, respectively.",
  "body": "I. INTRODUCTION I NDUSTRIAL Internet of Things (IoT) and data-driven techniques have been revolutionizing manufacturing by enabling computer networks to gather the huge amount of data from connected machines and turn the big machinery data into actionable information [1] , [2] , [3] . As a key component in modern manufacturing system, machine health monitoring has fully embraced the big data revolution. Compared to top-down modeling provided by the traditional physics-based models [4] , [5] , [6] , data-driven machine health monitoring systems offer a new paradigm of bottom-up solution for detection of faults after the occurrence of certain failures (diagnosis) and predictions of the future working conditions and the remaining useful life (prognosis) [1] , [7] . As we know, the complexity and noisy working condition hinder the construction of physical models. And most of these physicsbased models are unable to be updated with on-line measured data, which limits their effectiveness and flexibility. On the other hand, with significant development of sensors, sensor networks and computing systems, data-driven machine health monitoring models have become more and more attractive. To extract useful knowledge and make appropriate decisions from big data, machine learning techniques have been regarded as a powerful solution. As the hottest subfield of machine R. Yan is the corresponding author. E-mail: ruqiang@seu.edu.cn This manuscript has been submitted to IEEE Transactions on Neural Networks and Learning Systems learning, deep learning is able to act as a bridge connecting big machinery data and intelligent machine health monitoring. As a branch of machine learning, deep learning attempts to model high level representations behind data and classify(predict) patterns via stacking multiple layers of information processing modules in hierarchical architectures. Recently, deep learning has been successfully adopted in various areas such as computer vision, automatic speech recognition, natural language processing, audio recognition and bioinformatics [8] , [9] , [10] , [11] . In fact, deep learning is not a new idea, which even dates back to the 1940s [12] , [13] . The popularity of deep learning today can be contributed to the following points: * Increasing Computing Power: the advent of graphics processor unit (GPU), the lowered cost of hardware, the better software infrastructure and the faster network connectivity all reduce the required running time of deep learning algorithms significantly. For example, as reported in [14] , the time required to learn a four-layer DBN with 100 million free parameters can be reduced from several weeks to around a single day. * Increasing Data Size: there is no doubt that the era of Big Data is coming. Our activities are almost all digitized, recorded by computers and sensors, connected to Internet, and stored in cloud. As pointed out in [1] that in industry-related applications such as industrial informatics and electronics, almost 1000 exabytes are generated per year and a 20-fold increase can be expected in the next ten years. The study in [3] predicts that 30 billion devices will be connected by 2020. Therefore, the huge amount of data is able to offset the complexity increase behind deep learning and improve its generalization capability. * Advanced Deep Learning Research: the first breakthrough of deep learning is the pre-training method in an unsupervised way [15] , where Hinton proposed to pre-train one layer at a time via restricted Boltzmann machine (RBM) and then fine-tune using backpropagation. This has been proven to be effective to train multilayer neural networks. Considering the capability of deep learning to address largescale data and learn high-level representation, deep learning can be a powerful and effective solution for machine health monitoring systems (MHMS). Conventional data-driven MHMS usually consists of the following key parts: handcrafted feature design, feature extraction/selection and model training. The right set of features are designed, and then provided to some shallow machine learning algorithms including arXiv:1612.07640v1 [cs.LG] 16 Dec 2016 Support Vector Machines (SVM), Naive Bayes (NB), logistic regression [16] , [17] , [18] . It is shown that the representation defines the upper-bound performances of machine learning algorithms [19] . However, it is difficult to know and determine what kind of good features should be designed. To alleviate this issue, feature extraction/selection methods, which can be regarded as a kind of information fusion, are performed between hand-crafted feature design and classification/regression models [20] , [21] , [22] . However, manually designing features for a complex domain requires a great deal of human labor and can not be updated on-line. At the same time, feature extraction/selection is another tricky problem, which involves prior selection of hyperparameters such as latent dimension. At last, the above three modules including feature design, feature extraction/selection and model training can not be jointly optimized which may hinder the final performance of the whole system. Deep learning based MHMS (DL-based MHMS) aim to extract hierarchical representations from input data by building deep neural networks with multiple layers of non-linear transformations. Intuitively, one layer operation can be regarded as a transformation from input values to output values. Therefore, the application of one layer can learn a new representation of the input data and then, the stacking structure of multiple layers can enable MHMS to learn complex concepts out of simpler concepts that can be constructed from raw input. In addition, DL-based MHMS achieve an end-to-end system, which can automatically learn internal representations from raw input and predict targets. Compared to conventional data driven MHMS, DL-based MHMS do not require extensive human labor and knowledge for handcrafted feature design. All model parameters including feature module and pattern classification/regression module can be trained jointly. Therefore, DL-based models can be applied to addressing machine health monitoring in a very general way. For example, it is possible that the model trained for fault diagnosis problem can be used for prognosis by only replacing the top softmax layer with a linear regression layer. The comparison between conventional data-driven MHMS and DL-based MHMS is given in Table I . A high-level illustration of the principles behind these three kinds of MHMS discussed above is shown in Figure 1 . Deep learning models have several variants such as Auto-Dncoders [23] , Deep Belief Network [24] , Deep Boltzmann Machines [25] , Convolutional Neural Networks [26] and Recurrent Neural Networks [27] . During recent years, various researchers have demonstrated success of these deep learning models in the application of machine health monitoring. This paper attempts to provide a wide overview on these latest DL-based MHMS works that impact the state-of-the art technologies. Compared to these frontiers of deep learning including Computer Vision and Natural Language Processing, machine health monitoring community is catching up and has witnessed an emerging research. Therefore, the purpose of this survey article is to present researchers and engineers in the area of machine health monitoring system, a global view of this hot and active topic, and help them to acquire basic knowledge, quickly apply deep learning models and develop novel DL-based MHMS. The remainder of this paper is organized as follows. The basic information on these above deep learning models are given in section II. Then, section III reviews applications of deep learning models on machine health monitoring. Finally, section IV gives a brief summary of the recent achievements of DL-based MHMS and discusses some potential trends of deep learning in machine health monitoring. II. DEEP LEARNING Originated from artificial neural network, deep learning is a branch of machine learning which is featured by multiple nonlinear processing layers. Deep learning aims to learn hierarchy representations of data. Up to date, there are various deep learning architectures and this research topic is fast-growing, in which new models are being developed even per week. And the community is quite open and there are a number of deep learning tutorials and books of good-quality [28] , [29] . Therefore, only a brief introduction to some major deep learning techniques that have been applied in machine health monitoring is given. In the following, four deep architectures including Auto-encoders, RBM, CNN and RNN and their corresponding variants are reviewed, respectively. A. Auto-encoders (AE) and its variants As a feed-forward neural network, auto-encoder consists of two phases including encoder and decoder. Encoder takes an input x and transforms it to a hidden representation h via a non-linear mapping as follows: h = ϕ(Wx + b) (1) where ϕ is a non-linear activation function. Then, decoder maps the hidden representation back to the original representation in a similar way as follows: z = ϕ(W h + b ) (2) Model parameters including θ = [W, b, W , b ] are optimized to minimize the reconstruction error between z = f θ (x) and x. One commonly adopted measure for the average reconstruction error over a collection of N data samples is squared error and the corresponding optimization problem can be written as follows: min θ 1 N N i (x i -f θ (x i )) 2 (3) where x i is the i-th sample. It is clearly shown that AE can be trained in an unsupervised way. And the hidden representation h can be regarded as a more abstract and meaningful representation for data sample x. Usually, the hidden size should be set to be larger than the input size in AE, which is verified empirically [30] . Addition of Sparsity: To prevent the learned transformation is the identity one and regularize auto-encoders, the sparsity constraint is imposed on the hidden units [31] . The corrsponding optimization function is updated as: min θ 1 N N i (x i -f θ (x i )) 2 + m j KL(p||p j ) (4) Monitored Machines Hand-designed Features Data Acquisition Model Training TABLE I SUMMARY ON COMPARISON BETWEEN CONVENTIONAL DATA-DRIVEN MHMS AND DL-BASED MHMS. MHMS Conventional Data-driven Methods Deep Learning Methods Expert knowledge and extensive human labor required for Hand-crafted features End-to-end structure without hand-crafted features Individual modules are trained step-by-step All parameters are trained jointly Unable to model large-scale data Suitable for large-scale data where m is the hidden layer size and the second term is the summation of the KL-divergence over the hidden units. The KL-divergence on j-th hidden neuron is given as: KL(p||p j ) = plog( p p j ) + (1 -p)log( 1 -p 1 -p j ) ( 5 ) where p is the predefined mean activation target and p j is the average activation of the j-th hidden neuron over the whole datasets. Given a small p, the addition of sparsity constraint can lead the learned hidden representation to be a sparse representation. Therefore, the variant of AE is named sparse auto-encoder. Addition of Denoising: Different from conventional AE, denoising AE takes a corrupted version of data as input and is trained to reconstruct/denoise the clean input x from its corrupted sample x. The most common adopted noise is dropout noise/binary masking noise, which randomly sets a fraction of the input features to be zero [23] . The variant of AE is denoising auto-encoder (DA), which can learn more robust representation and prevent it from learning the identity transformation. Stacking Structure: Several DA can be stacked together to form a deep network and learn high-level representations by feeding the outputs of the l-th layer as inputs to the (l + 1)-th layer [23] . And the training is done one layer greedily at a time. Since auto-encoder can be trained in an unsupervised way, auto-encoder, especially stacked denoising auto-encoder (SDA), can provide an effective pre-training solution via initializing the weights of deep neural network (DNN) to train the model. After layer-wise pre-training of SDA, the parameters of auto-encoders can be set to the initialization for all the hidden layers of DNN. And then, the supervised finetuning is performed to minimize prediction error on a labeled training data. Usually, a softmax/regression layer is added on top of the network to map the output of the last layer in AE to targets. The whole process is shown in Figure 2 . The pretraining protocol based on SDA can make DNN models have better convergence capability compared to arbitrary random initialization. B. RBM and its variants As a special type of Markov random field, restricted Boltzmann machine (RBM) is a two-layer neural network forming a bipartite graph that consists of two groups of units including visible units v and hidden units h under the constrain that there exists a symmetric connection between visible units and hidden units and there are no connections between nodes with a group. Given the model parameters θ = [W, b, a], the energy function can be given as: E(v, h; θ) = - I i=1 J j=1 w ij v i h j - I i=1 b i v i - J j=1 a j h j (6) that w ij is the connecting weight between visible unit v i , whose total number is I and hidden unit h j whose total number is J, b i and a j denote the bias terms for visible units and hidden units, respectively. The joint distribution over all the units is calculated based on the energy function E(v, h; θ) as: p(v, h; θ) = exp(-E(v, h; θ)) Z (7) where Z = h;v exp(-E(v, h; θ)) is the partition function or normalization factor. Then, the conditional probabilities of hidden and visible units h and v can be calculated as: p(h j = 1|v; θ) = δ( I i=1 w ij v i + a j ) (8) p(v i = 1|v; θ) = δ( J j=1 w ij h j + b i ) ( 9 ) where δ is defined as a logistic function i.e., δ(x) = layer. And following the RMB's connectivity constraint, there is only full connectivity between subsequent layers and no connections within layers or between non-neighbouring layers are allowed. The main difference between DBN and DBM lies that DBM is fully undirected graphical model, while DBN is mixed directed/undirected one. Different from DBN that can be trained layer-wisely, DBM is trained as a joint model. Therefore, the training of DBM is more computationally expensive than that of DBN. C. Convolutioanl Neural Network Convolutional neural networks (CNNs) were firstly proposed by LeCun [32] for image processing, which is featured by two key properties: spatially shared weights and spatial pooling. CNN models have shown their success in various computer vision applications [32] , [33] , [34] where input data are usually 2D data. CNN has also been introduced to address sequential data including Natural Language Processing and Speech Recognition [35] , [36] . CNN aims to learn abstract features by alternating and stacking convolutional kernels and pooling operation. In CNN, the convolutional layers (convolutional kernels) convolve multiple local filters with raw input data and generate invariant local features and the subsequent pooling layers extract most significant features with a fixed-length over sliding windows of the raw input data. Considering 2D-CNN have been illustrated extensively in previous research compared to 1D-CNN, here, only the mathematical details behind 1D-CNN is given as follows: Firstly, we assume that the input sequential data is x = [x 1 , . . . , x T ] that T is the length of the sequence and x i ∈ R d at each time step. Convolution: the dot product between a filter vector u ∈ R md and an concatenation vector representation x i:i+m-1 defines the convolution operation as follows: c i = ϕ(u T x i:i+m-1 + b) (10) where * T represents the transpose of a matrix * , b and ϕ denotes bias term and non-linear activation function, respectively. x i:i+m-1 is a m-length window starting from the i-th time step, which is described as: x i:i+m-1 = x i ⊕ x i+1 ⊕ • • • ⊕ x i+m-1 (11) As defined in Eq. ( 10 ), the output scale c i can be regarded as the activation of the filter u on the corresponding subsequence x i:i+m-1 . By sliding the filtering window from the beginning time step to the ending time step, a feature map as a vector can be given as follows: c j = [c 1 , c 2 , . . . , c l-m+1 ] (12) where the index j represents the j-th filter. It corresponds to multi-windows as {x 1:m , x 2:m+1 , . . . , x l-m+1:l }. Max-pooling: Pooling layer is able to reduce the length of the feature map, which can further minimize the number of model parameters. The hyper-parameter of pooling layer is pooling length denoted as s. MAX operation is taking a max over the s consecutive values in feature map c j . Then, the compressed feature vector can be obtained as: h = h 1 , h 2 , . . . , h l-m s +1 (13) where h j = max(c (j-1)s , c (j-1)s+1 , . . . , c js-1 ). Then, via alternating the above two layers: convolution and max-pooling ones, fully connected layers and a softmax layer are usually added as the top layers to make predictions. To give a clear illustration, the framework for a one-layer CNN has been displayed in Figure . 4. D. Recurrent Neural Network As stated in [12] , recurrent neural networks (RNN) are the deepest of all neural networks, which can generate and address memories of arbitrary-length sequences of input patterns. RNN is able to build connections between units from a directed cycle. Different from basic neural network: multi-layer perceptron that can only map from input data to target vectors, RNN is able to map from the entire history of previous inputs to target vectors in principal and allows a memory of previous inputs to be kept in the network's internal state. RNNs can be trained via backpropagation through time for supervised tasks with sequential input data and target outputs [37] , [27] , [38] . RNN can address the sequential data using its internal memory, as shown in Figure 5 . (a). The transition function defined in each time step t takes the current time information x t and the previous hidden output h t-1 and updates the current hidden output as follows: h t = H(x t , h t-1 ) (14) where H defines a nonlinear and differentiable transformation function. After processing the whole sequence, the hidden output at the last time step i.e. h T is the learned representation of the input sequential data whose length is T . A conventional Multilayer perceptron (MLP) is added on top to map the obtained representation h T to targets. Various transition functions can lead to various RNN models. The most simple one is vanilla RNN that is given as follows: h t = ϕ(Wx t + Hh t-1 + b) (15) where W and H denote transformation matrices and b is the bias vector. And ϕ denote the nonlinear activation function such as sigmoid and tanh functions. Due to the vanishing gradient problem during backpropagation for model training, vanilla RNN may not capture long-term dependencies. Therefore, Long-short term memory (LSTM) and gated recurrent neural networks (GRU) were presented to prevent backpropagated errors from vanishing or exploding [39] , [40] , [41] , [42] , [43] . The core idea behind these advanced RNN variants is that gates are introduced to avoid the long-term dependency problem and enable each recurrent unit to adaptively capture dependencies of different time scales. Besides these proposed advanced transition functions such as LSTMs and GRUs, multi-layer and bi-directional recurrent structure can increase the model capacity and flexibility. As shown in Figure 5 .(b), multi-layer structure can enable the hidden output of one recurrent layer to be propagated through time and used as the input data to the next recurrent layer. And the bidirectional recurrent structure is able to process the sequence data in two directions including forward and backward ways with two separate hidden layers, which is illustrated in Figure 5 .(c). The following equations define the corresponding hidden layer function and the → and ← denote forward and backward process, respectively. - → h t = - → H (x t , - → h t-1 ), ← - h t = ← - H (x t , ← - h t+1 ). (16) Then, the final vector h T is the concatenated vector of the outputs of forward and backward processes as follows: h T = - → h T ⊕ ← - h 1 ( 17 ) Convolutional Layer X 2 X 3 X 1 T X  T X T h Time Series 1 X 2 X 3 X 1 T X  T X 3 T h Time Series 2 1 h 1 1 h 1 T h 1 2 h 2 2 h 2 T h (a) Basic RNN (b) Stacked RNN (c) Bidirectional RNN 1 X 2 X 3 X 1 T X  T X T h Concatenated T h Time Series III. APPLICATIONS OF DEEP LEARNING IN MACHINE HEALTH MONITORING The conventional multilayer perceptron (MLP) has been applied in the field of machine health monitoring for many years [44] , [45] , [46] , [47] . The deep learning techniques have recently been applied to a large number of machine health monitoring systems. The layer-by-layer pretraining of deep neural network (DNN) based on Auto-encoder or RBM can facilitate the training of DNN and improve its discriminative power to characterize machinery data. Convolution neural network and recurrent neural networks provide more advanced and complex compositions mechanism to learn representation from machinery data. In these DL-based MHMS systems, the top layer normally represents the targets. For diagnosis where targets are discrete values, softmax layer is applied. For prognosis with continuous targets, liner regression layer is added. What is more, the end-to-end structure enables DLbased MHMS to be constructed with less human labor and expert knowledge, therefore these models are not limited to specific machine specific or domain. In the following, a brief survey of DL-based MHMS are presented in these above four DL architectures: AE, RBM, CNN and RNN. A. AE and its variants for machine health monitoring AE models, especially stacked DA, can learn high-level representations from machinery data in an automatic way. Sun et al. proposed a one layer AE-based neural network to classify induction motor faults [48] . Due to the limited size of training data, they focused on how to prevent overfiting. Not only the number of hidden layer was set to 1, but also dropout technique that masks portions of output neurons randomly was applied on the hidden layer. However, most of proposed models are based on deep architectures by stacking multiple auto-encoders. Lu et al. presented a detailed empirical study of stacked denoising autoencoders with three hidden layers for fault diagnosis of rotary machinery components [49] . Specifically, in their experiments including single working condition and cross working conditions, the effectiveness of the receptive input size, deep architecture, sparsity constraint and denosing operation in the SDA model were evaluated. In [50] , different structures of a two-layer SAE-based DNN were designed by varying hidden layer size and its masking probability, and evaluated for their performances in fault diagnosis. In these above works, the input features to AE models are raw sensory time-series. Therefore, the input dimensionality is always over even one thousand. The possible high dimensionality may lead to some potential concerns such as heavy computation cost and overfiting caused huge model parameters. Therefore, some researchers focused on AE models built upon features extracted from raw input. Jia et al. fed the frequency spectra of time-series data into SAE for rotating machinery diagnosis [51] , considering the frequency spectra is able to demonstrate how their constitutive components are distributed with discrete frequencies and may be more discriminative over the health conditions of rotating machinery. The corresponding framework proposed by Jia et al. is shown in Figure 6 . Tan et al. used digital wavelet frame and nonlinear soft threshold method to process the vibration signal and built a SAE on the preprocessed signal for roller bearing fault diagnosis [52] . Zhu et al. proposed a SAEbased DNN for hydraulic pump fault diagnosis with input as frequency domain features after Fourier transform [53] . In experiments, ReLU activation and dropout technique were analyzed and experimental results have shown to be effective in preventing gradient vanishing and overfiting. In the work presented in [54] , the normalized spectrogram generated by STFT of sound signal was fed into two-layers SAE-based DNN for rolling bearing fault diagnosis. Galloway et al. built a two layer SAE-based DNN on spectrograms generated from raw vibration data for tidal turbine vibration fault diagnosis [55] . A SAE-based DNN with input as principal components of data extracted by principal component analysis was proposed for spacecraft fault diagnosis in [56] . Multi-domain statistical features including time domain features, frequency domain features and time-frequency domain features were fed into the SAE framework, which can be regarded as one kind of feature fusion [57] . Similarly, Verma et al. also used these three domains features to fed into a SAE-based DNN for fault diagnosis of air compressors [58] . Except that these applied multi-domain features, multisensory data are also addressed by SAE models. Reddy utilized SAE to learn representation on raw time series data from multiple sensors for anomaly detection and fault disambiguation in flight data. To address multi-sensory data, synchronized windows were firstly traversed over multi-modal time series with overlap, and then windows from each sensor were concatenated as the input to the following SAE [59] . In [60] , SAE was leveraged for multi-sensory data fusion and the followed DBN was adopted for bearing fault diagnosis, which achieved promising results. The statistical features in time domain and frequency domain extracted from the vibration signals of different sensors were adopted as input to a twolayer SAE with sparsity constraint neural networks. And the learned representation were fed into a deep belief network for pattern classification. In addition, some variants of the conventional SAE were proposed or introduced for machine health monitoring. In [61] , Thirukovalluru et al. proposed a two-phase framework that SAE only learn representation and other standard classifiers such as SVM and random forest perform classification. Specifically, in SAE module, handcrafted features based on FFT and WPT were fed into SAE-based DNN. After pretraining and supervised fine-tuning which includes two sepa-rated procedures: softmax-based and Median-based fine-tuning methods, the extensive experiments on five datasets including air compressor monitoring, drill bit monitoring, bearing fault monitoring and steel plate monitoring have demonstrated the generalization capability of DL-based machine health monitoring systems. Wang et al. proposed a novel continuous sparse auto-encoder (CSAE) as an unsupervised feature learning for transformer fault recognition [62] . Different from conventional sparse AE, their proposed CSAE added the stochastic unit into activation function of each visible unit as: s j = ϕ j ( i w ij xi + a i + σN j (0, 1)) ( 18 ) where s j is the output corresponding to the input x i , w ij and a i denote model parameters, ϕ j represents the activation function and the last term σN j (0, 1)) is the added stochastic unit, which is a zero-mean Gaussian with variance σ 2 . The incorporation of stochastic unit is able to change the gradient direction and prevent over-fitting. Mao et al. adopted a variant of AE named Extreme Learning Machine-based auto-encoder for bearing fault diagnosis, which is more efficient than conventional SAE models without sacrificing accuracies in fault diagnosis [63] . Different from AE that is trained via back-propagation, the transformation in encoder phase is randomly generated and the one in decoder phase is learned in a single step via leastsquares fit [64] . In addition, Lu et al. focused on the visualization of learned representation by a two-layer SAE-based DNN, which provides a novel view to evaluate the DL-based MHMS [65] . In their paper, the discriminative power of learned representation can be improved with the increasing of layers. B. RBM and its variants for machine health monitoring In the section, some work focused on developing RBM and DBM to learn representation from machinery data. Most of works introduced here are based on deep belief networks (DBN) that can pretrain a deep neural network (DNN). In [66] , a RBM based method for bearing remaining useful life (RUL) prediction was proposed. Linear regression layer was added at the top of RBM after pretraining to predict the future root mean square (RMS) based on a lagged time series of RMS values. Then, RUL was calculated by using the predicted RMS and the total time of the bearing's life. Liao et al. proposed a new RBM for representation learning to predict RUL of machines [67] . In their work, a new regularization term modeling the trendability of the hidden nodes was added into the training objective function of RBM. Then, unsupervised self-organizing map algorithm (SOM) was applied to transforming the representation learned by the enhanced RBM to one scale named health value. Finally, the health value was used to predict RUL via a similarity-based life prediction algorithm. In [68] , a multi-modal deep support vector classification approach was proposed for fault diagnosis of gearboxes. Firstly, three modalities features including time, frequency and time-frequency ones were extracted from vibration signals. Then, three Gaussian-Bernoulli deep Boltzmann machines (GDBMS) were applied to addressing the above three modalities, respectively. In each GDBMS, the softmax Fig. 6 . Illustrations the proposed SAE-DNN for rotating machinery diagnosis in [51] . layer was used at the top. After the pretraining and the finetuning processes, the probabilistic of the softmax layers from these three GDBMS were fused by a support vector classification (SVC) framework to make the final prediction. Li et al. applied one GDBMS directly on the concatenation feature consisting of three modalities features including time, frequency and time-frequency ones and stacked one softmax layer on top of GDBMS to recognize fault categories [69] . Li et al. adopted a two-layers DBM to learn deep representations of the statistical parameters of the wavelet packet transform (WPT) of raw sensory signal for gearbox fault diagnosis [70] . In this work focusing on data fusion, two DBMs were applied on acoustic and vibratory signals and random forest was applied to fusing the representations learned by these two DBMs. Making use of DBN-based DNN, Ma et al. presented this framework for degradation assessment under a bearing accelerated life test [71] . The statistical feature, root mean square (RMS) fitted by Weibull distribution that can avoid areas of fluctuation of the statistical parameter and the frequency domain features were extracted as raw input. To give a clear illustration, the framework in [71] is shown in Figure 7 . Shao et al. proposed DBN for induction motor fault diagnosis with the direct usage of vibration signals as input [72] . Beside the evaluation of the final classification accuracies, t-SNE algorithm was adopted to visualize the learned representation of DBN and outputs of each layer in DBN. They found the addition of hidden layer can increase the discriminative power in the learned representation. Fu et al. employed deep belief networks for cutting states monitoring [73] . In the presented work, three different feature sets including raw vibration signal, Mel-frequency cepstrum coefficient (MFCC) and wavelet features were fed into DBN as three corresponding different inputs, which were able to achieve robust comparative performance on the raw vibration signal without too much feature engineering. Tamilselvan et al. proposed a multi-sensory DBN-based health state classification model. The model was verified in benchmark classification problems and two health diagnosis applications including aircraft engine health diagnosis and electric power transformer health diagnosis [74] , [75] . Tao et al. proposed DBN based multisensor information fusion scheme for bearing fault diagnosis [76] . Firstly, 14 time-domain statistical features extracted from three vibration signals acquired by three sensors were concatenated together as an input vector to DBM model. During pre-training, a predefined threshold value was introduced to determine its iteration number. In [77] , a feature vector consisting of load and speed measure, time domain features and frequency domain features was fed into DBN-based DNN for gearbox fault diagnosis. In the work of [78] , Gan et al. built a hierarchical diagnosis network for fault pattern recognition of rolling element bearings consisting of two consecutive phases where the four different fault locations (including one health state) were firstly identified and then discrete fault severities in each fault condition were classified. In each phases, the frequency-band energy features generated by WPT were fed into DBN-based DNN for pattern classification. In [79] , raw vibration signals were pre-processed to generate 2D image based on omnidirectional regeneration (ODR) techniques and then, histogram of original gradients (HOG) descriptor was applied on the generated image and the learned vector was fed into DBN for automatic diagnosis of journal bearing rotor systems. Chen et al. proposed an ensemble of DBNs with multi-objective evolutionary optimization on decomposition algorithm (MOEA/D) for fault diagnosis with multivariate sensory data [80] . DBNs with different architectures can be regarded as base classifiers and MOEA/D was introduced to adjust the ensemble weights to achieve a trade-off between accuracy and diversity. Chen et al. then extended this above framework for one specific prognostics task: the RUL estimation of the mechanical system [81] . C. CNN for machine health monitoring In some scenarios, machinery data can be presented in a 2D format such as time-frequency spectrum, while in some scenarios, they are in a 1D format, i.e., time-series. Therefore, CNNs models are able to learn complex and robust representation via its convolutional layer. Intuitively, filters in convolutional layers can extract local patterns in raw data and stacking these convolutional layers can further build complex patterns. Janssens et al. utilized a 2D-CNN model for four categories rotating machinery conditions recognition, whose input is DFT of two accelerometer signals from two sensors that are placed perpendicular to each other. Therefore, the Fig. 7 . Illustrations the proposed DBN-DNN for assessment of bearing degration in [71] . height of input is the number of sensors. The adopted CNN contains one convolutional layer and a fully connected layer. Then, the top softmax layer is adopted for classification [82] . In [83] , Babu et al. built a 2D deep convolution neural network to predict the RUL of system based on normalizedvariate time series from sensor signals, in which one dimension of the 2D input is number of sensors as the setting reported in [82] . In their model, average pooling is adopted instead of max pooling. Since RUL is a continuous value, the top layer was linear regression layer. Ding et al. proposed a deep Convolutional Network (ConvNet) where wavelet packet energy (WPE) image were used as input for spindle bearing fault diagnosis [84] . To fully discover the hierarchical representation, a multiscale layer was added after the last convolutional layer, which concatenates the outputs of the last convolutional layer and the ones of the previous pooling layer. Guo et al. proposed a hierarchical adaptive deep convolution neural network (ADCNN) [85] . Firstly, the input time series data as a signal-vector was transformed into a 32 × 32 matrix, which follows the typical input format adopted by LeNet [86] . In addition, they designed a hierarchical framework to recognize fault patterns and fault size. In the fault pattern decision module, the first ADCNN was adopted to recognize fault type. In the fault size evaluation layer, based on each fault type, ADCNN with the same structure was used to predict fault size. Here, the classification mechanism is still used. The predicted value f is defined as the probability summation of the typical fault sizes as follows: f = c j=1 a j p j (19) where [p 1 , . . . , p c ] is produced by the top softmax layer, which denote the probability score that each sample belongs to each class size and a j is the fault size corresponding to the j-th fault size. In [87] , an enhanced CNN was proposed for machinery fault diagnosis. To pre-process vibration data, morlet wavelet was used to decompose the vibration signal and obtain wavelet scaleogram. Then, bilinear interpolation was used to rescale the scaleogram into a grayscale image with a size of 32 × 32. In addition, the adaptation of ReLU and dropout both boost the model's diagnosis performance. Chen et al. adopted a 2D-CNN for gearbox fault diagnosis, in which the input matrix with a size of 16 × 16 for CNN is reshaped by a vector containing 256 statistic features including RMS values, standard deviation, skewness, kurtosis, rotation frequency, and applied load [88]. In addition, 11 different structures of CNN were evaluated empirically in their experiments. Weimer et al. did a comprehensive study of various design configurations of deep CNN for visual defect detection [89] . In one specific application: industrial optical inspection, two directions of model configurations including depth (addition of conv-layer) and width (increase of number filters) were investigated. The optimal configuration verified empirically has been presented in Table II . In [90] , CNN was applied in the field of diagnosing the early small faults of front-end controlled wind generator (FSCWG) that the 784×784 input matrix consists of vibration data of generator input shaft (horizontal) and vibration data of generator output shaft (vertical) in time scale. As reviewed in our above section II-C, CNN can also be applied to 1D time series signal and the corresponding operations have been elaborated. In [91] , the 1D CNN was successfully developed on raw time series data for motor fault detection, in which feature extraction and classification were integrated together. The corresponding framework has been shown in Figure 8 . Abdeljaber et al. proposed 1D CNN on normalized vibration signal, which can perform vibrationbased damage detection and localization of the structural damage in real-time. The advantage of this approach is its ability to extract optimal damage-sensitive features automatically from the raw acceleration signals, which does not need any additional preporcessing or signal processing approaches [92] . To present an overview about all these above CNN models that have been successfully applied in the area of MHMS, their architectures have been summarized in Table II . To explain the used abbreviation, the structure of CNN applied in Weimer's work [89] is denoted as Input [32×32]-64C[3×3]2-64P[2× 2] -128C[3 × 3]3 -128P[2 × 2] -FC[1024 -1024]2. It means the input 2D data is 32 × 32 and the CNN firstly applied 2 convolutional layers with the same design that the filter number is 64 and the filter size is 3 × 3, then stacked one max-pooling layer whose pooling size is 2 × 2, then applied 3 convolutional layers with the same design that the filter number is 128 and the filer size is 3×3, then applied a pooling layer whose pooling size is 2 × 2, and finally adopted two fully-connected layers whose hidden neuron numbers are both 1024. It should be noted that the size of output layer is not given here, considering it is task-specific and usually set to be the number of categories. D. RNN for machine health monitoring The majority of machinery data belong to sensor data, which are in nature time series. RNN models including LSTM and TABLE II ON CONFIGURATIONS OF CNN-BASED MHMS. THE SYMBOL Input, C, P AND FC DENOTE THE RAW INPUT, CONVOLUTIONAL LAYER, POOLING LAYER AND FULLY-CONNECTED LAYER, RESPECTIVELY. Proposed Configurations of CNN Structures GRU have emerged as one kind of popular architectures to handle sequential data with its ability to encode temporal information. These advanced RNN models have been proposed to relief the difficulty of training in vanilla RNN and applied in machine health monitoring recently. In [93], Yuan et al. investigated three RNN models including vanilla RNN, LSTM and GRU models for fault diagnosis and prognostics of aero engine. They found these advanced RNN models LSTM and GRU models outperformed vanilla RNN. Another interesting observation was the ensemble model of the above three RNN variants did not boost the performance of LSTM. Zhao et al. presented an empirical evaluation of LSTMs-based machine health monitoring system in the tool wear test [94]. The applied LSTM model encoded the raw sensory data into embeddings and predicted the corresponding tool wear. Zhao et al. further designed a more complex deep learning model combining CNN and LSTM named Convolutional Bidirectional Long Short-Term Memory Networks (CBLSTM) [95] . As shown in Figure 9 , CNN was used to extract robust local features from the sequential input, and then bi-directional LSTM was adopted to encode temporal information on the sequential output of CNN. Stacked fully-connected layers and linear regression layer were finally added to predict the target value. In tool wear test, the proposed model was able to outperform several state-of-the-art baseline methods including conventional LSTM models. In [96] , Malhotra proposed a very interesting structure for RUL prediction. They designed a LSTM-based encoder-decoder structure, which LSTM-based encoder firstly transforms a multivariate input sequence to a fixed-length vector and then, LSTM decoder uses the vector to produce the target sequence. When it comes to RUL prediction, their assumptions lies that the model can be firstly trained in raw signal corresponding to normal behavior in an unsupervised way. Then, the reconstruction error can be used to compute health index (HI), which is then used for RUL estimation. It is intuitive that the large reconstruction error corresponds to a more unhealthy machine condition. IV. SUMMARY AND FUTURE DIRECTIONS In this paper, we have provided a systematic overview of the state-of-the-art DL-based MHMS. Deep learning, as a subfield of machine learning, is serving as a bridge between big machinery data and data-driven MHMS. Therefore, within the past four years, they have been applied in various machine health monitoring tasks. These proposed DL-based MHMS are summarized according to four categories of DL architecture as: Auto-encoder models, Restricted Boltzmann Machines models, Convolutional Neural Networks and Recurrent Neural Networks. Since the momentum of the research of DL-based MHMS is growing fast, we hope the messages about the capabilities of these DL techniques, especially representation learning for complex machinery data and target prediction for various machine health monitoring tasks, can be conveyed to readers. Through these previous works, it can be found that DL-based MHMS do not require extensive human labor and expert knowledge, i.e., the end-to-end structure is able to map raw machinery data to targets. Therefore, the application of deep learning models are not restricted to specific kinds of machines, which can be a general solution to address the machine health monitoring problems. Besides, some research trends and potential future research directions are given as follows: * be the model initialization for the following specific task/dataset. Therefore, it is meaningful to design and publish large-scale machinery datasets. * Utilization of Domain Knowledge: deep learning is not a skeleton key to all machine health monitoring problems. Domain knowledge can contribute to the success of applying DL models on machine health monitoring. For example, extracting discriminative features can reduce the size of the followed DL models and appropriate task-specific regularization term can boost the final performance [67] . * Model and Data Visualization: deep learning techniques, especially deep neural networks, have been regarded as black boxes models, i.e., their inner computation mechanisms are unexplainable. Visualization of the learned representation and the applied model can offer some insights into these DL models, and then these insights achieved by this kind of interaction can facilitate the building and configuration of DL models for complex machine health monitoring problems. Some visualization techniques have been proposed including t-SNE model for high dimensional data visualization [99] and visualization of the activations produced by each layer and features at each layer of a DNN via regularized optimization [100] . * Transferred Deep Learning: Transfer learning tries to apply knowledge learned in one domain to a different but related domain [101] . This research direction is meaningful in machine health monitoring, since some machine health monitoring problems have sufficient training data while other areas lack training data. The machine learning models including DL models trained in one domain can be transferred to the other domain. Some previous works focusing on transferred feature extraction/dimensionality reduction have been done [102] , [103] . In [104] , a Maximum Mean Discrepancy (MMD) measure evaluating the discrepancy between source and target domains was added into the target function of deep neural networks. * Imbalanced Class: The class distribution of machinery data in real life normally follows a highly-skewed one, in which most data samples belong to few categories. For example, the number of fault data is much less than the one of health data in fault diagnosis. Some enhanced machine learning models including SVM and ELM have been proposed to address this imbalanced issue in machine health monitoring [105] , [106] . Recently, some interesting methods investigating the application of deep learning in imbalanced class problems have been developed, including CNN models with class resampling or cost-sensitive training [107] and the integration of boot strapping methods and CNN model [108] . It is believed that deep learning will have a more and more prospective future impacting machine health monitoring, especially in the age of big machinery data. Fig. 1 . 1 Fig. 1. Frameworks showing three different MHMS including Physical Model, Conventional Data-driven Model and Deep Learning Models. Shaded boxes denote data-driven components. Fig. 2 . 2 Fig. 2. Illustrations for Unsupervised Pre-training and Supervised Fine-tuning of SAE-DNN (a) and DBN-DNN (b). 1 1+expFig. 3 . 13 Fig. 3. Frameworks showing RBM, DBN and DBM. Shaded boxes denote hidden untis. Fig. 4 . 4 Fig. 4. Illustrations for one-layer CNN that contains one convolutional layer, one pooling layer, one fully-connected layer, and one softmax layer. 1 1 Fig. 5 . 5 Fig. 5. Illustrations of normal RNN, stacked RNN and bidirectional RNN. Fig. 8 . 8 Fig. 8. Illustrations of the proposed 1D-CNN for real-time motor Fault Detection in [91]. Fig. 9 . 9 Fig. 9. Illustrations of the proposed Convolutional Bi-directional Long Short-Term Memory Networks in [95]."
}