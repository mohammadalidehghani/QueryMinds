{
  "title": "Algebraic Expression of Subjective Spatial and Temporal Patterns *",
  "abstract": "Universal learning machine is a theory trying to study machine learning from mathematical point of view. The outside world is reflected inside an universal learning machine according to pattern of incoming data. This is subjective pattern of learning machine. In [2, 4], we discussed subjective spatial pattern, and established a powerful tool -X-form, which is an algebraic expression for subjective spatial pattern. However, as the initial stage of study, there we only discussed spatial pattern. Here, we will discuss spatial and temporal patterns, and algebraic expression for them.",
  "introduction": "Introduction Machine learning, especially deep learning, currently is a very active area of research. However, unfortunately, a thorough mathematical foundation for deep learning is still missing. For example, what deep learning really is doing inside is still quite mystery. Universal learning machine is a mathematical theory to study machine learning by trying to understand patterns. By definition, an universal learning machine is a machine can learn any pattern from data. Pattern can be spatial, and can be temporal. In order to reduce the complexity, we focus on spatial pattern only at first. We developed theory of universal learning machine for only spatial pattern [2, 4] . In the studies in [2, 4] , we found that one very crucial step is to find a way to express the subjective view of a learning machine to its outside world. Thus, we introduced one effective tool, which we called as X-form. X-form is an algebraic expression of subjective spatial pattern. By using X-form, we indeed get deeper understanding of learning machine. For example, we can define the data sufficiency for learning, which tell us what kind of data are sufficient for learning. Another example, we achieve to understand what deep learning is really doing [3] . Based on X-form, we were able to introduce some effective learning strategies and methods, and we proved that universal learning machine indeed exists. Now, taking the restriction on spatial pattern away, we are going to discuss universal learning machine for spatial and temporal pattern, i.e. any pattern. Following the same approach we did before, we first focus on the very crucial part: algebraic expression of subjective spatial and temporal pattern. First, let us explain universal learning machine. See illustration of universal learning machine in Fig. 1 . As in the illustration, universal learning machine has major components: input space, output space, conceiving space and governing space.",
  "body": "Introduction Machine learning, especially deep learning, currently is a very active area of research. However, unfortunately, a thorough mathematical foundation for deep learning is still missing. For example, what deep learning really is doing inside is still quite mystery. Universal learning machine is a mathematical theory to study machine learning by trying to understand patterns. By definition, an universal learning machine is a machine can learn any pattern from data. Pattern can be spatial, and can be temporal. In order to reduce the complexity, we focus on spatial pattern only at first. We developed theory of universal learning machine for only spatial pattern [2, 4] . In the studies in [2, 4] , we found that one very crucial step is to find a way to express the subjective view of a learning machine to its outside world. Thus, we introduced one effective tool, which we called as X-form. X-form is an algebraic expression of subjective spatial pattern. By using X-form, we indeed get deeper understanding of learning machine. For example, we can define the data sufficiency for learning, which tell us what kind of data are sufficient for learning. Another example, we achieve to understand what deep learning is really doing [3] . Based on X-form, we were able to introduce some effective learning strategies and methods, and we proved that universal learning machine indeed exists. Now, taking the restriction on spatial pattern away, we are going to discuss universal learning machine for spatial and temporal pattern, i.e. any pattern. Following the same approach we did before, we first focus on the very crucial part: algebraic expression of subjective spatial and temporal pattern. First, let us explain universal learning machine. See illustration of universal learning machine in Fig. 1 . As in the illustration, universal learning machine has major components: input space, output space, conceiving space and governing space. Fig. 1. Illustration of Universal Learning Machine Input space is a N-dim binary space. So, any input is an N-dim binary array. But, since we are talking about spatial and temporal, we should study sequence of input. We do not restrict length of sequence. For effective learning machine, input space also gives feedback from learning machine to its input enviornment. But, we do not need to consider this feedback in this article. Output space is one M-dim binary space. There could be some feedback to learning machine for its output. In this article, we do not consider this feedback either. Between input space and output space lays conceiving space. This is the major part of learning machine, information processing from input to output is done here, and learning is done here. Conceiving space has the capability to handle spatial and temporal patterns, and is able to make spatial and temporal memory, and take spatial and temporal abstraction. Conceiving space is actually the container of X-forms. Governing space is where rules of learning stay. Governing space is very crucial. Following, first we study objective patterns, spatial and temporal. For temporal pattern, understanding of sequence is crucial. We will introduce notation for sequence. Then we turn to subjective: subjective spatial pattern, subjective temporal pattern and subjective pattern. Based on these discussions, we reach algebraic expression for subjetive patterns, sX-form, tX-form and X-form. We prove the central theorem: any spatial and temporal pattern (literally, any pattern) can be expression by X-form established on some very limited base patterns. Objective Patterns Inside a learning machine there is information processing unit that takes input and generates output. So it takes information from input and generates output accordingly. But, how to take information? Must according to pattern of input. But, what is pattern, spatial pattern, temporal pattern? Consider a learning machine M and one input p. p is N-dim binary array. So, p has components cross the array. Such data arrangement cross over the array is called spatial. Clearly, the spatial arrangement contains information, and M could process according to such information. If M treats p only by the information carried by spatial data arrangement, not by any other, such as previous input, afterward input, input order, etc, it is called spatial. If M treats p also according to other factor, such as input order, previous input, afterward input, etc, it is called temporal. It is very clear that spatial pattern involves just the spatial data arrangement in input array, while temporal pattern must involve spatial data arrangement, and temporal factors. So, if we talk about input p for spatial pattern, only need to consider p itself. If we talk about input of a temporal pattern, p is only a part. We have to consider more. For temporal pattern, we need to consider sequence, such as: {p 1 , p 2 , . . . , p k }. Example 2.1 (Simple Sequence). Some very simple examples. [0 → 1 → 0 → 0 → 1] is one simple sequence. Here the input space is very simple, i.e. 1-dim binary space. The length of sequence is 5. [(0, 0) → (0, 1) → (1, 0) → (0, 0)] is another very simple sequence, here the input space is 2-dim binary space. The length of sequence is 4. Note, we use such symbols to express sequence: [• • • ] is to denote one sequence, and inside [] are data, i.e. a series of input, and → to denote the relationship of \"next\". In sequence, the relationship \"NEXT\" is crucial. We will use these symbols for sequence. Base Pattern, Sequence and Pattern Spatial and temporal pattern is classified by just one input or sequence of input. But, pattern can also be classified by objective or subjective. Objective means that patterns are independent from any particular learning machine. In order to describe it well, we start from base pattern space. Definition 2.1 (Base Pattern Space). N -dim base pattern space, denote as P S 0 N , is a N -dim binary vector space, i.e. P S 0 N = {b = (i 1 , i 2 , . . . , i N ) | i k = 0 or 1} Each element of b ∈ P S 0 N is a base pattern. There are totally 2 N base patterns in P S 0 N . When N is not very small, P S 0 N is a huge set. For example, if N = 100, which is very small comparing to need of any machine, then 2 N = 2 100 > 10 33 . This is a huge number. Base pattern is just the starting point. Pattern is much more than base pattern. However, since an objective spatial pattern is totally independent from any particular machine, it could not be anything but a set of base patterns. So, we have: Note, before we used term \"face of a pattern\". We now use term \"instance\", which should be better. Before defining objective temporal pattern, we need to consider sequence of base patterns, so we introduce some notations for sequence of base patterns. We do not restrict the length of sequence. Notation P S 0 N * stands for unspecified folds of P S 0 N . As usual, symbol * means unspecified folds. Definition 2.3 (Base Pattern Column). P S 0 N * is called as base pattern column. It is unspecified folds of base pattern space. More precisely, any member s ∈ P S 0 N * is a sequence of base patterns, written as: s = [b 1 → b 2 → . . . → b k ], b j ∈ P S 0 N , j = 1, . . . , k for some integer k. Any member in base pattern column is a sequence of base patterns, whose length is a finite number k, but this number k could be any. Also, in above definition, we use one notation for a sequence: s = [b 1 → b 2 → . . . → b k ] That is to say, the symbol [• • • ] stands for a sequence, and inside [ ], we put contents of this sequence, i.e. base patterns connected by symbol \"→\". We call the symbol \"→\" as next. Parallel to objective spatial pattern, we have objective temporal pattern. Any member of the set p, s ∈ p, is a sequence like this: s = [b 1 → b 2 → • • • → b k ], b j ∈ P S 0 N , j = 1, . . . , k. Such a sequence is an instance of p. Also note, for 2 members of p, both of them are sequence. But, their lengths of sequence are no need to be same. One very special case of temporal pattern is the pattern that has length 1. Actually, we can just thought it as a spatial pattern. We can also think any spatial pattern as a temporal pattern with length 1, and any base pattern as a sequence with length 1. Definition 2.5 (Objective Spatial Pattern as Objective Temporal Pattern). A objective spatial pattern p is a set of base patterns, p = {b 1 , b 2 , . . . |b i ∈ P S 0 N }. However, p can also be viewed as a temporal pattern that each sequence has length 1, i.e. only has one spatial pattern: tp = [p] = {[b 1 ], [b 2 ], . . .}. We call such temporal pattern as length 1 temporal pattern. Definition 2.6 (Objective Pattern (Spatial and Temporal)). A objective pattern (spatial and temporal) p is such a set: p = {p 1 , p 2 , . . .}, where p j is one instance of p, p j is sequence of base patterns (sequence length of p j could be 1, in that case, p j is just a base pattern). This definition tells us that objective pattern p is just a subset of base pattern column, each instance of p is just a sequence of base patterns (if the length is 1, just base pattern). Now we turn to operators of objective pattern. Operators For objective spatial patterns, we have defined operators 3 operators: OR, AND, NOT in [2, 4] . We now modify these operators so that they are good for any objective pattern (spatial and temporal). Definition 2.7 (Operator OR (set union)). For any 2 objective patterns p 1 and p 2 , we have a new pattern p: p = p 1 OR p 2 = p 1 b ∪ p 2 b Here, ∪ is the set union. That is to say, this new pattern is such a pattern that any instance it is either instance of p 1 or instance of p 2 . Definition 2.8 (Operator AND (set intersection)). For any 2 objective patterns p 1 and p 2 , we define a new pattern p: p = p 1 AN D p 2 = p 1 b ∩ p 2 b Here, ∩ is the set intersection. That is to say, this new pattern is such a pattern that any instance of it is both instance of p 1 and instance of p 2 . Definition 2.9 (Operator NOT (set complement) ). For any objective patterns p , we define a new pattern p: q = N OT p = p c b = {b ∈ P S 0 N * |b ∈ p b } Here, A c is complement set of A. Also note, the complement set is taken in base pattern column P S 0 N * . That is to say, q is such a pattern that its instance is not an instance of p. Since objective patterns are subset of base pattern column, it is no surprise to realize that these operators are actually set operators: set union, set intersection, and set complement. All set operators are in base pattern column. Very clearly, the above 3 operators do not depend on any learning machine. So, they are all objective. Consequently, if we apply these 3 operators consecutively, we still generate a new objective pattern. But, we have another important operator for objective patterns (spatial and temporal). Definition 2.10 (Operator NEXT ). For any 2 objective patterns p 1 and p 2 , we define a new pattern p: p = p 1 N EXT p 2 = {[s 1 → s 2 ]|s 1 ∈ p 1 , s 2 ∈ p 2 } Note, s 1 is one sequence, so is s 2 . [s 1 → s 2 ] is a new sequence that is formed by first s 1 , then s 2 . We denote the operator NEXT as p = p 1 → p 2 . That is to say, we can connect 2 patterns to form a new pattern. This operator \"NEXT\" is a very fundamental operation in patterns. One special case is to connect several spatial patterns to a temporal pattern. If p 1 , p 2 , . . . , p k are a group of spatial patterns, we can connect them to form a temporal pattern t as: t = p 1 → p 2 → . . . → p k It is interesting to see an instance of t, which is: s = [b 1 → b 2 → . . . → b k ], b j ∈ p j , j = 1, . . . , k NEXT operator is fundamentally difference from OR, AND. Subjective Patterns Objective spatial pattern is a subset of base pattern space, objective temporal pattern is a subset of base pattern column. They are independent from any learning machine. But we want to know how a learning machine to perceive objective patterns, which is subjective. So, we have following considerations. When a base pattern or a sequence of base patterns is presented to learning machine M , M will generate output. Thus, inside M , there must be some place that reflects the input so that the machine can produce correct output. Such places are very crucial. Definition 3.1 (Perception Bit). Inside a learning machine M , if there is one bit pb with such behavior: there is one subset of base pattern column, S ⊂ P B 0 N * , so that for any s ∈ S, the bit has value 1, pb = 1, and for any s / ∈ S, the bit has value 0, pb = 0, we then call such bit pb as processing bit/perception bit. Perception bits play very crucial role in learning machine. For perception bit, we have following simple yet crucial theorem. Theorem 3.1 (Existence of Perception Bits). For any learning machine M , the perception set is not empty. Proof: We first exclude the extreme situation that M always output 0 or always output 1. After excluding the extreme situation, we know for some p ∈ P S 0 N * , output is 0, for some, output is 1. We define all p ∈ P S 0 N * that output is 1 as one set B, called as supporting set. So we can say that the supporting set B is a proper subset of base pattern column P S 0 N * , so does B c . Thus, there must exist one bit pb inside M with such property: for p ∈ B, pb = 1, if p / ∈ B, pb = 0. Thus, pb is a perception bit. Using perception bits, we can describe perception of a learning machine. Below, we will discuss subjective spatial pattern first, then, subjective temporal pattern, then, subjective pattern (spatial and temporal). Subjective Spatial Patterns We discussed this part before, so we repeat quickly. We start from how to perceive a base pattern. Definition 3.2 (Basic Pattern Perceived by). M is a learning machine, {pb j | j = 1, . . . , L} are set of perception bits. For 2 basic patterns b 1 and b 2 , the perception bits take values accordingly: (pv 1  1 , pv 1 2 , . . . , pv 1 L ) and (pv 2 1 , pv 2 2 , . . . , pv 2 L ), and at least for some k, 1 ≤ k ≤ L, pv 1 k = pv 2 k = 1, we then say, at perception bit pb k , M subjectively perceive b 1 and b 2 as same. Further, we have: Definition 3.3 (Spatial Pattern Perceived by). M is a learning machine, {pb j | j = 1, . . . , L} are set of perception bits. Suppose p is a set of basic patterns, and at perception bit pb k , 1 ≤ k ≤ L, each basic pattern of p will take value 1, we then say, at pb k , M subjectively perceive p as one pattern. We also say p is a subjective spatial pattern perceived by M at perception bit pb k . This definition tells us that a subjective spatial pattern is a set of base patterns, i.e. an objective spatial pattern. But, these base patterns must have one common property: they are perceived same by learning machine at some perception bit. This is very fundamental understanding for subjective spatial pattern. Subjective spatial pattern depends on perception of learning machine, so does subjective operators. Here we define subjective operators for subjective spatial patterns. Definition 3.4 (Negation Operator for Subjective Spatial Pattern). Suppose M is a learning machine, {pb j | j = 1, . . . , L} are perception bits. For a subjective spatial pattern p perceived at pb k by M , q is another spatial pattern perceived at pb k by M , but at perception bit pb k , their perception values are all opposite. We denote this pattern q as q = NOT p or q = ¬p. Definition 3.5 (OR Operator for Subjective Spatial Pattern). Suppose M is a learning machine, {pb j | j = 1, . . . , L} are perception bits. For any 2 subjective spatial patterns p 1 and p 2 , p 1 perceived at pb k1 by M , and p 2 perceived at pb k2 by M , p is another subjective pattern, and perceived by M in this way: first, if necessary M will modify its perception bits so that there is a perception bit pb l , then M perceive any base patterns from either p 1 or p 2 at perception bit pb l same. This definition tells, if pb l does not exist, M will generate this perception bit first, and make p 1 and p 2 perceived same there. We can also say, new pattern p is either p 1 or p 2 appears. We can denote this new pattern as p = p 1 OR p 2 = p 1 + s p 2 . Note, if we want to do operation OR, we might need to modify perception bits of M . This is often done by adding a new perception bit. Without the perception bit ready, operation could not be done. Definition 3.6 (AND Operator for Subjective Spatial Pattern). Suppose M is a learning machine, {pb j | j = 1, . . . , L} are perception bits. If p 1 is one subjective spatial pattern perceived at pb k1 , p 2 is one subjective spatial pattern perceived at pb k2 , then, all base patterns that M perceives at both pb k1 and pb k-2 at the same time will form another subjective spatial pattern p, and p is perceived by M at pb l . This definition tells, if pb l does not exist, M will generate this perception bit first. We can also say, new pattern p is both p 1 and p 2 appear together. We can denote this pattern p as p = b 1 AN D b 2 = b 1 • b 2 . Note, if we want to do AND operator, we have to modify perception bits of M . We have 3 subjective operators for subjective spatial patterns. If starting from some base patterns and applying the 3 subjective operators consecutively, we will have one algebraic expression. In [2] , we called such algebraic expression as X-form. However, since we are dealing with spatial and temporal patterns, we adapt name to sX-form, \"s\" stands for spatial. as an sX-form upon g, or simply sX-form. We note, in order to have this expression make sense, quite often, learning machine M needs to modify its perception bits accordingly. We also call the group of base patterns g = {b 1 , b 2 , . . . , b K } as footing of E. E is an algebraic expression. In a pure sense, it is not connected to anything of learning machine or patterns. It is just one algebraic expression. However, in order this algebraic expression to connect to pattern, learning machine needs to modify its perception bits so that this expression to make sense, and it must be based on footing. Such situation creates good tool for us so that we can use sX-form to express subjective spatial pattern. Following theorem tells us that in fact sX-form can express any subjective spatial pattern. Theorem 3.2 (Expressibility of sX-form). Any objective spatial pattern p can be expressed by one sX-form with footing that has less than N base patterns. The proof can be seen in [2] . We then turn to subjective temporal patterns. Subjective Temporal Patterns Spatial pattern only involves one input, but temporal pattern must involve sequence. How sequence is perceived? And, how to turn sequence to subjective temporal pattern?. How subjective spatial pattern is perceived could give us a guide: we first consider how one base pattern is perceived, then consider how a group of base patterns is perceived. So, we need to first consider how to perceive a sequence, then a group of sequences. Definition 3.8 (Sequence Perceived by). Suppose M is a learning machine, {pb j | j = 1, . . . , L} are perception bits. If [b 1 → b 2 → . . . → b k ] is a sequence of base patterns with length k, and if there are k perception bits, pb j1 , pb j2 , . . . , pb j k , so that b 1 is perceived at pb j1 , b 2 is perceived at pb j2 , . . ., and b 1 is perceived first, b 2 is perceived second, . . ., b k is perceived at last, and must in such order, and there is one perceive bit pb t to reflect such perception, i.e. pb t = 1 if the sequence is perceived in such way, otherwise, pb t = 0, we will say sequence [b 1 → b 2 → . . . → b k ] is perceived by M at pb t as one sequence, and we say the perception bits pb j1 , pb j2 , . . . , pb j k are sensing of the sequence. Note, one sequence with length k, [b 1 → b 2 → . . . → b k ], has k base patterns. Each of them has to be perceived as spatial pattern first. But, just spatial perception is not good enough. They must also be perceived in the order: b 1 first, b 2 second, . . .. Also, M must be able to sense such order, and reflect such a sensing to a perception bit. This is quite different than spatial pattern. The perception bit pb t is crucial. For spatial pattern, there is no such a perception bit. This perception bit is actually reflect the ability of M : to be able to sense a sequence and to behave according to the sequence. We will call such perception bit pb t as temporal perception bit (contrast to spatial perception bit). Theorem 3.3 (Existence of Temporal Perception Bit ). Suppose M is a learning machine, and suppose M can process at least one sequence, then among its perception bits: {pb j | j = 1, . . . , L}, temporal perception bits exist. Proof: Suppose M can process this sequence s, and suppose when s inputs, M output 1. There must have some other sequence s , when s inputs, M output 0. Thus, there exists one bit pb inside M with such property: for some sequence, pb = 1, for other sequence, pb = 0. So, this pb is one temporal perception bit. By using temporal perception bit, we can define subjective temporal pattern. Definition 3.9 (Temporal Pattern with Same Length Perceived by). Suppose M is a learning machine, {pb j | j = 1, . . . , L} are perception bits. If p is set of sequences of base patterns with same sequence length, and pb t is a temporal perception bit, and for all instance of p, s ∈ p (s is a sequence, like [b 1 → b 2 → . . . → b k ]), s is perceived by M at pb t as one sequence, we then say p is subjectively perceived as one temporal pattern with same length by M at pb t . This definition tells us that a subjective temporal pattern with same length is actually a set of sequence of base pattern, i.e. one objective pattern, however, they are common in such way: they all have the same length, and are perceived as sequence by M at a particular temporal perception bit pb t . Now, we turn to operators of temporal patterns. First, we consider the operator to connect 2 subjective spatial patterns. Suppose p 1 , p 2 are 2 subjective spatial patterns, we can connect them to form a subjective temporal pattern by such a way: Suppose p 1 is perceived at pb j1 , and p 2 is perceived at pb j2 . Learning machine M might have no sense about the order of perception of p 1 and p 2 . However, if M can adapt some temporal sense, i.e. to perceives p 1 first and p 2 second, and has one temporal perception bit pb t to reflect this perceived sequence, M perceives the set {[b 1 → b 2 ] |b 1 is an instance of p 1 , b 2 is an instance of p 2 } as a subjective temporal pattern. Very important to notice: in order to make 2 subjective spatial patterns connected to become a subjective temporal pattern, M must do crucial adaption: 1) modify its sense of ordering, 2) if necessary, add one temporal perception bit, 3) use the temporal perception bit to reflect the perceived sequence. This is a lot of adaption. But, this is absolutely necessary to perceive a temporal pattern. We call p 2 is next to p 1 , and we say that 2 spatial patterns are connected to form a temporal pattern. Of course, in order to make such operator work, it absolutely necessary to make a lot of adaption described above. Compare to necessary adaption for spatial pattern operator, the adaption for temporal pattern operator is much more. This is understandable and is crucial. We can consecutively apply the NEXT operator to a group of spatial patterns p 1 , p 2 , . . . , p k , we will have: t = p 1 → p 2 → . . . → p k . This is a subjective temporal pattern generated from p 1 , p 2 , . . . , p k . Of course, in order to make sense, a lot of adaption are necessary. In short, the above subjective temporal pattern is generated by a group of subjective spatial patterns. But, we also know subjective spatial pattern can be expressed by sX-form, it would be better to define NEXT operator to sX-form. Definition 3.11 (Subjective Operator NEXT for sX-form). Suppose M is a learning machine, {pb j | j = 1, . . . , L} are perception bits. We know any sX-form represent a subjective spatial pattern. For any 2 sX-form e 1 and e 2 , we can generate a new temporal pattern t = p 1 → p 2 , where p 1 and p 2 are the subjective spatial patterns represented by e 1 and e 2 accordingly. Subjective operator NEXT for the 2 sX-forms is the operator NEXT for spatial patterns p 1 and p 2 . We denote this operator as: t = e 1 → e 2 . Of course, in order to make sense for this expression, we have to adapt M a lot, as discussed above. We can also consecutively apply this operator, i.e. e 1 → e 2 → . . . → e k . We give a definition for this kind of expression. Definition 3.12 (tX-Form). If e 1 , e 2 , . . . , e k are a group of sX-form, then we call expression e 1 → e 2 → . . . → e k as a tX-form. That is to say, sX-form connected by operator \"→\" form a tX-form. Here \"t\" stands for temporal. This form t in fact expresses a subjective temporal pattern. We also say, new pattern t is formed by e 2 next to e 1 . We can denote the operator as \"→\", t = e 1 → e 2 . Theorem 3.4 (Expressibility of tX-form). Any objective temporal pattern with same length p can be expressed by one tX-form. Proof: Suppose p = {s 1 , s 2 , . . .}, each s j is an instance of p and is a sequence with length k. So, s j = [b j1 → b j2 → b j k ] . Now, we know this set {b ji | i = 1, 2, . . . is a set of base patterns, according to Theorem 3.2, it can be expressed by one sX-form p i . We can see clearly that p = p 1 → p 2 → . . . → p k . This theorem tells us that tX-form is good enough to express any objective temporal pattern with same length. Subjective Patterns From subjective spatial patterns, we derive sX-form, which can express any spatial pattern. From subjective temporal patterns with same length, we derive tX-form, which can express any temporal pattern with same length. What about any subjective pattern, spatial and temporal? Let's consider some examples first. If b 1 , b 2 are 2 base patterns. Then, p = b 1 + b 2 is a sX-form expresses a subjective spatial pattern, [b 1 → p] is a tX-form, expresses a subjective temporal pattern with length 2. But, how about one subjective pattern that \"either [b 1 → p] or b 2 \"? This is surely one legitimate subjective pattern, but it is not purely spatial pattern, nor purely temporal pattern. How a machine to perceive it? How to express this pattern algebraically? Definition 3.13 (Subjective Pattern Perceived by). Suppose M is a learning machine, {pb j | j = 1, . . . , L} are perception bits. If p is subset of base pattern column, i.e. p ⊂ P S 0 N * , if there is one perception bit pb so that any instance of p is perceived same by M at pb, we then say p is subjectively pattern perceived by M at pb. We can define 2 subjective operators as below. They are defined before, but, we make some modification so that it can be applied to any subjective pattern. Definition 3.14 (OR Operator for Subjective Pattern). Suppose M is a learning machine, {pb j | j = 1, . . . , L} are perception bits. For any 2 subjective patterns p 1 and p 2 , p 1 perceived at pb k1 by M , and p 2 perceived at pb k2 by M , p is another subjective pattern, and perceived by M in this way: first, if necessary M will modify its perception bits so that there is a perception bit pb l , then M perceive any instance of either p 1 or p 2 same at perception bit pb l . This definition tells, if pb l does not exist, M will generate this perception bit first, and make p 1 and p 2 perceived same there. We can also say, new pattern p is either p 1 or p 2 appears. We can denote this new pattern as p = p 1 OR p 2 = p 1 + s p 2 . Note, if we want to do operation OR, we might need to modify perception bits of M . This is often done by adding a new perception bit. Without the perception bit ready, operation could not be done. Starting from some base patterns, and apply the operators we defined (\"+, •, ¬\" for subjective spatial patterns, \"+, →\" to any subjective patterns), we can have X-form. Definition 3.16 (X-form as Algebraic Expression). If E is one algebraic expression of 5 subjective operators, \"¬, +, •\" for subjective spatial patterns, and \"+, →\" for any other subjective patterns, g = {b 1 , b 2 , . . . , b K } is a group of base patterns, then we call the expression E(g) = E(b 1 , b 2 , . . . , b K ) as an X-form upon g, or simply X-form. We note, in order to have this expression make sense, quite often, learning machine M needs to modify its perception bits accordingly. We also call the group of base patterns g = {b 1 , b 2 , . . . , b K } as footing of E. So, can X-form good enough to express any subjective pattern? Yes, it can. Theorem 3.5 (Expressibility of X-form). Any objective pattern p (i.e. any subset of base pattern column P S 0 N * ) can be expressed by one X-form with footing that has less than N base patterns. Proof: We can group p by sequence length. For so that p = p 1 + p 2 + . . ., each p l is set of sequence with length l. According to Theorem 3.4, p l can be expressed by a tX-form. We can also make the footing for all tX-form as a same number of base patterns, and this number is less than N . This theorem tells us any subjective patterns can be expressed by one X-form with footing that has less than N base patterns. Shortly say, X-form has strong expressibility for all subjective patterns. X-forms In last section, we discussed subjective spatial patterns and sX-form, subjective temporal patterns and tX-form, and subjective patterns and X-form. X-form is the fundamental tool for us. In definition 3.16, X-form is one algebraic expression. However, when this expression is combined with footing, it is a subjective pattern. 2 , . . . , b K is called footing. Combining with footing (if make sense), E actually expresses a subjective patterns that is generated from b 1 , b 2 , . . . , b K with those operations. That is to say, for an algebraic expression E, if it combines footing {b 1 , b 2 , . . . , b K }, if make sense, then we have a subjective pattern E(b 1 , b 2 , . . . , b K ). This gives us one powerful tool to deal with subjective pattern. However, X-form can represent information processing as well. Definition 4.2 (X-form as Information Processing). If E = E(g) = E(b 1 , b 2 , . . . , b K ) is X-form with footing b 1 , b 2 , . . . , b K . if it makes sense, E expresses a subjective pattern p, further, it is an information processing by such a way: for any sequence s ∈ P S 0 N * , if s ∈ p, E(s) = 1, if s / ∈ p, E(s) = 0. So, X-form is one algebraic expression, X-form represents a subjective pattern (spatial and temporal), X-form is an information processing. Actually, X-form is all of them. Such an multi-role gives us a very powerful tool to deal with patterns and learning machine. 1. For subjective spatial operators, we also have: e 1 = b 1 + b 2 is one X-form. Actually, it is one sX-form. 2. e 2 = b 1 + b 2 • b 2 is one X-form. It is also sX-form. 3. e 3 = (b 1 + b 2 ) • (b 1 + b 3 ) is one sX-form. Subjective spatial operators: Commutative: a + b = b + aa • b = b • a Associative: a + (b + c) = (a + b) + c, a • (b • c) = (a • b) • c Distribution: a • (b + c) = (a • b) + (a • c) Negation reflect: ¬(¬a) = a Subjective operators: Commutative: a + b = b + a Associative: a + (b + c) = (a + b) + c Distribution with NEXT: a → (b + c) = (a → b) + (a → c), (a + b) → c = (a → c) + (b → c) However, in order to make sense, perception bits must be adapted. There are more properties of these operators. Here, we make some comments for X-form. Multiple Role: The multiple roles played by X-form is very useful. First, as an algebraic expression, algebraic operation can be easily conducted. Then, the algebraic expression can combine with base patterns to express a subjective pattern. And, X-form is also an information processing, which is not opaque to us, on the contrary, it is a clear logical statement to tell how learning machine is processing information. These are perfect for us to study learning machine. We can compare X-form with current deep learning, which is quite opaque, and no way to do algebraic operation on perception. We can also compare X-form with category theory, which is used to describe the dynamics of concepts. While category theory allows explicit algebraic operations on concepts, it is very difficult to link the concepts to learning machine. X-form by its definition is logical statement, and the other hand, it is connectionist by nature. It combines connectionist approach and symbolic approach naturally. X-form itself is a logical relationship (if the X-form is very long, the logic may be complicated), so X-form can be naturally associated with various logical reasoning within the learning machine. These logical reasonings do not necessarily have to be classic. They can be non-classical or probabilistic. The work in these areas has yet to be expanded. In short, the X-form gives us a great tool for subjective view of a learning machine, and it is a mathematical object that is well worth to study in depth. Relationship of Spatial and Temporal: Spatial means to consider information in data arrangement in base pattern. Quite differently, temporal involve sequence. More precisely, a sequence has to input a base pattern first, then another base pattern, etc. Learning machine will use not only information cross index, but also use information contains in ordering, and previous and afterwards input. Question is: can spatial pattern turns to be temporal, and vise versa? Can we convert temporal pattern to spatial pattern with a bigger dimension? On the other hand, can we convert spatial pattern to temporal pattern by cutting base pattern space into smaller pieces and make them to be perceived in order? Actually, we can. We can turn spatial to temporal, and vise versa. In fact, to do so, not only is possible, but also very desirable. In many situation, we need to do so. Converting spatial and temporal gives us a very powerful tool. The great thing is: X-form can capture converting spatial and temporal easily. Algebraically, X-form can express all of them clearly and easily. Finally, due to the role X-forms play in learning machine, we would like to formulate one conjecture as below: Conjecture 4.3 (X-form). Any computing system, if it has some universal learning capability for spatial and temporal patterns, inside it there must have some structure equivalent to sX-form, tX-form and X-form. Future Works Inside a learning machine, there are many X-forms to express subjective view of learning machine. Xform can express well those subjective views. This is a very important step towards universal learning machine. Yet, it is only the first step. There are a lot of research ahead. We need to understand how to modify the subjective view of a learning machine so that this view can match the environment and data. This process to match is actually the learning. In fact, from this point of view, learning is the dynamics of X-form in conceiving space. The dynamics of X-form will be our future work. Actually, we did some parts in [2, 4] , but only for sX-form. We have not doubt that this will be one very rich research area. Definition 2 . 2 ( 22 Objective Spatial Pattern as Set of Base Patterns). An objective spatial pattern p is a set of base patterns:p = {b 1 , b 2 , . . . |b i ∈ P S 0 N }Any member of the set p, b ∈ p, is called an instance of p. Definition 2 . 4 ( 24 Objective Temporal Pattern as Set of Sequence of Base Patterns). An objective temporal pattern p is a set of sequence of base patterns: p = {s 1 , s 2 , . . . |s i ∈ P S 0 N * } Any member of p, s ∈ p is called an instance of p. Definition 3 . 3 7 (sX-Form). If E is one algebraic expression of 3 subjective operators, \"¬, +, •\", and g = {b 1 , b 2 , . . . , b K } is a group of base patterns, then we call the expression E(g) = E(b 1 , b 2 , . . . , b K ) Definition 3 . 3 10 (Subjective Operator NEXT for Spatial Patterns). Suppose M is a learning machine, {pb j | j = 1, . . . , L} are perception bits. If there are subjective spatial pattern p 1 and p 2 , then a new subjective temporal pattern t can be constructed as: any instance of t is such a form, [b 1 → b 2 ], where b 1 is an instance of p 1 , and b 2 is an instance of b 2 , M perceives b 1 first and b 2 second, and has one temporal perception bit pb t to reflect this sequence. We call this operator NEXT, and denote t = e 1 → e 2 . Definition 3 . 3 15 (NEXT Operator for Subjective Pattern). Suppose M is a learning machine, {pb j | j = 1, . . . , L} are perception bits. If there are subjective pattern p 1 and p 2 , then a new subjective pattern t can be constructed as: any instance of t is such a form, [b 1 → b 2 ], where b 1 is an instance of p 1 , and b 2 is an instance of b 2 , M perceives b 1 first and b 2 second, and has one temporal perception bit pb t to reflect this sequence. We call this operator NEXT, and denote t = e 1 → e 2 . Definition 4 . 1 ( 41 X-form as Subjective Pattern). If E = E(g) = E(b 1 , b 2 , . . . , b K ) is X-form, thenit is an algebraic expression of 5 subjective operators (\"¬, +, •\" for subjective spatial patterns, and \"+, →\" for any other subjective patterns). The K base patterns b 1 , b Example 4 . 1 ( 41 Simple Examples). Here, b 1 , b 2 , . . . are base patterns. 4 . 4 e 4 = [b 1 → e 2 → e 3 ] is one tX-form. 5. e 5 = e 4 + ([e 1 → e 4 ]) is one X-form."
}