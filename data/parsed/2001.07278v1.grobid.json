{
  "title": "Mixed integer programming formulation of unsupervised learning",
  "abstract": "A novel formulation and training procedure for full Boltzmann machines in terms of a mixed binary quadratic feasibility problem is given. As a proof of concept, the theory is analytically and numerically tested on XOR patterns.",
  "introduction": "Introduction A central open question in machine learning is the effective handling of unlabeled data [1, 2] . The construction of balanced representative datasets for supervised machine learning for the most part still requires a very close and time consuming human direction, so the development of efficient learning from data algorithms in an unsupervised fashion is a very active area of research [1, 2] . A general framework to deal with unlabeled data is the Boltzmann machine paradigm, in which is attempted to learn a probability distribution for the patterns in the data without any previous identification of input and output variables. In its most general setups however, the training of Blotzmann machines is computationally intractable [2, 3, 4] . In this contribution is established a relation, which to the best of my knowledge was previously unknown, between Mixed Integer Programing (MIP) and the full Boltzmann machine in binary variables. Is hoped that this novel formulation opens the road to more efficient learning algorithms by taking advantage of the great variety of techniques available for MIP.",
  "body": "Introduction A central open question in machine learning is the effective handling of unlabeled data [1, 2] . The construction of balanced representative datasets for supervised machine learning for the most part still requires a very close and time consuming human direction, so the development of efficient learning from data algorithms in an unsupervised fashion is a very active area of research [1, 2] . A general framework to deal with unlabeled data is the Boltzmann machine paradigm, in which is attempted to learn a probability distribution for the patterns in the data without any previous identification of input and output variables. In its most general setups however, the training of Blotzmann machines is computationally intractable [2, 3, 4] . In this contribution is established a relation, which to the best of my knowledge was previously unknown, between Mixed Integer Programing (MIP) and the full Boltzmann machine in binary variables. Is hoped that this novel formulation opens the road to more efficient learning algorithms by taking advantage of the great variety of techniques available for MIP. Full Boltzmann machine with data as constraints Consider a network of units with binary state space. Each unit depends on all the others by a logistic-type response function, x i = round   1 1 + exp -j =i q j,i x j -b i   ≡ f i , (1) where the \"round\" indicates the nearest integer function, the q's are pairwise interactions between units and the b's are shift parameters. As will later be clear, the proposed model supports both supervised and unsupervised learning and leads to a full Boltzmann machine in its classical sense. (-1) v d,i   I j =i q i,j v d,j + b i   ≤ 0, (2) (-1) u d,m   M j =m q m,j u d,j + b m   ≤ 0, d = 1, 2, ..., D; i = 1, 2, ..., I; m = 1, 2, ..., M. A posterior distribution for the parameters P ({q i,j , b i }|D), can be constructed by the maximum entropy principle, which gives the less biased distribution that is consistent with a set of constraints [5, 6] . This is done by the minimization of the Lagrangian L = P ln P d w + N D r=1 λ r constraint(r) , (3) where the brackets represent average under the posterior, w is a vector that contains the connectivity and shift parameters and the λ's are positive Lagrange multipliers. Due to the linearity of the system of inequalities (2), the average of the constraints under P with fixed unit values is simply given by the same set of inequalities with the coefficients q j,i 's and b i 's substituted by their averages q j,i 's, b i 's. The maximum entropy distribution for the parameters is therefore given by P ({q i,j , b i }|D) = 1 Z exp   - {d,i} λ {d,i}   (-1) x d,i   N j =i q i,j x d,j + b i       , ( 4 ) where Z is a normalization factor. So due to the linearity of the constraints, P is a tractable (i. e. an easy to sample) product of independent two parameter exponential distributions: P ({q i,j , b i }|D) = P ( w|D) = N n=1 α n e -αn(wn-βn) , where w n = 1 αn + β n [7] . Therefore a necessary and sufficient condition for the existence of the above distribution is the existence of the averages w n , which is determined by the satisfaction of the inequalities (2) . The representation of the posterior by its two parameter exponential form Eq. ( 5 ) gives a codification of the training data in terms of a tractable distribution for the parameters that in conjunction with Eq. ( 1 ) is in fact a distribution for new unlabeled binary strings of data. For fully connected topologies, this is what is usually understood by an equilibrium distribution of a full Boltzmann machine [2] . Illustrative example 1: Supervised XOR The theoretical soundness of the proposed approach is now shown through the XOR logical table, D = {(0, 0, 0), (1, 0, 1), (0, 1, 1), (1, 1, 0)}. Let's consider first a restricted architecture with only two directed arcs that connect two inputs with an output unit, as represented in Figure 2A . The inequalities (2) in this case read, b 2 ≤ 0, -q 0,2 -b 2 ≤ 0, (6) -q 1,2 -b 2 ≤ 0, q 0,2 + q 1,2 + b 2 ≤ 0. There are no values for b 2 , q 0,2 and q 1,2 that satisfy all the inequalities. This is reflected in the maximum entropy distribution, P = 1 Z e -λ1(b2) e -λ2(-q0,2-b2) e -λ3(-q1,2-b2) e -λ4(q0,2+q1,2+b2) (7) which to be a properly normalized product of two-parameter exponential distributions must satisfy the contradictory conditions b 2 < 0, q 0,2 > 0, q 1,2 > 0, |b 2 | < q 0,2 , |b 2 | < q 1,2 , |b 2 | > q 0,2 + q 1,2 . A valid model is however attainable by the addition of a single hidden unit. Consider the architecture represented in Figure 2B . This leads to a two stage constraint satisfaction problem. The first stage is given by the data evaluated on the visible units, q 3,2 f 3 (0, 0) + b 2 ≤ 0, ( 8 ) -q 0,2 -q 3,2 f 3 (1, 0) -b 2 ≤ 0, -q 1,2 -q 3,2 f 3 (0, 1) -b 2 ≤ 0, q 0,2 + q 1,2 + q 3,2 f 3 (1, 1) + b 2 ≤ 0, for which solutions certainly exist. Take for instance, |b 2 | < q 0,2 , |b 2 | < q 1,2 , |b 2 + q 3,2 | > q 0,2 + q 1,2 , (9) f 3 (0, 0) = f 3 (1, 0) = f 3 (0, 1) = 0, f 3 (1, 1) = 1. The second stage is consequently given by, b 3 ≤ 0, ( 10 ) q 0,3 + b 3 ≤ 0, q 1,3 + b 3 ≤ 0, -q 0,3 -q 1,3 -b 3 ≤ 0, for which solutions exist under the conditions b 3 < -C, |b 3 | > |q 0,3 |, |b 3 | > |q 1,3 |, |b 3 | < |q 0,3 + q 1,3 | , where C is a positive constant. Therefore, the maximum entropy distribution for the parameters of the model represented in the Figure 2B exists. Equivalently, this result shows that the classical XOR supervised learning problem can be solved by the proposed MIP feasibility formulation. Illustrative example 2: Unsupervised XOR A model capable of unsupervised learning is sketched in Figure 2C . The system of inequalities should be now extended to consider inputs to nodes x 0 and x 1 , q 3,0 f 3 (0, 0) + b 0 ≤ 0, (11) -q 2,0 -q 3,0 f 3 (1, 0) -b 0 ≤ 0, q 1,0 + q 2,0 + q 3,0 f 3 (0, 1) + b 0 ≤ 0, -q 3,0 f 3 (1, 1) -q 1,0 -b 0 ≤ 0, q 3,1 f 3 (0, 0) + b 1 ≤ 0, q 0,1 + q 2,1 + q 3,1 f 3 (1, 0) + b 1 ≤ 0, -q 2,1 -q 3,1 f 3 (0, 1) -b 1 ≤ 0, -q 0,1 -q 3,1 f 3 (1, 1) -b 1 ≤ 0, which has indeed solutions, as discussed in the following section. Sampling from the posterior distribution The equilibrium posterior distribution of patterns can be sampled by taking an arbitrary solution of the MIP feasibility problem and using it to define the averages w n = 1 αn + β n . The standard deviation of each two-parameter exponential distribution is given by σ n = 1 αn , which can be at first instance assigned to some positive value related to the constant C. If y is an uniform random deviate in the interval [0, 1], then w n = -1 αn ln(1 -y) + β n is a deviate from the two-parameter exponential distribution associated to w n . In this way, the vector of visible units can be sampled in a computation time that is quadratic in the number of total (visible and invisible) units. Algorithm 1 (Pseudo-code for sampling from the maximum entropy posterior.) 1: Initialize: β n from a solution of the MIP feasibility problem and 1 αn ← C ( arbitrary positive real number). 2: Asign value to size (desired number of samples). 3: Generate y τ , (τ = 1, ..., size×N ) uniform and independent random deviates in the [0, 1] interval. 4: for s = 1 to size do 5: w n,s = -1 αn,s ln(1 -y) + β n,s , n = 1, ..., N 6: Generate x s by inserting w s in Eq. (1) 7: end for The step 6 of the algorithm above is made by starting with an inital random binary vector x at each s. The self-consistent system Eq. ( 1 ) is then iterated. No more than 10 iterations are needed to achieve convergence. The sampling procedure Algorithm 1 is now shown through the XOR example. Take an arbitrary solution of the MIP feasibility problem, say f 3 (0, 0) = f 3 (1, 0) = f 3 (0, 1) = 0, f 3 (1, 1) = 1, ( -b 0 = -b 1 = -b 2 = -b 3 = C, q 0,3 = q 1,3 = 3 4 C, q 2,0 = q 0,2 = q 1,2 = q 2,1 = -q 0,1 = -q 1,0 = 2C, q 3,0 = q 3,1 = -q 3,2 = 4C. Due to the rounding operator in Eq. ( 1 ), any C > 0 can work. In the following experiments the value C = 100 is used with sample sizes of 1500. Some of the samples drawn for each C are shown. Figure 1 : 1 Figure 1: Full Boltzmann machine with five units. Figure 2 : 2 Figure 2: Three different architectures for the XOR problem. , [000], [110], [101], [000], [011], [000], [000], [110], [110], [000], [011], [000], [000], [110]..."
}