# text = generalization guarantees for a binary classification framework for two-stage multiple kernel learning we present generalization bounds for the ts-mkl framework for two stage multiple kernel learning.
# sent_id = 0
1	generalization	generalization	NOUN	NN	Number=Sing	0	_	_	start_char=0|end_char=14
2	guarantees	guarantee	NOUN	NNS	Number=Plur	1	_	_	start_char=15|end_char=25
3	for	for	ADP	IN	_	2	_	_	start_char=26|end_char=29
4	a	a	DET	DT	Definite=Ind|PronType=Art	3	_	_	start_char=30|end_char=31
5	binary	binary	ADJ	JJ	Degree=Pos	4	_	_	start_char=32|end_char=38
6	classification	classification	NOUN	NN	Number=Sing	5	_	_	start_char=39|end_char=53
7	framework	framework	NOUN	NN	Number=Sing	6	_	_	start_char=54|end_char=63
8	for	for	ADP	IN	_	7	_	_	start_char=64|end_char=67
9	two	two	NUM	CD	NumForm=Word|NumType=Card	8	_	_	SpaceAfter=No|start_char=68|end_char=71
10	-	-	PUNCT	HYPH	_	9	_	_	SpaceAfter=No|start_char=71|end_char=72
11	stage	stage	NOUN	NN	Number=Sing	10	_	_	start_char=72|end_char=77
12	multiple	multiple	ADJ	JJ	Degree=Pos	11	_	_	start_char=78|end_char=86
13	kernel	kernel	NOUN	NN	Number=Sing	12	_	_	start_char=87|end_char=93
14	learning	learning	NOUN	NN	Number=Sing	13	_	_	start_char=94|end_char=102
15	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	14	_	_	start_char=103|end_char=105
16	present	present	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	15	_	_	start_char=106|end_char=113
17	generalization	generalization	NOUN	NN	Number=Sing	16	_	_	start_char=114|end_char=128
18	bounds	bound	NOUN	NNS	Number=Plur	17	_	_	start_char=129|end_char=135
19	for	for	ADP	IN	_	18	_	_	start_char=136|end_char=139
20	the	the	DET	DT	Definite=Def|PronType=Art	19	_	_	start_char=140|end_char=143
21	ts	ts	NOUN	NN	Number=Sing	20	_	_	SpaceAfter=No|start_char=144|end_char=146
22	-	-	PUNCT	HYPH	_	21	_	_	SpaceAfter=No|start_char=146|end_char=147
23	mkl	mkl	NOUN	NN	Number=Sing	22	_	_	start_char=147|end_char=150
24	framework	framework	NOUN	NN	Number=Sing	23	_	_	start_char=151|end_char=160
25	for	for	ADP	IN	_	24	_	_	start_char=161|end_char=164
26	two	two	NUM	CD	NumForm=Word|NumType=Card	25	_	_	start_char=165|end_char=168
27	stage	stage	NOUN	NN	Number=Sing	26	_	_	start_char=169|end_char=174
28	multiple	multiple	ADJ	JJ	Degree=Pos	27	_	_	start_char=175|end_char=183
29	kernel	kernel	NOUN	NN	Number=Sing	28	_	_	start_char=184|end_char=190
30	learning	learning	NOUN	NN	Number=Sing	29	_	_	SpaceAfter=No|start_char=191|end_char=199
31	.	.	PUNCT	.	_	30	_	_	start_char=199|end_char=200

# text = we also present bounds for sparse kernel learning formulations within the ts-mkl framework.
# sent_id = 1
1	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	0	_	_	start_char=201|end_char=203
2	also	also	ADV	RB	_	1	_	_	start_char=204|end_char=208
3	present	present	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	2	_	_	start_char=209|end_char=216
4	bounds	bound	NOUN	NNS	Number=Plur	3	_	_	start_char=217|end_char=223
5	for	for	ADP	IN	_	4	_	_	start_char=224|end_char=227
6	sparse	sparse	ADJ	JJ	Degree=Pos	5	_	_	start_char=228|end_char=234
7	kernel	kernel	NOUN	NN	Number=Sing	6	_	_	start_char=235|end_char=241
8	learning	learning	NOUN	NN	Number=Sing	7	_	_	start_char=242|end_char=250
9	formulations	formulation	NOUN	NNS	Number=Plur	8	_	_	start_char=251|end_char=263
10	within	within	ADP	IN	_	9	_	_	start_char=264|end_char=270
11	the	the	DET	DT	Definite=Def|PronType=Art	10	_	_	start_char=271|end_char=274
12	ts	ts	NOUN	NN	Number=Sing	11	_	_	SpaceAfter=No|start_char=275|end_char=277
13	-	-	PUNCT	HYPH	_	12	_	_	SpaceAfter=No|start_char=277|end_char=278
14	mkl	mkl	NOUN	NN	Number=Sing	13	_	_	start_char=278|end_char=281
15	framework	framework	NOUN	NN	Number=Sing	14	_	_	SpaceAfter=No|start_char=282|end_char=291
16	.	.	PUNCT	.	_	15	_	_	start_char=291|end_char=292

# text = introduction recently kumar et al [6] proposed a framework for two-stage multiple kernel learning that combines the idea of target kernel alignment and the notion of a good kernel proposed in [1] to learn a good mercer kernel.
# sent_id = 2
1	introduction	introduction	NOUN	NN	Number=Sing	0	_	_	start_char=293|end_char=305
2	recently	recently	ADV	RB	_	1	_	_	start_char=306|end_char=314
3	kumar	kumar	PROPN	NNP	Number=Sing	2	_	_	start_char=315|end_char=320
4	et	et	X	FW	Foreign=Yes	3	_	_	start_char=321|end_char=323
5	al	al	PROPN	NNP	Number=Sing	4	_	_	start_char=324|end_char=326
6	[	[	PUNCT	-LRB-	_	5	_	_	SpaceAfter=No|start_char=327|end_char=328
7	6	6	NUM	CD	NumForm=Digit|NumType=Card	6	_	_	SpaceAfter=No|start_char=328|end_char=329
8	]	]	PUNCT	-RRB-	_	7	_	_	start_char=329|end_char=330
9	proposed	propose	VERB	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	8	_	_	start_char=331|end_char=339
10	a	a	DET	DT	Definite=Ind|PronType=Art	9	_	_	start_char=340|end_char=341
11	framework	framework	NOUN	NN	Number=Sing	10	_	_	start_char=342|end_char=351
12	for	for	ADP	IN	_	11	_	_	start_char=352|end_char=355
13	two	two	NUM	CD	NumForm=Word|NumType=Card	12	_	_	SpaceAfter=No|start_char=356|end_char=359
14	-	-	PUNCT	HYPH	_	13	_	_	SpaceAfter=No|start_char=359|end_char=360
15	stage	stage	NOUN	NN	Number=Sing	14	_	_	start_char=360|end_char=365
16	multiple	multiple	ADJ	JJ	Degree=Pos	15	_	_	start_char=366|end_char=374
17	kernel	kernel	NOUN	NN	Number=Sing	16	_	_	start_char=375|end_char=381
18	learning	learning	NOUN	NN	Number=Sing	17	_	_	start_char=382|end_char=390
19	that	that	PRON	WDT	PronType=Rel	18	_	_	start_char=391|end_char=395
20	combines	combine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	19	_	_	start_char=396|end_char=404
21	the	the	DET	DT	Definite=Def|PronType=Art	20	_	_	start_char=405|end_char=408
22	idea	idea	NOUN	NN	Number=Sing	21	_	_	start_char=409|end_char=413
23	of	of	ADP	IN	_	22	_	_	start_char=414|end_char=416
24	target	target	NOUN	NN	Number=Sing	23	_	_	start_char=417|end_char=423
25	kernel	kernel	NOUN	NN	Number=Sing	24	_	_	start_char=424|end_char=430
26	alignment	alignment	NOUN	NN	Number=Sing	25	_	_	start_char=431|end_char=440
27	and	and	CCONJ	CC	_	26	_	_	start_char=441|end_char=444
28	the	the	DET	DT	Definite=Def|PronType=Art	27	_	_	start_char=445|end_char=448
29	notion	notion	NOUN	NN	Number=Sing	28	_	_	start_char=449|end_char=455
30	of	of	ADP	IN	_	29	_	_	start_char=456|end_char=458
31	a	a	DET	DT	Definite=Ind|PronType=Art	30	_	_	start_char=459|end_char=460
32	good	good	ADJ	JJ	Degree=Pos	31	_	_	start_char=461|end_char=465
33	kernel	kernel	NOUN	NN	Number=Sing	32	_	_	start_char=466|end_char=472
34	proposed	propose	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	33	_	_	start_char=473|end_char=481
35	in	in	ADP	IN	_	34	_	_	start_char=482|end_char=484
36	[	[	PUNCT	-LRB-	_	35	_	_	SpaceAfter=No|start_char=485|end_char=486
37	1	1	NUM	CD	NumForm=Digit|NumType=Card	36	_	_	SpaceAfter=No|start_char=486|end_char=487
38	]	]	PUNCT	-RRB-	_	37	_	_	start_char=487|end_char=488
39	to	to	PART	TO	_	38	_	_	start_char=489|end_char=491
40	learn	learn	VERB	VB	VerbForm=Inf	39	_	_	start_char=492|end_char=497
41	a	a	DET	DT	Definite=Ind|PronType=Art	40	_	_	start_char=498|end_char=499
42	good	good	ADJ	JJ	Degree=Pos	41	_	_	start_char=500|end_char=504
43	mercer	mercer	NOUN	NN	Number=Sing	42	_	_	start_char=505|end_char=511
44	kernel	kernel	NOUN	NN	Number=Sing	43	_	_	SpaceAfter=No|start_char=512|end_char=518
45	.	.	PUNCT	.	_	44	_	_	start_char=518|end_char=519

# text = more specifically, given a finite set of base kernels k 1 , . . . , k p over some common domain x , we wish to find some combination of these base kernels that is well suited to the learning task at hand.
# sent_id = 3
1	more	more	ADV	RBR	Degree=Cmp	0	_	_	start_char=520|end_char=524
2	specifically	specifically	ADV	RB	_	1	_	_	SpaceAfter=No|start_char=525|end_char=537
3	,	,	PUNCT	,	_	2	_	_	start_char=537|end_char=538
4	given	give	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	3	_	_	start_char=539|end_char=544
5	a	a	DET	DT	Definite=Ind|PronType=Art	4	_	_	start_char=545|end_char=546
6	finite	finite	ADJ	JJ	Degree=Pos	5	_	_	start_char=547|end_char=553
7	set	set	NOUN	NN	Number=Sing	6	_	_	start_char=554|end_char=557
8	of	of	ADP	IN	_	7	_	_	start_char=558|end_char=560
9	base	base	NOUN	NN	Number=Sing	8	_	_	start_char=561|end_char=565
10	kernels	kernel	NOUN	NNS	Number=Plur	9	_	_	start_char=566|end_char=573
11	k	k	NOUN	NN	Number=Sing	10	_	_	start_char=574|end_char=575
12	1	1	NUM	CD	NumForm=Digit|NumType=Card	11	_	_	start_char=576|end_char=577
13	,	,	PUNCT	,	_	12	_	_	start_char=578|end_char=579
14	.	.	PUNCT	.	_	13	_	_	start_char=580|end_char=581
15	.	.	PUNCT	.	_	14	_	_	start_char=582|end_char=583
16	.	.	PUNCT	.	_	15	_	_	start_char=584|end_char=585
17	,	,	PUNCT	,	_	16	_	_	start_char=586|end_char=587
18	k	thousand	INTJ	UH	_	17	_	_	start_char=588|end_char=589
19	p	p	NOUN	NN	Number=Sing	18	_	_	start_char=590|end_char=591
20	over	over	ADP	IN	_	19	_	_	start_char=592|end_char=596
21	some	some	DET	DT	PronType=Ind	20	_	_	start_char=597|end_char=601
22	common	common	ADJ	JJ	Degree=Pos	21	_	_	start_char=602|end_char=608
23	domain	domain	NOUN	NN	Number=Sing	22	_	_	start_char=609|end_char=615
24	x	x	NOUN	NN	Number=Sing	23	_	_	start_char=616|end_char=617
25	,	,	PUNCT	,	_	24	_	_	start_char=618|end_char=619
26	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	25	_	_	start_char=620|end_char=622
27	wish	wish	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	26	_	_	start_char=623|end_char=627
28	to	to	PART	TO	_	27	_	_	start_char=628|end_char=630
29	find	find	VERB	VB	VerbForm=Inf	28	_	_	start_char=631|end_char=635
30	some	some	DET	DT	PronType=Ind	29	_	_	start_char=636|end_char=640
31	combination	combination	NOUN	NN	Number=Sing	30	_	_	start_char=641|end_char=652
32	of	of	ADP	IN	_	31	_	_	start_char=653|end_char=655
33	these	this	DET	DT	Number=Plur|PronType=Dem	32	_	_	start_char=656|end_char=661
34	base	base	NOUN	NN	Number=Sing	33	_	_	start_char=662|end_char=666
35	kernels	kernel	NOUN	NNS	Number=Plur	34	_	_	start_char=667|end_char=674
36	that	that	PRON	WDT	PronType=Rel	35	_	_	start_char=675|end_char=679
37	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	36	_	_	start_char=680|end_char=682
38	well	well	ADV	RB	Degree=Pos	37	_	_	start_char=683|end_char=687
39	suited	suit	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	38	_	_	start_char=688|end_char=694
40	to	to	ADP	IN	_	39	_	_	start_char=695|end_char=697
41	the	the	DET	DT	Definite=Def|PronType=Art	40	_	_	start_char=698|end_char=701
42	learning	learning	NOUN	NN	Number=Sing	41	_	_	start_char=702|end_char=710
43	task	task	NOUN	NN	Number=Sing	42	_	_	start_char=711|end_char=715
44	at	at	ADP	IN	_	43	_	_	start_char=716|end_char=718
45	hand	hand	NOUN	NN	Number=Sing	44	_	_	SpaceAfter=No|start_char=719|end_char=723
46	.	.	PUNCT	.	_	45	_	_	start_char=723|end_char=724

# text = the paper considers learning a positive linear combination of the kernels k µ = p i=1 µ i k i for some µ ∈ r p , µ ≥ 0.
# sent_id = 4
1	the	the	DET	DT	Definite=Def|PronType=Art	0	_	_	start_char=725|end_char=728
2	paper	paper	NOUN	NN	Number=Sing	1	_	_	start_char=729|end_char=734
3	considers	consider	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	_	_	start_char=735|end_char=744
4	learning	learn	VERB	VBG	VerbForm=Ger	3	_	_	start_char=745|end_char=753
5	a	a	DET	DT	Definite=Ind|PronType=Art	4	_	_	start_char=754|end_char=755
6	positive	positive	ADJ	JJ	Degree=Pos	5	_	_	start_char=756|end_char=764
7	linear	linear	ADJ	JJ	Degree=Pos	6	_	_	start_char=765|end_char=771
8	combination	combination	NOUN	NN	Number=Sing	7	_	_	start_char=772|end_char=783
9	of	of	ADP	IN	_	8	_	_	start_char=784|end_char=786
10	the	the	DET	DT	Definite=Def|PronType=Art	9	_	_	start_char=787|end_char=790
11	kernels	kernel	NOUN	NNS	Number=Plur	10	_	_	start_char=791|end_char=798
12	k	thousand	X	FW	_	11	_	_	start_char=799|end_char=800
13	µ	µ	NOUN	NN	Number=Sing	12	_	_	start_char=801|end_char=802
14	=	=	SYM	SYM	_	13	_	_	start_char=803|end_char=804
15	p	p	NOUN	NN	Number=Sing	14	_	_	start_char=805|end_char=806
16	i=	i=	NOUN	NN	Number=Sing	15	_	_	SpaceAfter=No|start_char=807|end_char=809
17	1	1	NUM	CD	NumForm=Digit|NumType=Card	16	_	_	start_char=809|end_char=810
18	µ	µ	NOUN	NN	Number=Sing	17	_	_	start_char=811|end_char=812
19	i	I	PRON	PRP	Case=Nom|Number=Sing|Person=1|PronType=Prs	18	_	_	start_char=813|end_char=814
20	k	thousand	INTJ	UH	_	19	_	_	start_char=815|end_char=816
21	i	I	PRON	PRP	Case=Nom|Number=Sing|Person=1|PronType=Prs	20	_	_	start_char=817|end_char=818
22	for	for	ADP	IN	_	21	_	_	start_char=819|end_char=822
23	some	some	DET	DT	PronType=Ind	22	_	_	start_char=823|end_char=827
24	µ	µ	PROPN	NNP	Number=Sing	23	_	_	start_char=828|end_char=829
25	∈	∈	NOUN	NN	Number=Sing	24	_	_	start_char=830|end_char=831
26	r	be	X	AFX	_	25	_	_	start_char=832|end_char=833
27	p	p	NOUN	NN	Number=Sing	26	_	_	start_char=834|end_char=835
28	,	,	PUNCT	,	_	27	_	_	start_char=836|end_char=837
29	µ	µ	NOUN	NN	Number=Sing	28	_	_	start_char=838|end_char=839
30	≥	≥	SYM	SYM	_	29	_	_	start_char=840|end_char=841
31	0	0	NUM	CD	NumForm=Digit|NumType=Card	30	_	_	SpaceAfter=No|start_char=842|end_char=843
32	.	.	PUNCT	.	_	31	_	_	start_char=843|end_char=844

# text = it is assumed that the kernels are uniformly bounded i.e. for all x 1 , x 2 ∈ x and i = 1 . . . p, we have k i (x 1 , x 2 ) ≤ κ 2 i for some κ i >
# sent_id = 5
1	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	0	_	_	start_char=845|end_char=847
2	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	1	_	_	start_char=848|end_char=850
3	assumed	assume	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	2	_	_	start_char=851|end_char=858
4	that	that	SCONJ	IN	_	3	_	_	start_char=859|end_char=863
5	the	the	DET	DT	Definite=Def|PronType=Art	4	_	_	start_char=864|end_char=867
6	kernels	kernel	NOUN	NNS	Number=Plur	5	_	_	start_char=868|end_char=875
7	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	6	_	_	start_char=876|end_char=879
8	uniformly	uniformly	ADV	RB	_	7	_	_	start_char=880|end_char=889
9	bounded	bound	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	8	_	_	start_char=890|end_char=897
10	i.e.	i.e.	ADV	FW	Abbr=Yes	9	_	_	start_char=898|end_char=902
11	for	for	ADP	IN	_	10	_	_	start_char=903|end_char=906
12	all	all	DET	DT	PronType=Tot	11	_	_	start_char=907|end_char=910
13	x	x	NOUN	NN	Number=Sing	12	_	_	start_char=911|end_char=912
14	1	1	NUM	CD	NumForm=Digit|NumType=Card	13	_	_	start_char=913|end_char=914
15	,	,	PUNCT	,	_	14	_	_	start_char=915|end_char=916
16	x	x	NOUN	NN	Number=Sing	15	_	_	start_char=917|end_char=918
17	2	2	NUM	CD	NumForm=Digit|NumType=Card	16	_	_	start_char=919|end_char=920
18	∈	∈	NOUN	NN	Number=Sing	17	_	_	start_char=921|end_char=922
19	x	x	NOUN	NN	Number=Sing	18	_	_	start_char=923|end_char=924
20	and	and	CCONJ	CC	_	19	_	_	start_char=925|end_char=928
21	i	i	NOUN	NN	Number=Sing	20	_	_	start_char=929|end_char=930
22	=	=	SYM	SYM	_	21	_	_	start_char=931|end_char=932
23	1	1	NUM	CD	NumForm=Digit|NumType=Card	22	_	_	start_char=933|end_char=934
24	.	.	PUNCT	.	_	23	_	_	start_char=935|end_char=936
25	.	.	PUNCT	.	_	24	_	_	start_char=937|end_char=938
26	.	.	PUNCT	.	_	25	_	_	start_char=939|end_char=940
27	p	p	NOUN	NN	Number=Sing	26	_	_	SpaceAfter=No|start_char=941|end_char=942
28	,	,	PUNCT	,	_	27	_	_	start_char=942|end_char=943
29	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	28	_	_	start_char=944|end_char=946
30	have	have	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	29	_	_	start_char=947|end_char=951
31	k	k	NOUN	NN	Number=Sing	30	_	_	start_char=952|end_char=953
32	i	i	NOUN	NN	Number=Sing	31	_	_	start_char=954|end_char=955
33	(	(	PUNCT	-LRB-	_	32	_	_	SpaceAfter=No|start_char=956|end_char=957
34	x	x	NOUN	NN	Number=Sing	33	_	_	start_char=957|end_char=958
35	1	1	NUM	CD	NumForm=Digit|NumType=Card	34	_	_	start_char=959|end_char=960
36	,	,	PUNCT	,	_	35	_	_	start_char=961|end_char=962
37	x	x	NOUN	NN	Number=Sing	36	_	_	start_char=963|end_char=964
38	2	2	NUM	CD	NumForm=Digit|NumType=Card	37	_	_	start_char=965|end_char=966
39	)	)	PUNCT	-RRB-	_	38	_	_	start_char=967|end_char=968
40	≤	≤	NOUN	NN	Number=Sing	39	_	_	start_char=969|end_char=970
41	κ	κ	NOUN	NN	Number=Sing	40	_	_	start_char=971|end_char=972
42	2	2	NUM	CD	NumForm=Digit|NumType=Card	41	_	_	start_char=973|end_char=974
43	i	I	PRON	PRP	Case=Nom|Number=Sing|Person=1|PronType=Prs	42	_	_	start_char=975|end_char=976
44	for	for	ADP	IN	_	43	_	_	start_char=977|end_char=980
45	some	some	DET	DT	PronType=Ind	44	_	_	start_char=981|end_char=985
46	κ	κ	NOUN	NN	Number=Sing	45	_	_	start_char=986|end_char=987
47	i	i	NOUN	NN	Number=Sing	46	_	_	start_char=988|end_char=989
48	>	>	PUNCT	-RRB-	_	47	_	_	start_char=990|end_char=991

# text = 0. let κ = κ 2 1 , . . . , κ 2 p ∈ r p . note that κ ≥ 0. also note that for any µ and any x 1 , x 2 ∈ x , we have k µ (x 1 , x 2 ) ≤ µ, κ . the notion of suitability used in [6] is that of kernel-goodness first proposed in [1] for classification tasks.
# sent_id = 6
1	0	0	NUM	LS	NumForm=Digit|NumType=Card	0	_	_	SpaceAfter=No|start_char=992|end_char=993
2	.	.	PUNCT	.	_	1	_	_	start_char=993|end_char=994
3	let	let	VERB	VB	Mood=Imp|VerbForm=Fin	2	_	_	start_char=995|end_char=998
4	κ	κ	NOUN	NN	Number=Sing	3	_	_	start_char=999|end_char=1000
5	=	=	SYM	SYM	_	4	_	_	start_char=1001|end_char=1002
6	κ	κ	NOUN	NN	Number=Sing	5	_	_	start_char=1003|end_char=1004
7	2	2	NUM	CD	NumForm=Digit|NumType=Card	6	_	_	start_char=1005|end_char=1006
8	1	1	NUM	CD	NumForm=Digit|NumType=Card	7	_	_	start_char=1007|end_char=1008
9	,	,	PUNCT	,	_	8	_	_	start_char=1009|end_char=1010
10	.	.	PUNCT	.	_	9	_	_	start_char=1011|end_char=1012
11	.	.	PUNCT	.	_	10	_	_	start_char=1013|end_char=1014
12	.	.	PUNCT	.	_	11	_	_	start_char=1015|end_char=1016
13	,	,	PUNCT	,	_	12	_	_	start_char=1017|end_char=1018
14	κ	κ	NOUN	NN	Number=Sing	13	_	_	start_char=1019|end_char=1020
15	2	2	NUM	CD	NumForm=Digit|NumType=Card	14	_	_	start_char=1021|end_char=1022
16	p	p	NOUN	NN	Number=Sing	15	_	_	start_char=1023|end_char=1024
17	∈	∈	NOUN	NN	Number=Sing	16	_	_	start_char=1025|end_char=1026
18	r	be	NOUN	NN	Number=Sing	17	_	_	start_char=1027|end_char=1028
19	p	p	NOUN	NN	Number=Sing	18	_	_	start_char=1029|end_char=1030
20	.	.	PUNCT	.	_	19	_	_	start_char=1031|end_char=1032
21	note	note	NOUN	NN	Number=Sing	20	_	_	start_char=1033|end_char=1037
22	that	that	SCONJ	IN	_	21	_	_	start_char=1038|end_char=1042
23	κ	κ	NOUN	NN	Number=Sing	22	_	_	start_char=1043|end_char=1044
24	≥	≥	NOUN	NN	Number=Sing	23	_	_	start_char=1045|end_char=1046
25	0	0	NUM	CD	NumForm=Digit|NumType=Card	24	_	_	SpaceAfter=No|start_char=1047|end_char=1048
26	.	.	PUNCT	.	_	25	_	_	start_char=1048|end_char=1049
27	also	also	ADV	RB	_	26	_	_	start_char=1050|end_char=1054
28	note	note	VERB	VB	Mood=Imp|VerbForm=Fin	27	_	_	start_char=1055|end_char=1059
29	that	that	SCONJ	IN	_	28	_	_	start_char=1060|end_char=1064
30	for	for	ADP	IN	_	29	_	_	start_char=1065|end_char=1068
31	any	any	DET	DT	PronType=Ind	30	_	_	start_char=1069|end_char=1072
32	µ	µ	NOUN	NN	Number=Sing	31	_	_	start_char=1073|end_char=1074
33	and	and	CCONJ	CC	_	32	_	_	start_char=1075|end_char=1078
34	any	any	DET	DT	PronType=Ind	33	_	_	start_char=1079|end_char=1082
35	x	x	NOUN	NN	Number=Sing	34	_	_	start_char=1083|end_char=1084
36	1	1	NUM	CD	NumForm=Digit|NumType=Card	35	_	_	start_char=1085|end_char=1086
37	,	,	PUNCT	,	_	36	_	_	start_char=1087|end_char=1088
38	x	x	NOUN	NN	Number=Sing	37	_	_	start_char=1089|end_char=1090
39	2	2	NUM	CD	NumForm=Digit|NumType=Card	38	_	_	start_char=1091|end_char=1092
40	∈	∈	NOUN	NN	Number=Sing	39	_	_	start_char=1093|end_char=1094
41	x	x	NOUN	NN	Number=Sing	40	_	_	start_char=1095|end_char=1096
42	,	,	PUNCT	,	_	41	_	_	start_char=1097|end_char=1098
43	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	42	_	_	start_char=1099|end_char=1101
44	have	have	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	43	_	_	start_char=1102|end_char=1106
45	k	k	NOUN	NN	Number=Sing	44	_	_	start_char=1107|end_char=1108
46	µ	µ	NOUN	NN	Number=Sing	45	_	_	start_char=1109|end_char=1110
47	(	(	PUNCT	-LRB-	_	46	_	_	SpaceAfter=No|start_char=1111|end_char=1112
48	x	x	NOUN	NN	Number=Sing	47	_	_	start_char=1112|end_char=1113
49	1	1	NUM	CD	NumForm=Digit|NumType=Card	48	_	_	start_char=1114|end_char=1115
50	,	,	PUNCT	,	_	49	_	_	start_char=1116|end_char=1117
51	x	x	NOUN	NN	Number=Sing	50	_	_	start_char=1118|end_char=1119
52	2	2	NUM	CD	NumForm=Digit|NumType=Card	51	_	_	start_char=1120|end_char=1121
53	)	)	PUNCT	-RRB-	_	52	_	_	start_char=1122|end_char=1123
54	≤	≤	NOUN	NN	Number=Sing	53	_	_	start_char=1124|end_char=1125
55	µ	µ	NOUN	NN	Number=Sing	54	_	_	SpaceAfter=No|start_char=1126|end_char=1127
56	,	,	PUNCT	,	_	55	_	_	start_char=1127|end_char=1128
57	κ	κ	NOUN	NN	Number=Sing	56	_	_	start_char=1129|end_char=1130
58	.	.	PUNCT	.	_	57	_	_	start_char=1131|end_char=1132
59	the	the	DET	DT	Definite=Def|PronType=Art	58	_	_	start_char=1133|end_char=1136
60	notion	notion	NOUN	NN	Number=Sing	59	_	_	start_char=1137|end_char=1143
61	of	of	ADP	IN	_	60	_	_	start_char=1144|end_char=1146
62	suitability	suitability	NOUN	NN	Number=Sing	61	_	_	start_char=1147|end_char=1158
63	used	use	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	62	_	_	start_char=1159|end_char=1163
64	in	in	ADP	IN	_	63	_	_	start_char=1164|end_char=1166
65	[	[	PUNCT	-LRB-	_	64	_	_	SpaceAfter=No|start_char=1167|end_char=1168
66	6	6	NUM	CD	NumForm=Digit|NumType=Card	65	_	_	SpaceAfter=No|start_char=1168|end_char=1169
67	]	]	PUNCT	-RRB-	_	66	_	_	start_char=1169|end_char=1170
68	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	67	_	_	start_char=1171|end_char=1173
69	that	that	PRON	DT	Number=Sing|PronType=Dem	68	_	_	start_char=1174|end_char=1178
70	of	of	ADP	IN	_	69	_	_	start_char=1179|end_char=1181
71	kernel	kernel	NOUN	NN	Number=Sing	70	_	_	SpaceAfter=No|start_char=1182|end_char=1188
72	-	-	PUNCT	HYPH	_	71	_	_	SpaceAfter=No|start_char=1188|end_char=1189
73	goodness	goodness	NOUN	NN	Number=Sing	72	_	_	start_char=1189|end_char=1197
74	first	first	ADV	RB	Degree=Pos|NumForm=Word|NumType=Ord	73	_	_	start_char=1198|end_char=1203
75	proposed	propose	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	74	_	_	start_char=1204|end_char=1212
76	in	in	ADP	IN	_	75	_	_	start_char=1213|end_char=1215
77	[	[	PUNCT	-LRB-	_	76	_	_	SpaceAfter=No|start_char=1216|end_char=1217
78	1	1	NUM	CD	NumForm=Digit|NumType=Card	77	_	_	SpaceAfter=No|start_char=1217|end_char=1218
79	]	]	PUNCT	-RRB-	_	78	_	_	start_char=1218|end_char=1219
80	for	for	ADP	IN	_	79	_	_	start_char=1220|end_char=1223
81	classification	classification	NOUN	NN	Number=Sing	80	_	_	start_char=1224|end_char=1238
82	tasks	task	NOUN	NNS	Number=Plur	81	_	_	SpaceAfter=No|start_char=1239|end_char=1244
83	.	.	PUNCT	.	_	82	_	_	start_char=1244|end_char=1245

# text = for sake of simplicity, we shall henceforth consider only binary classification tasks, the extension to multi-class classification tasks being straightforward.
# sent_id = 7
1	for	for	ADP	IN	_	0	_	_	start_char=1246|end_char=1249
2	sake	sake	NOUN	NN	Number=Sing	1	_	_	start_char=1250|end_char=1254
3	of	of	ADP	IN	_	2	_	_	start_char=1255|end_char=1257
4	simplicity	simplicity	NOUN	NN	Number=Sing	3	_	_	SpaceAfter=No|start_char=1258|end_char=1268
5	,	,	PUNCT	,	_	4	_	_	start_char=1268|end_char=1269
6	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	5	_	_	start_char=1270|end_char=1272
7	shall	shall	AUX	MD	VerbForm=Fin	6	_	_	start_char=1273|end_char=1278
8	henceforth	henceforth	ADV	RB	_	7	_	_	start_char=1279|end_char=1289
9	consider	consider	VERB	VB	VerbForm=Inf	8	_	_	start_char=1290|end_char=1298
10	only	only	ADV	RB	_	9	_	_	start_char=1299|end_char=1303
11	binary	binary	ADJ	JJ	Degree=Pos	10	_	_	start_char=1304|end_char=1310
12	classification	classification	NOUN	NN	Number=Sing	11	_	_	start_char=1311|end_char=1325
13	tasks	task	NOUN	NNS	Number=Plur	12	_	_	SpaceAfter=No|start_char=1326|end_char=1331
14	,	,	PUNCT	,	_	13	_	_	start_char=1331|end_char=1332
15	the	the	DET	DT	Definite=Def|PronType=Art	14	_	_	start_char=1333|end_char=1336
16	extension	extension	NOUN	NN	Number=Sing	15	_	_	start_char=1337|end_char=1346
17	to	to	ADP	IN	_	16	_	_	start_char=1347|end_char=1349
18	multi	multi	ADJ	JJ	Degree=Pos	17	_	_	SpaceAfter=No|start_char=1350|end_char=1355
19	-	-	PUNCT	HYPH	_	18	_	_	SpaceAfter=No|start_char=1355|end_char=1356
20	class	class	NOUN	NN	Number=Sing	19	_	_	start_char=1356|end_char=1361
21	classification	classification	NOUN	NN	Number=Sing	20	_	_	start_char=1362|end_char=1376
22	tasks	task	NOUN	NNS	Number=Plur	21	_	_	start_char=1377|end_char=1382
23	being	be	AUX	VBG	Tense=Pres|VerbForm=Part	22	_	_	start_char=1383|end_char=1388
24	straightforward	straightforward	ADJ	JJ	Degree=Pos	23	_	_	SpaceAfter=No|start_char=1389|end_char=1404
25	.	.	PUNCT	.	_	24	_	_	start_char=1404|end_char=1405

# text = we present below the notion of goodness used in [6] . for any binary classification task over a domain x characterized by a distribution d over x × {±1}, a mercer kernel k : x × x → r with associated reproducing kernel hilbert space h k and feature map φ k : x → h k is said to be (ǫ, γ)-kernel good if there exists a unit norm vector w ∈ h k such that w h k = 1 and the following holds e (x,y)∼d 1 - y w, φ(x) γ + ≤ ǫ 2 learning a good kernel the key idea behind [6] is to try and learn a positive linear combination of kernels that is good according to the notion presented above.
# sent_id = 8
1	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	0	_	_	start_char=1406|end_char=1408
2	present	present	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	1	_	_	start_char=1409|end_char=1416
3	below	below	ADP	IN	_	2	_	_	start_char=1417|end_char=1422
4	the	the	DET	DT	Definite=Def|PronType=Art	3	_	_	start_char=1423|end_char=1426
5	notion	notion	NOUN	NN	Number=Sing	4	_	_	start_char=1427|end_char=1433
6	of	of	ADP	IN	_	5	_	_	start_char=1434|end_char=1436
7	goodness	goodness	NOUN	NN	Number=Sing	6	_	_	start_char=1437|end_char=1445
8	used	use	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	7	_	_	start_char=1446|end_char=1450
9	in	in	ADP	IN	_	8	_	_	start_char=1451|end_char=1453
10	[	[	PUNCT	-LRB-	_	9	_	_	SpaceAfter=No|start_char=1454|end_char=1455
11	6	6	NUM	CD	NumForm=Digit|NumType=Card	10	_	_	SpaceAfter=No|start_char=1455|end_char=1456
12	]	]	PUNCT	-RRB-	_	11	_	_	start_char=1456|end_char=1457
13	.	.	PUNCT	.	_	12	_	_	start_char=1458|end_char=1459
14	for	for	ADP	IN	_	13	_	_	start_char=1460|end_char=1463
15	any	any	DET	DT	PronType=Ind	14	_	_	start_char=1464|end_char=1467
16	binary	binary	ADJ	JJ	Degree=Pos	15	_	_	start_char=1468|end_char=1474
17	classification	classification	NOUN	NN	Number=Sing	16	_	_	start_char=1475|end_char=1489
18	task	task	NOUN	NN	Number=Sing	17	_	_	start_char=1490|end_char=1494
19	over	over	ADP	IN	_	18	_	_	start_char=1495|end_char=1499
20	a	a	DET	DT	Definite=Ind|PronType=Art	19	_	_	start_char=1500|end_char=1501
21	domain	domain	NOUN	NN	Number=Sing	20	_	_	start_char=1502|end_char=1508
22	x	x	NOUN	NN	Number=Sing	21	_	_	start_char=1509|end_char=1510
23	characterized	characterize	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	22	_	_	start_char=1511|end_char=1524
24	by	by	ADP	IN	_	23	_	_	start_char=1525|end_char=1527
25	a	a	DET	DT	Definite=Ind|PronType=Art	24	_	_	start_char=1528|end_char=1529
26	distribution	distribution	NOUN	NN	Number=Sing	25	_	_	start_char=1530|end_char=1542
27	d	would	NOUN	NN	Number=Sing	26	_	_	start_char=1543|end_char=1544
28	over	over	ADP	IN	_	27	_	_	start_char=1545|end_char=1549
29	x	x	NOUN	NN	Number=Sing	28	_	_	start_char=1550|end_char=1551
30	×	×	NOUN	NN	Number=Sing	29	_	_	start_char=1552|end_char=1553
31	{	{	SYM	SYM	_	30	_	_	SpaceAfter=No|start_char=1554|end_char=1555
32	±1	±1	NUM	CD	NumForm=Digit|NumType=Card	31	_	_	SpaceAfter=No|start_char=1555|end_char=1557
33	}	}	NOUN	NN	Number=Sing	32	_	_	SpaceAfter=No|start_char=1557|end_char=1558
34	,	,	PUNCT	,	_	33	_	_	start_char=1558|end_char=1559
35	a	a	DET	DT	Definite=Ind|PronType=Art	34	_	_	start_char=1560|end_char=1561
36	mercer	mercer	PROPN	NNP	Number=Sing	35	_	_	start_char=1562|end_char=1568
37	kernel	kernel	NOUN	NN	Number=Sing	36	_	_	start_char=1569|end_char=1575
38	k	k	NOUN	NN	Number=Sing	37	_	_	start_char=1576|end_char=1577
39	:	:	PUNCT	:	_	38	_	_	start_char=1578|end_char=1579
40	x	x	NOUN	NN	Number=Sing	39	_	_	start_char=1580|end_char=1581
41	×	×	NOUN	NN	Number=Sing	40	_	_	start_char=1582|end_char=1583
42	x	x	NOUN	NN	Number=Sing	41	_	_	start_char=1584|end_char=1585
43	→	→	SYM	SYM	_	42	_	_	start_char=1586|end_char=1587
44	r	be	X	AFX	_	43	_	_	start_char=1588|end_char=1589
45	with	with	ADP	IN	_	44	_	_	start_char=1590|end_char=1594
46	associated	associate	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	45	_	_	start_char=1595|end_char=1605
47	reproducing	reproduce	VERB	VBG	VerbForm=Ger	46	_	_	start_char=1606|end_char=1617
48	kernel	kernel	NOUN	NN	Number=Sing	47	_	_	start_char=1618|end_char=1624
49	hilbert	hilbert	NOUN	NN	Number=Sing	48	_	_	start_char=1625|end_char=1632
50	space	space	NOUN	NN	Number=Sing	49	_	_	start_char=1633|end_char=1638
51	h	h	X	FW	_	50	_	_	start_char=1639|end_char=1640
52	k	thousand	X	FW	_	51	_	_	start_char=1641|end_char=1642
53	and	and	CCONJ	CC	_	52	_	_	start_char=1643|end_char=1646
54	feature	feature	NOUN	NN	Number=Sing	53	_	_	start_char=1647|end_char=1654
55	map	map	NOUN	NN	Number=Sing	54	_	_	start_char=1655|end_char=1658
56	φ	φ	NOUN	NN	Number=Sing	55	_	_	start_char=1659|end_char=1660
57	k	k	NOUN	NN	Number=Sing	56	_	_	start_char=1661|end_char=1662
58	:	:	PUNCT	:	_	57	_	_	start_char=1663|end_char=1664
59	x	x	NOUN	NN	Number=Sing	58	_	_	start_char=1665|end_char=1666
60	→	→	SYM	SYM	_	59	_	_	start_char=1667|end_char=1668
61	h	h	NOUN	NN	Number=Sing	60	_	_	start_char=1669|end_char=1670
62	k	k	NOUN	NN	Number=Sing	61	_	_	start_char=1671|end_char=1672
63	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	62	_	_	start_char=1673|end_char=1675
64	said	say	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	63	_	_	start_char=1676|end_char=1680
65	to	to	PART	TO	_	64	_	_	start_char=1681|end_char=1683
66	be	be	AUX	VB	VerbForm=Inf	65	_	_	start_char=1684|end_char=1686
67	(	(	PUNCT	-LRB-	_	66	_	_	SpaceAfter=No|start_char=1687|end_char=1688
68	ǫ	ǫ	INTJ	UH	_	67	_	_	SpaceAfter=No|start_char=1688|end_char=1689
69	,	,	PUNCT	,	_	68	_	_	start_char=1689|end_char=1690
70	γ	γ	NOUN	NN	Number=Sing	69	_	_	SpaceAfter=No|start_char=1691|end_char=1692
71	)	)	PUNCT	-RRB-	_	70	_	_	SpaceAfter=No|start_char=1692|end_char=1693
72	-	-	PUNCT	HYPH	_	71	_	_	SpaceAfter=No|start_char=1693|end_char=1694
73	kernel	kernel	NOUN	NN	Number=Sing	72	_	_	start_char=1694|end_char=1700
74	good	good	ADJ	JJ	Degree=Pos	73	_	_	start_char=1701|end_char=1705
75	if	if	SCONJ	IN	_	74	_	_	start_char=1706|end_char=1708
76	there	there	PRON	EX	_	75	_	_	start_char=1709|end_char=1714
77	exists	exist	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	76	_	_	start_char=1715|end_char=1721
78	a	a	DET	DT	Definite=Ind|PronType=Art	77	_	_	start_char=1722|end_char=1723
79	unit	unit	NOUN	NN	Number=Sing	78	_	_	start_char=1724|end_char=1728
80	norm	norm	NOUN	NN	Number=Sing	79	_	_	start_char=1729|end_char=1733
81	vector	vector	NOUN	NN	Number=Sing	80	_	_	start_char=1734|end_char=1740
82	w	with	ADP	IN	_	81	_	_	start_char=1741|end_char=1742
83	∈	∈	NOUN	NN	Number=Sing	82	_	_	start_char=1743|end_char=1744
84	h	h	NOUN	NN	Number=Sing	83	_	_	start_char=1745|end_char=1746
85	k	thousand	X	FW	_	84	_	_	start_char=1747|end_char=1748
86	such	such	ADJ	JJ	Degree=Pos	85	_	_	start_char=1749|end_char=1753
87	that	that	PRON	DT	Number=Sing|PronType=Rel	86	_	_	start_char=1754|end_char=1758
88	w	with	ADP	IN	Abbr=Yes	87	_	_	start_char=1759|end_char=1760
89	h	h	NOUN	NN	Number=Sing	88	_	_	start_char=1761|end_char=1762
90	k	k	NOUN	NN	Number=Sing	89	_	_	start_char=1763|end_char=1764
91	=	=	SYM	SYM	_	90	_	_	start_char=1765|end_char=1766
92	1	1	NUM	CD	NumForm=Digit|NumType=Card	91	_	_	start_char=1767|end_char=1768
93	and	and	CCONJ	CC	_	92	_	_	start_char=1769|end_char=1772
94	the	the	DET	DT	Definite=Def|PronType=Art	93	_	_	start_char=1773|end_char=1776
95	following	follow	NOUN	NN	Number=Sing	94	_	_	start_char=1777|end_char=1786
96	holds	hold	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	95	_	_	start_char=1787|end_char=1792
97	e	e	NOUN	NN	Number=Sing	96	_	_	start_char=1793|end_char=1794
98	(	(	PUNCT	-LRB-	_	97	_	_	SpaceAfter=No|start_char=1795|end_char=1796
99	x	x	NOUN	NN	Number=Sing	98	_	_	SpaceAfter=No|start_char=1796|end_char=1797
100	,	,	PUNCT	,	_	99	_	_	SpaceAfter=No|start_char=1797|end_char=1798
101	y	y	NOUN	NN	Number=Sing	100	_	_	SpaceAfter=No|start_char=1798|end_char=1799
102	)	)	PUNCT	-RRB-	_	101	_	_	SpaceAfter=No|start_char=1799|end_char=1800
103	∼d	∼d	NOUN	NN	Number=Sing	102	_	_	start_char=1800|end_char=1802
104	1	1	NUM	CD	NumForm=Digit|NumType=Card	103	_	_	start_char=1803|end_char=1804
105	-	-	PUNCT	HYPH	_	104	_	_	start_char=1805|end_char=1806
106	y	y	NOUN	NN	Number=Sing	105	_	_	start_char=1807|end_char=1808
107	w	with	X	FW	_	106	_	_	SpaceAfter=No|start_char=1809|end_char=1810
108	,	,	PUNCT	,	_	107	_	_	start_char=1810|end_char=1811
109	φ(	φ(	CCONJ	CC	_	108	_	_	SpaceAfter=No|start_char=1812|end_char=1814
110	x	x	NOUN	NN	Number=Sing	109	_	_	SpaceAfter=No|start_char=1814|end_char=1815
111	)	)	PUNCT	-RRB-	_	110	_	_	start_char=1815|end_char=1816
112	γ	γ	NOUN	NN	Number=Sing	111	_	_	start_char=1817|end_char=1818
113	+	+	SYM	SYM	_	112	_	_	start_char=1819|end_char=1820
114	≤	≤	NOUN	NN	Number=Sing	113	_	_	start_char=1821|end_char=1822
115	ǫ	ǫ	SYM	SYM	_	114	_	_	start_char=1823|end_char=1824
116	2	2	NUM	CD	NumForm=Digit|NumType=Card	115	_	_	start_char=1825|end_char=1826
117	learning	learn	VERB	VBG	VerbForm=Ger	116	_	_	start_char=1827|end_char=1835
118	a	a	DET	DT	Definite=Ind|PronType=Art	117	_	_	start_char=1836|end_char=1837
119	good	good	ADJ	JJ	Degree=Pos	118	_	_	start_char=1838|end_char=1842
120	kernel	kernel	NOUN	NN	Number=Sing	119	_	_	start_char=1843|end_char=1849
121	the	the	DET	DT	Definite=Def|PronType=Art	120	_	_	start_char=1850|end_char=1853
122	key	key	ADJ	JJ	Degree=Pos	121	_	_	start_char=1854|end_char=1857
123	idea	idea	NOUN	NN	Number=Sing	122	_	_	start_char=1858|end_char=1862
124	behind	behind	ADP	IN	_	123	_	_	start_char=1863|end_char=1869
125	[	[	PUNCT	-LRB-	_	124	_	_	SpaceAfter=No|start_char=1870|end_char=1871
126	6	6	NUM	CD	NumForm=Digit|NumType=Card	125	_	_	SpaceAfter=No|start_char=1871|end_char=1872
127	]	]	PUNCT	-RRB-	_	126	_	_	start_char=1872|end_char=1873
128	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	127	_	_	start_char=1874|end_char=1876
129	to	to	PART	TO	_	128	_	_	start_char=1877|end_char=1879
130	try	try	VERB	VB	VerbForm=Inf	129	_	_	start_char=1880|end_char=1883
131	and	and	CCONJ	CC	_	130	_	_	start_char=1884|end_char=1887
132	learn	learn	VERB	VB	VerbForm=Inf	131	_	_	start_char=1888|end_char=1893
133	a	a	DET	DT	Definite=Ind|PronType=Art	132	_	_	start_char=1894|end_char=1895
134	positive	positive	ADJ	JJ	Degree=Pos	133	_	_	start_char=1896|end_char=1904
135	linear	linear	ADJ	JJ	Degree=Pos	134	_	_	start_char=1905|end_char=1911
136	combination	combination	NOUN	NN	Number=Sing	135	_	_	start_char=1912|end_char=1923
137	of	of	ADP	IN	_	136	_	_	start_char=1924|end_char=1926
138	kernels	kernel	NOUN	NNS	Number=Plur	137	_	_	start_char=1927|end_char=1934
139	that	that	PRON	WDT	PronType=Rel	138	_	_	start_char=1935|end_char=1939
140	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	139	_	_	start_char=1940|end_char=1942
141	good	good	ADJ	JJ	Degree=Pos	140	_	_	start_char=1943|end_char=1947
142	according	accord	VERB	VBG	ExtPos=ADP|Tense=Pres|VerbForm=Part	141	_	_	start_char=1948|end_char=1957
143	to	to	ADP	IN	_	142	_	_	start_char=1958|end_char=1960
144	the	the	DET	DT	Definite=Def|PronType=Art	143	_	_	start_char=1961|end_char=1964
145	notion	notion	NOUN	NN	Number=Sing	144	_	_	start_char=1965|end_char=1971
146	presented	present	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	145	_	_	start_char=1972|end_char=1981
147	above	above	ADV	RB	_	146	_	_	SpaceAfter=No|start_char=1982|end_char=1987
148	.	.	PUNCT	.	_	147	_	_	start_char=1987|end_char=1988

# text = we define the risk functional r(•) : r p → r + as follows: r(µ) := e (x,y),(x ′ ,y ′ )∼d×d 1 -yy ′ k µ (x, x ′ ) + a combination µ will be said to be ǫ-combination good if r(µ) ≤ ǫ. the quantity r(µ) is of interest since an application of jensen's inequality (see [6, lemma 3.2] ) shows us that for any µ ≥ 0 that is ǫ-combination good, the kernel k µ is ǫ, 1 µ,κ -kernel good.
# sent_id = 9
1	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	0	_	_	start_char=1989|end_char=1991
2	define	define	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	1	_	_	start_char=1992|end_char=1998
3	the	the	DET	DT	Definite=Def|PronType=Art	2	_	_	start_char=1999|end_char=2002
4	risk	risk	NOUN	NN	Number=Sing	3	_	_	start_char=2003|end_char=2007
5	functional	functional	ADJ	JJ	Degree=Pos	4	_	_	start_char=2008|end_char=2018
6	r	be	X	AFX	_	5	_	_	SpaceAfter=No|start_char=2019|end_char=2020
7	(•	(•	PUNCT	NFP	_	6	_	_	SpaceAfter=No|start_char=2020|end_char=2022
8	)	)	PUNCT	-RRB-	_	7	_	_	start_char=2022|end_char=2023
9	:	:	PUNCT	:	_	8	_	_	start_char=2024|end_char=2025
10	r	be	AUX	VBP	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	_	_	start_char=2026|end_char=2027
11	p	p	NOUN	NN	Number=Sing	10	_	_	start_char=2028|end_char=2029
12	→	→	SYM	SYM	_	11	_	_	start_char=2030|end_char=2031
13	r	be	X	AFX	_	12	_	_	start_char=2032|end_char=2033
14	+	+	SYM	SYM	_	13	_	_	start_char=2034|end_char=2035
15	as	as	SCONJ	IN	_	14	_	_	start_char=2036|end_char=2038
16	follows	follow	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	15	_	_	SpaceAfter=No|start_char=2039|end_char=2046
17	:	:	PUNCT	:	_	16	_	_	start_char=2046|end_char=2047
18	r(µ	r(µ	X	FW	Foreign=Yes	17	_	_	SpaceAfter=No|start_char=2048|end_char=2051
19	)	)	PUNCT	-RRB-	_	18	_	_	start_char=2051|end_char=2052
20	:=	:=	PUNCT	NFP	_	19	_	_	start_char=2053|end_char=2055
21	e	e	X	FW	_	20	_	_	start_char=2056|end_char=2057
22	(	(	PUNCT	-LRB-	_	21	_	_	SpaceAfter=No|start_char=2058|end_char=2059
23	x	x	X	FW	_	22	_	_	SpaceAfter=No|start_char=2059|end_char=2060
24	,	,	PUNCT	,	_	23	_	_	SpaceAfter=No|start_char=2060|end_char=2061
25	y	y	X	FW	_	24	_	_	SpaceAfter=No|start_char=2061|end_char=2062
26	)	)	PUNCT	-RRB-	_	25	_	_	SpaceAfter=No|start_char=2062|end_char=2063
27	,	,	PUNCT	,	_	26	_	_	SpaceAfter=No|start_char=2063|end_char=2064
28	(	(	PUNCT	-LRB-	_	27	_	_	SpaceAfter=No|start_char=2064|end_char=2065
29	x	x	NOUN	NN	Number=Sing	28	_	_	start_char=2065|end_char=2066
30	′	′	PUNCT	,	_	29	_	_	start_char=2067|end_char=2068
31	,	,	PUNCT	,	_	30	_	_	SpaceAfter=No|start_char=2069|end_char=2070
32	y	y	X	FW	_	31	_	_	start_char=2070|end_char=2071
33	′	′	NOUN	NN	Number=Sing	32	_	_	start_char=2072|end_char=2073
34	)	)	PUNCT	-RRB-	_	33	_	_	SpaceAfter=No|start_char=2074|end_char=2075
35	∼d×d	∼d×d	NOUN	NN	Number=Sing	34	_	_	start_char=2075|end_char=2079
36	1	1	NUM	CD	NumForm=Digit|NumType=Card	35	_	_	start_char=2080|end_char=2081
37	-	-	PUNCT	HYPH	_	36	_	_	SpaceAfter=No|start_char=2082|end_char=2083
38	yy	yy	NOUN	NN	Number=Sing	37	_	_	start_char=2083|end_char=2085
39	′	′	NOUN	NN	Number=Sing	38	_	_	start_char=2086|end_char=2087
40	k	thousand	X	FW	_	39	_	_	start_char=2088|end_char=2089
41	µ	µ	NOUN	NN	Number=Sing	40	_	_	start_char=2090|end_char=2091
42	(	(	PUNCT	-LRB-	_	41	_	_	SpaceAfter=No|start_char=2092|end_char=2093
43	x	x	NOUN	NN	Number=Sing	42	_	_	SpaceAfter=No|start_char=2093|end_char=2094
44	,	,	PUNCT	,	_	43	_	_	start_char=2094|end_char=2095
45	x	x	NOUN	NN	Number=Sing	44	_	_	start_char=2096|end_char=2097
46	′	′	NOUN	NN	Number=Sing	45	_	_	start_char=2098|end_char=2099
47	)	)	PUNCT	-RRB-	_	46	_	_	start_char=2100|end_char=2101
48	+	+	SYM	SYM	_	47	_	_	start_char=2102|end_char=2103
49	a	a	DET	DT	Definite=Ind|PronType=Art	48	_	_	start_char=2104|end_char=2105
50	combination	combination	NOUN	NN	Number=Sing	49	_	_	start_char=2106|end_char=2117
51	µ	µ	NOUN	NN	Number=Sing	50	_	_	start_char=2118|end_char=2119
52	will	will	AUX	MD	VerbForm=Fin	51	_	_	start_char=2120|end_char=2124
53	be	be	AUX	VB	VerbForm=Inf	52	_	_	start_char=2125|end_char=2127
54	said	say	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	53	_	_	start_char=2128|end_char=2132
55	to	to	PART	TO	_	54	_	_	start_char=2133|end_char=2135
56	be	be	AUX	VB	VerbForm=Inf	55	_	_	start_char=2136|end_char=2138
57	ǫ-	ǫ-	PUNCT	:	_	56	_	_	SpaceAfter=No|start_char=2139|end_char=2141
58	combination	combination	NOUN	NN	Number=Sing	57	_	_	start_char=2141|end_char=2152
59	good	good	ADJ	JJ	Degree=Pos	58	_	_	start_char=2153|end_char=2157
60	if	if	SCONJ	IN	_	59	_	_	start_char=2158|end_char=2160
61	r(µ	r(µ	NOUN	NN	Number=Sing	60	_	_	SpaceAfter=No|start_char=2161|end_char=2164
62	)	)	PUNCT	-RRB-	_	61	_	_	start_char=2164|end_char=2165
63	≤	≤	NOUN	NN	Number=Sing	62	_	_	start_char=2166|end_char=2167
64	ǫ.	ǫ.	PUNCT	,	_	63	_	_	start_char=2168|end_char=2170
65	the	the	DET	DT	Definite=Def|PronType=Art	64	_	_	start_char=2171|end_char=2174
66	quantity	quantity	NOUN	NN	Number=Sing	65	_	_	start_char=2175|end_char=2183
67	r(µ	r(µ	NOUN	NN	Number=Sing	66	_	_	SpaceAfter=No|start_char=2184|end_char=2187
68	)	)	PUNCT	-RRB-	_	67	_	_	start_char=2187|end_char=2188
69	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	68	_	_	start_char=2189|end_char=2191
70	of	of	ADP	IN	_	69	_	_	start_char=2192|end_char=2194
71	interest	interest	NOUN	NN	Number=Sing	70	_	_	start_char=2195|end_char=2203
72	since	since	ADP	IN	_	71	_	_	start_char=2204|end_char=2209
73	an	a	DET	DT	Definite=Ind|PronType=Art	72	_	_	start_char=2210|end_char=2212
74	application	application	NOUN	NN	Number=Sing	73	_	_	start_char=2213|end_char=2224
75	of	of	ADP	IN	_	74	_	_	start_char=2225|end_char=2227
76-77	jensen's	_	_	_	_	_	_	_	start_char=2228|end_char=2236
76	jensen	jensen	PROPN	NNP	Number=Sing	75	_	_	start_char=2228|end_char=2234
77	's	's	PART	POS	_	76	_	_	start_char=2234|end_char=2236
78	inequality	inequality	NOUN	NN	Number=Sing	77	_	_	start_char=2237|end_char=2247
79	(	(	PUNCT	-LRB-	_	78	_	_	SpaceAfter=No|start_char=2248|end_char=2249
80	see	see	VERB	VB	Mood=Imp|VerbForm=Fin	79	_	_	start_char=2249|end_char=2252
81	[	[	PUNCT	-LRB-	_	80	_	_	SpaceAfter=No|start_char=2253|end_char=2254
82	6	6	NUM	CD	NumForm=Digit|NumType=Card	81	_	_	SpaceAfter=No|start_char=2254|end_char=2255
83	,	,	PUNCT	,	_	82	_	_	start_char=2255|end_char=2256
84	lemma	lemma	NOUN	NN	Number=Sing	83	_	_	start_char=2257|end_char=2262
85	3.2	3.2	NUM	CD	NumForm=Digit|NumType=Frac	84	_	_	SpaceAfter=No|start_char=2263|end_char=2266
86	]	]	PUNCT	-RRB-	_	85	_	_	start_char=2266|end_char=2267
87	)	)	PUNCT	-RRB-	_	86	_	_	start_char=2268|end_char=2269
88	shows	show	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	87	_	_	start_char=2270|end_char=2275
89	us	we	PRON	PRP	Case=Acc|Number=Plur|Person=1|PronType=Prs	88	_	_	start_char=2276|end_char=2278
90	that	that	SCONJ	IN	_	89	_	_	start_char=2279|end_char=2283
91	for	for	ADP	IN	_	90	_	_	start_char=2284|end_char=2287
92	any	any	DET	DT	PronType=Ind	91	_	_	start_char=2288|end_char=2291
93	µ	µ	NOUN	NN	Number=Sing	92	_	_	start_char=2292|end_char=2293
94	≥	≥	NOUN	NN	Number=Sing	93	_	_	start_char=2294|end_char=2295
95	0	0	NUM	CD	NumForm=Digit|NumType=Card	94	_	_	start_char=2296|end_char=2297
96	that	that	PRON	WDT	PronType=Rel	95	_	_	start_char=2298|end_char=2302
97	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	96	_	_	start_char=2303|end_char=2305
98	ǫ-	ǫ-	PUNCT	:	_	97	_	_	SpaceAfter=No|start_char=2306|end_char=2308
99	combination	combination	NOUN	NN	Number=Sing	98	_	_	start_char=2308|end_char=2319
100	good	good	ADJ	JJ	Degree=Pos	99	_	_	SpaceAfter=No|start_char=2320|end_char=2324
101	,	,	PUNCT	,	_	100	_	_	start_char=2324|end_char=2325
102	the	the	DET	DT	Definite=Def|PronType=Art	101	_	_	start_char=2326|end_char=2329
103	kernel	kernel	NOUN	NN	Number=Sing	102	_	_	start_char=2330|end_char=2336
104	k	thousand	X	FW	_	103	_	_	start_char=2337|end_char=2338
105	µ	µ	NOUN	NN	Number=Sing	104	_	_	start_char=2339|end_char=2340
106	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	105	_	_	start_char=2341|end_char=2343
107	ǫ	ǫ	PUNCT	:	_	106	_	_	SpaceAfter=No|start_char=2344|end_char=2345
108	,	,	PUNCT	,	_	107	_	_	start_char=2345|end_char=2346
109	1	1	NUM	CD	NumForm=Digit|NumType=Card	108	_	_	start_char=2347|end_char=2348
110	µ	µ	NOUN	NN	Number=Sing	109	_	_	SpaceAfter=No|start_char=2349|end_char=2350
111	,	,	PUNCT	,	_	110	_	_	SpaceAfter=No|start_char=2350|end_char=2351
112	κ	κ	NOUN	NN	Number=Sing	111	_	_	start_char=2351|end_char=2352
113	-	-	PUNCT	HYPH	_	112	_	_	SpaceAfter=No|start_char=2353|end_char=2354
114	kernel	kernel	NOUN	NN	Number=Sing	113	_	_	start_char=2354|end_char=2360
115	good	good	ADJ	JJ	Degree=Pos	114	_	_	SpaceAfter=No|start_char=2361|end_char=2365
116	.	.	PUNCT	.	_	115	_	_	start_char=2365|end_char=2366

# text = furthermore, one can show, using standard results on capacity of linear function classes (see for example [2, theorem 21] ), that an (ǫ, γ)-good kernel can be used to learn, with confidence 1 -δ, a classifier with expected misclassification rate at most ǫ + ǫ 1 by using at most o κ 4 ǫ 2 1 γ 2 log 1 δ labeled samples.
# sent_id = 10
1	furthermore	furthermore	ADV	RB	_	0	_	_	SpaceAfter=No|start_char=2367|end_char=2378
2	,	,	PUNCT	,	_	1	_	_	start_char=2378|end_char=2379
3	one	one	PRON	PRP	Number=Sing|Person=3|PronType=Prs	2	_	_	start_char=2380|end_char=2383
4	can	can	AUX	MD	VerbForm=Fin	3	_	_	start_char=2384|end_char=2387
5	show	show	VERB	VB	VerbForm=Inf	4	_	_	SpaceAfter=No|start_char=2388|end_char=2392
6	,	,	PUNCT	,	_	5	_	_	start_char=2392|end_char=2393
7	using	use	VERB	VBG	Tense=Pres|VerbForm=Part	6	_	_	start_char=2394|end_char=2399
8	standard	standard	ADJ	JJ	Degree=Pos	7	_	_	start_char=2400|end_char=2408
9	results	result	NOUN	NNS	Number=Plur	8	_	_	start_char=2409|end_char=2416
10	on	on	ADP	IN	_	9	_	_	start_char=2417|end_char=2419
11	capacity	capacity	NOUN	NN	Number=Sing	10	_	_	start_char=2420|end_char=2428
12	of	of	ADP	IN	_	11	_	_	start_char=2429|end_char=2431
13	linear	linear	ADJ	JJ	Degree=Pos	12	_	_	start_char=2432|end_char=2438
14	function	function	NOUN	NN	Number=Sing	13	_	_	start_char=2439|end_char=2447
15	classes	class	NOUN	NNS	Number=Plur	14	_	_	start_char=2448|end_char=2455
16	(	(	PUNCT	-LRB-	_	15	_	_	SpaceAfter=No|start_char=2456|end_char=2457
17	see	see	VERB	VB	Mood=Imp|VerbForm=Fin	16	_	_	start_char=2457|end_char=2460
18	for	for	ADP	IN	_	17	_	_	start_char=2461|end_char=2464
19	example	example	NOUN	NN	Number=Sing	18	_	_	start_char=2465|end_char=2472
20	[	[	PUNCT	-LRB-	_	19	_	_	SpaceAfter=No|start_char=2473|end_char=2474
21	2	2	NUM	CD	NumForm=Digit|NumType=Card	20	_	_	SpaceAfter=No|start_char=2474|end_char=2475
22	,	,	PUNCT	,	_	21	_	_	start_char=2475|end_char=2476
23	theorem	theorem	NOUN	NN	Number=Sing	22	_	_	start_char=2477|end_char=2484
24	21	21	NUM	CD	NumForm=Digit|NumType=Card	23	_	_	SpaceAfter=No|start_char=2485|end_char=2487
25	]	]	PUNCT	-RRB-	_	24	_	_	start_char=2487|end_char=2488
26	)	)	PUNCT	-RRB-	_	25	_	_	SpaceAfter=No|start_char=2489|end_char=2490
27	,	,	PUNCT	,	_	26	_	_	start_char=2490|end_char=2491
28	that	that	SCONJ	IN	_	27	_	_	start_char=2492|end_char=2496
29	an	a	DET	DT	Definite=Ind|PronType=Art	28	_	_	start_char=2497|end_char=2499
30	(	(	PUNCT	-LRB-	_	29	_	_	SpaceAfter=No|start_char=2500|end_char=2501
31	ǫ	ǫ	NOUN	NN	Number=Sing	30	_	_	SpaceAfter=No|start_char=2501|end_char=2502
32	,	,	PUNCT	,	_	31	_	_	start_char=2502|end_char=2503
33	γ	γ	NOUN	NN	Number=Sing	32	_	_	SpaceAfter=No|start_char=2504|end_char=2505
34	)	)	PUNCT	-RRB-	_	33	_	_	SpaceAfter=No|start_char=2505|end_char=2506
35	-	-	PUNCT	HYPH	_	34	_	_	SpaceAfter=No|start_char=2506|end_char=2507
36	good	good	ADJ	JJ	Degree=Pos	35	_	_	start_char=2507|end_char=2511
37	kernel	kernel	NOUN	NN	Number=Sing	36	_	_	start_char=2512|end_char=2518
38	can	can	AUX	MD	VerbForm=Fin	37	_	_	start_char=2519|end_char=2522
39	be	be	AUX	VB	VerbForm=Inf	38	_	_	start_char=2523|end_char=2525
40	used	use	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	39	_	_	start_char=2526|end_char=2530
41	to	to	PART	TO	_	40	_	_	start_char=2531|end_char=2533
42	learn	learn	VERB	VB	VerbForm=Inf	41	_	_	SpaceAfter=No|start_char=2534|end_char=2539
43	,	,	PUNCT	,	_	42	_	_	start_char=2539|end_char=2540
44	with	with	ADP	IN	_	43	_	_	start_char=2541|end_char=2545
45	confidence	confidence	NOUN	NN	Number=Sing	44	_	_	start_char=2546|end_char=2556
46	1	1	NUM	CD	NumForm=Digit|NumType=Card	45	_	_	start_char=2557|end_char=2558
47	-δ	-δ	NOUN	NN	Number=Sing	46	_	_	SpaceAfter=No|start_char=2559|end_char=2561
48	,	,	PUNCT	,	_	47	_	_	start_char=2561|end_char=2562
49	a	a	DET	DT	Definite=Ind|PronType=Art	48	_	_	start_char=2563|end_char=2564
50	classifier	classifier	NOUN	NN	Number=Sing	49	_	_	start_char=2565|end_char=2575
51	with	with	ADP	IN	_	50	_	_	start_char=2576|end_char=2580
52	expected	expect	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	51	_	_	start_char=2581|end_char=2589
53	misclassification	misclassification	NOUN	NN	Number=Sing	52	_	_	start_char=2590|end_char=2607
54	rate	rate	NOUN	NN	Number=Sing	53	_	_	start_char=2608|end_char=2612
55	at	at	ADP	IN	_	54	_	_	start_char=2613|end_char=2615
56	most	most	ADJ	JJS	Degree=Sup	55	_	_	start_char=2616|end_char=2620
57	ǫ	ǫ	NOUN	NN	Number=Sing	56	_	_	start_char=2621|end_char=2622
58	+	+	SYM	SYM	_	57	_	_	start_char=2623|end_char=2624
59	ǫ	ǫ	SYM	SYM	_	58	_	_	start_char=2625|end_char=2626
60	1	1	NUM	CD	NumForm=Digit|NumType=Card	59	_	_	start_char=2627|end_char=2628
61	by	by	SCONJ	IN	_	60	_	_	start_char=2629|end_char=2631
62	using	use	VERB	VBG	Tense=Pres|VerbForm=Part	61	_	_	start_char=2632|end_char=2637
63	at	at	ADP	IN	_	62	_	_	start_char=2638|end_char=2640
64	most	most	ADJ	JJS	Degree=Sup	63	_	_	start_char=2641|end_char=2645
65	o	o	NOUN	NN	Number=Sing	64	_	_	start_char=2646|end_char=2647
66	κ	κ	NOUN	NN	Number=Sing	65	_	_	start_char=2648|end_char=2649
67	4	4	NUM	CD	NumForm=Digit|NumType=Card	66	_	_	start_char=2650|end_char=2651
68	ǫ	ǫ	SYM	SYM	_	67	_	_	start_char=2652|end_char=2653
69	2	2	NUM	CD	NumForm=Digit|NumType=Card	68	_	_	start_char=2654|end_char=2655
70	1	1	NUM	CD	NumForm=Digit|NumType=Card	69	_	_	start_char=2656|end_char=2657
71	γ	γ	NOUN	NNS	Number=Plur	70	_	_	start_char=2658|end_char=2659
72	2	2	NUM	CD	NumForm=Digit|NumType=Card	71	_	_	start_char=2660|end_char=2661
73	log	log	NOUN	NN	Number=Sing	72	_	_	start_char=2662|end_char=2665
74	1	1	NUM	CD	NumForm=Digit|NumType=Card	73	_	_	start_char=2666|end_char=2667
75	δ	δ	NOUN	NN	Number=Sing	74	_	_	start_char=2668|end_char=2669
76	labeled	label	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	75	_	_	start_char=2670|end_char=2677
77	samples	sample	NOUN	NNS	Number=Plur	76	_	_	SpaceAfter=No|start_char=2678|end_char=2685
78	.	.	PUNCT	.	_	77	_	_	start_char=2685|end_char=2686

# text = in order to cast this learning problem more cleanly, [6] proposes the construction of a k-space using the following feature map z : (x, x ′ ) → k 1 (x, x ′ ), . . . , k p (x, x ′ ) ∈ r p this allows us to write, for any µ ∈ r p , k µ (x, x ′ ) = µ, z(x, x ′ ) . given n labeled training points (x 1 , y 1 ), . . . , (x n , y n ), define the empirical risk functional r(•) : r p → r + as follows 1 : 6] poses the learning problem as the following optimization problem: r(µ) := 2 n(n -1) 1≤i<j≤n [1 -y i y j µ, z(x i , x j ) ] + [ min µ≥0 λ 2 µ 2 2 + r(µ) 3 generalization guarantees for a learned kernel combination our generalization guarantee shall proceed in two steps.
# sent_id = 11
1	in	in	SCONJ	IN	_	0	_	_	start_char=2687|end_char=2689
2	order	order	NOUN	NN	Number=Sing	1	_	_	start_char=2690|end_char=2695
3	to	to	PART	TO	_	2	_	_	start_char=2696|end_char=2698
4	cast	cast	VERB	VB	VerbForm=Inf	3	_	_	start_char=2699|end_char=2703
5	this	this	DET	DT	Number=Sing|PronType=Dem	4	_	_	start_char=2704|end_char=2708
6	learning	learning	NOUN	NN	Number=Sing	5	_	_	start_char=2709|end_char=2717
7	problem	problem	NOUN	NN	Number=Sing	6	_	_	start_char=2718|end_char=2725
8	more	more	ADV	RBR	Degree=Cmp	7	_	_	start_char=2726|end_char=2730
9	cleanly	cleanly	ADV	RB	_	8	_	_	SpaceAfter=No|start_char=2731|end_char=2738
10	,	,	PUNCT	,	_	9	_	_	start_char=2738|end_char=2739
11	[	[	PUNCT	-LRB-	_	10	_	_	SpaceAfter=No|start_char=2740|end_char=2741
12	6	6	NUM	CD	NumForm=Digit|NumType=Card	11	_	_	SpaceAfter=No|start_char=2741|end_char=2742
13	]	]	PUNCT	-RRB-	_	12	_	_	start_char=2742|end_char=2743
14	proposes	propose	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	13	_	_	start_char=2744|end_char=2752
15	the	the	DET	DT	Definite=Def|PronType=Art	14	_	_	start_char=2753|end_char=2756
16	construction	construction	NOUN	NN	Number=Sing	15	_	_	start_char=2757|end_char=2769
17	of	of	ADP	IN	_	16	_	_	start_char=2770|end_char=2772
18	a	a	DET	DT	Definite=Ind|PronType=Art	17	_	_	start_char=2773|end_char=2774
19	k-	k-	NOUN	NN	Number=Sing	18	_	_	SpaceAfter=No|start_char=2775|end_char=2777
20	space	space	NOUN	NN	Number=Sing	19	_	_	start_char=2777|end_char=2782
21	using	use	VERB	VBG	VerbForm=Ger	20	_	_	start_char=2783|end_char=2788
22	the	the	DET	DT	Definite=Def|PronType=Art	21	_	_	start_char=2789|end_char=2792
23	following	follow	VERB	VBG	VerbForm=Ger	22	_	_	start_char=2793|end_char=2802
24	feature	feature	NOUN	NN	Number=Sing	23	_	_	start_char=2803|end_char=2810
25	map	map	NOUN	NN	Number=Sing	24	_	_	start_char=2811|end_char=2814
26	z	z	NOUN	NN	Number=Sing	25	_	_	start_char=2815|end_char=2816
27	:	:	PUNCT	:	_	26	_	_	start_char=2817|end_char=2818
28	(	(	PUNCT	-LRB-	_	27	_	_	SpaceAfter=No|start_char=2819|end_char=2820
29	x	x	NOUN	NN	Number=Sing	28	_	_	SpaceAfter=No|start_char=2820|end_char=2821
30	,	,	PUNCT	,	_	29	_	_	start_char=2821|end_char=2822
31	x	x	NOUN	NN	Number=Sing	30	_	_	start_char=2823|end_char=2824
32	′	′	NOUN	NN	Number=Sing	31	_	_	start_char=2825|end_char=2826
33	)	)	PUNCT	-RRB-	_	32	_	_	start_char=2827|end_char=2828
34	→	→	SYM	SYM	_	33	_	_	start_char=2829|end_char=2830
35	k	k	NOUN	NN	Number=Sing	34	_	_	start_char=2831|end_char=2832
36	1	1	NUM	CD	NumForm=Digit|NumType=Card	35	_	_	start_char=2833|end_char=2834
37	(	(	PUNCT	-LRB-	_	36	_	_	SpaceAfter=No|start_char=2835|end_char=2836
38	x	x	NOUN	NN	Number=Sing	37	_	_	SpaceAfter=No|start_char=2836|end_char=2837
39	,	,	PUNCT	,	_	38	_	_	start_char=2837|end_char=2838
40	x	x	NOUN	NN	Number=Sing	39	_	_	start_char=2839|end_char=2840
41	′	′	NOUN	NN	Number=Plur	40	_	_	start_char=2841|end_char=2842
42	)	)	PUNCT	-RRB-	_	41	_	_	SpaceAfter=No|start_char=2843|end_char=2844
43	,	,	PUNCT	,	_	42	_	_	start_char=2844|end_char=2845
44	.	.	PUNCT	.	_	43	_	_	start_char=2846|end_char=2847
45	.	.	PUNCT	.	_	44	_	_	start_char=2848|end_char=2849
46	.	.	PUNCT	,	_	45	_	_	start_char=2850|end_char=2851
47	,	,	PUNCT	,	_	46	_	_	start_char=2852|end_char=2853
48	k	k	NOUN	NN	Number=Sing	47	_	_	start_char=2854|end_char=2855
49	p	p	NOUN	NN	Number=Sing	48	_	_	start_char=2856|end_char=2857
50	(	(	PUNCT	-LRB-	_	49	_	_	SpaceAfter=No|start_char=2858|end_char=2859
51	x	x	NOUN	NN	Number=Sing	50	_	_	SpaceAfter=No|start_char=2859|end_char=2860
52	,	,	PUNCT	,	_	51	_	_	start_char=2860|end_char=2861
53	x	x	NOUN	NN	Number=Sing	52	_	_	start_char=2862|end_char=2863
54	′	′	NOUN	NN	Number=Sing	53	_	_	start_char=2864|end_char=2865
55	)	)	PUNCT	-RRB-	_	54	_	_	start_char=2866|end_char=2867
56	∈	∈	NOUN	NN	Number=Sing	55	_	_	start_char=2868|end_char=2869
57	r	be	AUX	VBP	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	56	_	_	start_char=2870|end_char=2871
58	p	p	NOUN	NN	Number=Sing	57	_	_	start_char=2872|end_char=2873
59	this	this	PRON	DT	Number=Sing|PronType=Dem	58	_	_	start_char=2874|end_char=2878
60	allows	allow	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	59	_	_	start_char=2879|end_char=2885
61	us	we	PRON	PRP	Case=Acc|Number=Plur|Person=1|PronType=Prs	60	_	_	start_char=2886|end_char=2888
62	to	to	PART	TO	_	61	_	_	start_char=2889|end_char=2891
63	write	write	VERB	VB	VerbForm=Inf	62	_	_	SpaceAfter=No|start_char=2892|end_char=2897
64	,	,	PUNCT	,	_	63	_	_	start_char=2897|end_char=2898
65	for	for	ADP	IN	_	64	_	_	start_char=2899|end_char=2902
66	any	any	DET	DT	PronType=Ind	65	_	_	start_char=2903|end_char=2906
67	µ	µ	X	FW	_	66	_	_	start_char=2907|end_char=2908
68	∈	∈	NOUN	NN	Number=Sing	67	_	_	start_char=2909|end_char=2910
69	r	be	X	FW	_	68	_	_	start_char=2911|end_char=2912
70	p	p	NOUN	NN	Number=Sing	69	_	_	start_char=2913|end_char=2914
71	,	,	PUNCT	,	_	70	_	_	start_char=2915|end_char=2916
72	k	k	NOUN	NN	Number=Sing	71	_	_	start_char=2917|end_char=2918
73	µ	µ	NOUN	NN	Number=Sing	72	_	_	start_char=2919|end_char=2920
74	(	(	PUNCT	-LRB-	_	73	_	_	SpaceAfter=No|start_char=2921|end_char=2922
75	x	x	NOUN	NN	Number=Sing	74	_	_	SpaceAfter=No|start_char=2922|end_char=2923
76	,	,	PUNCT	,	_	75	_	_	start_char=2923|end_char=2924
77	x	x	NOUN	NN	Number=Sing	76	_	_	start_char=2925|end_char=2926
78	′	′	NOUN	NN	Number=Sing	77	_	_	start_char=2927|end_char=2928
79	)	)	PUNCT	-RRB-	_	78	_	_	start_char=2929|end_char=2930
80	=	=	SYM	SYM	_	79	_	_	start_char=2931|end_char=2932
81	µ	µ	NOUN	NN	Number=Sing	80	_	_	SpaceAfter=No|start_char=2933|end_char=2934
82	,	,	PUNCT	,	_	81	_	_	start_char=2934|end_char=2935
83	z(	z(	NOUN	NN	Number=Sing	82	_	_	SpaceAfter=No|start_char=2936|end_char=2938
84	x	x	NOUN	NN	Number=Sing	83	_	_	SpaceAfter=No|start_char=2938|end_char=2939
85	,	,	PUNCT	,	_	84	_	_	start_char=2939|end_char=2940
86	x	x	NOUN	NN	Number=Sing	85	_	_	start_char=2941|end_char=2942
87	′	′	NOUN	NN	Number=Sing	86	_	_	start_char=2943|end_char=2944
88	)	)	PUNCT	-RRB-	_	87	_	_	start_char=2945|end_char=2946
89	.	.	PUNCT	.	_	88	_	_	start_char=2947|end_char=2948
90	given	give	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	89	_	_	start_char=2949|end_char=2954
91	n	and	CCONJ	CC	_	90	_	_	start_char=2955|end_char=2956
92	labeled	label	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	91	_	_	start_char=2957|end_char=2964
93	training	training	NOUN	NN	Number=Sing	92	_	_	start_char=2965|end_char=2973
94	points	point	NOUN	NNS	Number=Plur	93	_	_	start_char=2974|end_char=2980
95	(	(	PUNCT	-LRB-	_	94	_	_	SpaceAfter=No|start_char=2981|end_char=2982
96	x	x	NOUN	NN	Number=Sing	95	_	_	start_char=2982|end_char=2983
97	1	1	NUM	CD	NumForm=Digit|NumType=Card	96	_	_	start_char=2984|end_char=2985
98	,	,	PUNCT	,	_	97	_	_	start_char=2986|end_char=2987
99	y	y	NOUN	NN	Number=Sing	98	_	_	start_char=2988|end_char=2989
100	1	1	NUM	CD	NumForm=Digit|NumType=Card	99	_	_	start_char=2990|end_char=2991
101	)	)	PUNCT	-RRB-	_	100	_	_	SpaceAfter=No|start_char=2992|end_char=2993
102	,	,	PUNCT	,	_	101	_	_	start_char=2993|end_char=2994
103	.	.	PUNCT	.	_	102	_	_	start_char=2995|end_char=2996
104	.	.	PUNCT	.	_	103	_	_	start_char=2997|end_char=2998
105	.	.	PUNCT	.	_	104	_	_	start_char=2999|end_char=3000
106	,	,	PUNCT	,	_	105	_	_	start_char=3001|end_char=3002
107	(	(	PUNCT	-LRB-	_	106	_	_	SpaceAfter=No|start_char=3003|end_char=3004
108	x	x	NOUN	NN	Number=Sing	107	_	_	start_char=3004|end_char=3005
109	n	n	NOUN	NN	Number=Sing	108	_	_	start_char=3006|end_char=3007
110	,	,	PUNCT	,	_	109	_	_	start_char=3008|end_char=3009
111	y	y	NOUN	NN	Number=Sing	110	_	_	start_char=3010|end_char=3011
112	n	n	NOUN	NN	Number=Sing	111	_	_	start_char=3012|end_char=3013
113	)	)	PUNCT	-RRB-	_	112	_	_	SpaceAfter=No|start_char=3014|end_char=3015
114	,	,	PUNCT	,	_	113	_	_	start_char=3015|end_char=3016
115	define	define	VERB	VB	Mood=Imp|VerbForm=Fin	114	_	_	start_char=3017|end_char=3023
116	the	the	DET	DT	Definite=Def|PronType=Art	115	_	_	start_char=3024|end_char=3027
117	empirical	empirical	ADJ	JJ	Degree=Pos	116	_	_	start_char=3028|end_char=3037
118	risk	risk	NOUN	NN	Number=Sing	117	_	_	start_char=3038|end_char=3042
119	functional	functional	ADJ	JJ	Degree=Pos	118	_	_	start_char=3043|end_char=3053
120	r	be	X	AFX	_	119	_	_	SpaceAfter=No|start_char=3054|end_char=3055
121	(•	(•	PUNCT	NFP	_	120	_	_	SpaceAfter=No|start_char=3055|end_char=3057
122	)	)	PUNCT	-RRB-	_	121	_	_	start_char=3057|end_char=3058
123	:	:	PUNCT	:	_	122	_	_	start_char=3059|end_char=3060
124	r	be	X	LS	_	123	_	_	start_char=3061|end_char=3062
125	p	p	NOUN	NN	Number=Sing	124	_	_	start_char=3063|end_char=3064
126	→	→	SYM	SYM	_	125	_	_	start_char=3065|end_char=3066
127	r	be	X	AFX	_	126	_	_	start_char=3067|end_char=3068
128	+	+	SYM	SYM	_	127	_	_	start_char=3069|end_char=3070
129	as	as	SCONJ	IN	_	128	_	_	start_char=3071|end_char=3073
130	follows	follow	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	129	_	_	start_char=3074|end_char=3081
131	1	1	NUM	CD	NumForm=Digit|NumType=Card	130	_	_	start_char=3082|end_char=3083
132	:	:	PUNCT	:	_	131	_	_	start_char=3084|end_char=3085
133	6	6	NUM	CD	NumForm=Digit|NumType=Card	132	_	_	SpaceAfter=No|start_char=3086|end_char=3087
134	]	]	PUNCT	-RRB-	_	133	_	_	start_char=3087|end_char=3088
135	poses	pose	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	134	_	_	start_char=3089|end_char=3094
136	the	the	DET	DT	Definite=Def|PronType=Art	135	_	_	start_char=3095|end_char=3098
137	learning	learning	NOUN	NN	Number=Sing	136	_	_	start_char=3099|end_char=3107
138	problem	problem	NOUN	NN	Number=Sing	137	_	_	start_char=3108|end_char=3115
139	as	as	ADP	IN	_	138	_	_	start_char=3116|end_char=3118
140	the	the	DET	DT	Definite=Def|PronType=Art	139	_	_	start_char=3119|end_char=3122
141	following	follow	VERB	VBG	VerbForm=Ger	140	_	_	start_char=3123|end_char=3132
142	optimization	optimization	NOUN	NN	Number=Sing	141	_	_	start_char=3133|end_char=3145
143	problem	problem	NOUN	NN	Number=Sing	142	_	_	SpaceAfter=No|start_char=3146|end_char=3153
144	:	:	PUNCT	:	_	143	_	_	start_char=3153|end_char=3154
145	r(µ	r(µ	NOUN	NN	Number=Sing	144	_	_	SpaceAfter=No|start_char=3155|end_char=3158
146	)	)	PUNCT	-RRB-	_	145	_	_	start_char=3158|end_char=3159
147	:=	:=	SYM	SYM	_	146	_	_	start_char=3160|end_char=3162
148	2	2	NUM	CD	NumForm=Digit|NumType=Card	147	_	_	start_char=3163|end_char=3164
149	n(	n(	NOUN	NNS	Number=Plur	148	_	_	SpaceAfter=No|start_char=3165|end_char=3167
150	n	n	NOUN	NN	Number=Sing	149	_	_	start_char=3167|end_char=3168
151	-	-	SYM	SYM	_	150	_	_	SpaceAfter=No|start_char=3169|end_char=3170
152	1	1	NUM	CD	NumForm=Digit|NumType=Card	151	_	_	SpaceAfter=No|start_char=3170|end_char=3171
153	)	)	PUNCT	-RRB-	_	152	_	_	start_char=3171|end_char=3172
154	1	1	NUM	CD	NumForm=Digit|NumType=Card	153	_	_	SpaceAfter=No|start_char=3173|end_char=3174
155	≤	≤	NOUN	NNS	Number=Plur	154	_	_	SpaceAfter=No|start_char=3174|end_char=3175
156	i	i	NOUN	NN	Number=Sing	155	_	_	SpaceAfter=No|start_char=3175|end_char=3176
157	<	<	PUNCT	-LRB-	_	156	_	_	SpaceAfter=No|start_char=3176|end_char=3177
158	j≤n	j≤n	NOUN	NN	Number=Sing	157	_	_	start_char=3177|end_char=3180
159	[	[	PUNCT	-LRB-	_	158	_	_	SpaceAfter=No|start_char=3181|end_char=3182
160	1	1	NUM	CD	NumForm=Digit|NumType=Card	159	_	_	start_char=3182|end_char=3183
161	-y	-y	NOUN	NN	Number=Sing	160	_	_	start_char=3184|end_char=3186
162	i	i	NOUN	NN	Number=Sing	161	_	_	start_char=3187|end_char=3188
163	y	y	NOUN	NN	Number=Sing	162	_	_	start_char=3189|end_char=3190
164	j	j	NOUN	NN	Number=Sing	163	_	_	start_char=3191|end_char=3192
165	µ	µ	X	FW	Foreign=Yes	164	_	_	SpaceAfter=No|start_char=3193|end_char=3194
166	,	,	PUNCT	,	_	165	_	_	start_char=3194|end_char=3195
167	z(	z(	NOUN	NN	Number=Sing	166	_	_	SpaceAfter=No|start_char=3196|end_char=3198
168	x	x	NOUN	NN	Number=Sing	167	_	_	start_char=3198|end_char=3199
169	i	i	NOUN	NN	Number=Sing	168	_	_	start_char=3200|end_char=3201
170	,	,	PUNCT	,	_	169	_	_	start_char=3202|end_char=3203
171	x	x	NOUN	NN	Number=Sing	170	_	_	start_char=3204|end_char=3205
172	j	j	NOUN	NN	Number=Sing	171	_	_	start_char=3206|end_char=3207
173	)	)	PUNCT	-RRB-	_	172	_	_	start_char=3208|end_char=3209
174	]	]	PUNCT	-RRB-	_	173	_	_	start_char=3210|end_char=3211
175	+	+	SYM	SYM	_	174	_	_	start_char=3212|end_char=3213
176	[	[	PUNCT	-LRB-	_	175	_	_	start_char=3214|end_char=3215
177	min	minute	NOUN	NN	Number=Sing	176	_	_	start_char=3216|end_char=3219
178	µ	µ	NOUN	NN	Number=Sing	177	_	_	SpaceAfter=No|start_char=3220|end_char=3221
179	≥0	≥0	NOUN	NN	Number=Sing	178	_	_	start_char=3221|end_char=3223
180	λ	λ	NOUN	NN	Number=Sing	179	_	_	start_char=3224|end_char=3225
181	2	2	NUM	CD	NumForm=Digit|NumType=Card	180	_	_	start_char=3226|end_char=3227
182	µ	µ	NOUN	NN	Number=Sing	181	_	_	start_char=3228|end_char=3229
183	2	2	NUM	CD	NumForm=Digit|NumType=Card	182	_	_	start_char=3230|end_char=3231
184	2	2	NUM	CD	NumForm=Digit|NumType=Card	183	_	_	start_char=3232|end_char=3233
185	+	+	SYM	SYM	_	184	_	_	start_char=3234|end_char=3235
186	r(	r(	SYM	SYM	_	185	_	_	SpaceAfter=No|start_char=3236|end_char=3238
187	µ	µ	NOUN	NN	Number=Sing	186	_	_	SpaceAfter=No|start_char=3238|end_char=3239
188	)	)	PUNCT	-RRB-	_	187	_	_	start_char=3239|end_char=3240
189	3	3	NUM	CD	NumForm=Digit|NumType=Card	188	_	_	start_char=3241|end_char=3242
190	generalization	generalization	NOUN	NN	Number=Sing	189	_	_	start_char=3243|end_char=3257
191	guarantees	guarantee	NOUN	NNS	Number=Plur	190	_	_	start_char=3258|end_char=3268
192	for	for	ADP	IN	_	191	_	_	start_char=3269|end_char=3272
193	a	a	DET	DT	Definite=Ind|PronType=Art	192	_	_	start_char=3273|end_char=3274
194	learned	learn	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	193	_	_	start_char=3275|end_char=3282
195	kernel	kernel	NOUN	NN	Number=Sing	194	_	_	start_char=3283|end_char=3289
196	combination	combination	NOUN	NN	Number=Sing	195	_	_	start_char=3290|end_char=3301
197	our	our	PRON	PRP$	Case=Gen|Number=Plur|Person=1|Poss=Yes|PronType=Prs	196	_	_	start_char=3302|end_char=3305
198	generalization	generalization	NOUN	NN	Number=Sing	197	_	_	start_char=3306|end_char=3320
199	guarantee	guarantee	NOUN	NN	Number=Sing	198	_	_	start_char=3321|end_char=3330
200	shall	shall	AUX	MD	VerbForm=Fin	199	_	_	start_char=3331|end_char=3336
201	proceed	proceed	VERB	VB	VerbForm=Inf	200	_	_	start_char=3337|end_char=3344
202	in	in	ADP	IN	_	201	_	_	start_char=3345|end_char=3347
203	two	two	NUM	CD	NumForm=Word|NumType=Card	202	_	_	start_char=3348|end_char=3351
204	steps	step	NOUN	NNS	Number=Plur	203	_	_	SpaceAfter=No|start_char=3352|end_char=3357
205	.	.	PUNCT	.	_	204	_	_	start_char=3357|end_char=3358

# text = we shall assume that we have with us a training set (x 1 , y 1 ), . . . , (x n , y n ) using which we are able to determine a combination vector μ such that r(μ) ≤ ǫ. 1. we shall first prove that, with high probability over the choice of the training points, the learned combination vector μ will give us a kernel k μ that is ǫ + ǫ 1 , 1 μ,κ -kernel good where ǫ 1 > 0 is a quantity that can be made arbitrarily small.
# sent_id = 12
1	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	0	_	_	start_char=3359|end_char=3361
2	shall	shall	AUX	MD	VerbForm=Fin	1	_	_	start_char=3362|end_char=3367
3	assume	assume	VERB	VB	VerbForm=Inf	2	_	_	start_char=3368|end_char=3374
4	that	that	SCONJ	IN	_	3	_	_	start_char=3375|end_char=3379
5	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	4	_	_	start_char=3380|end_char=3382
6	have	have	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	5	_	_	start_char=3383|end_char=3387
7	with	with	ADP	IN	_	6	_	_	start_char=3388|end_char=3392
8	us	we	PRON	PRP	Case=Acc|Number=Plur|Person=1|PronType=Prs	7	_	_	start_char=3393|end_char=3395
9	a	a	DET	DT	Definite=Ind|PronType=Art	8	_	_	start_char=3396|end_char=3397
10	training	training	NOUN	NN	Number=Sing	9	_	_	start_char=3398|end_char=3406
11	set	set	NOUN	NN	Number=Sing	10	_	_	start_char=3407|end_char=3410
12	(	(	PUNCT	-LRB-	_	11	_	_	SpaceAfter=No|start_char=3411|end_char=3412
13	x	x	NOUN	NN	Number=Sing	12	_	_	start_char=3412|end_char=3413
14	1	1	NUM	CD	NumForm=Digit|NumType=Card	13	_	_	start_char=3414|end_char=3415
15	,	,	PUNCT	,	_	14	_	_	start_char=3416|end_char=3417
16	y	y	NOUN	NN	Number=Sing	15	_	_	start_char=3418|end_char=3419
17	1	1	NUM	CD	NumForm=Digit|NumType=Card	16	_	_	start_char=3420|end_char=3421
18	)	)	PUNCT	-RRB-	_	17	_	_	SpaceAfter=No|start_char=3422|end_char=3423
19	,	,	PUNCT	,	_	18	_	_	start_char=3423|end_char=3424
20	.	.	PUNCT	.	_	19	_	_	start_char=3425|end_char=3426
21	.	.	PUNCT	.	_	20	_	_	start_char=3427|end_char=3428
22	.	.	PUNCT	.	_	21	_	_	start_char=3429|end_char=3430
23	,	,	PUNCT	,	_	22	_	_	start_char=3431|end_char=3432
24	(	(	PUNCT	-LRB-	_	23	_	_	SpaceAfter=No|start_char=3433|end_char=3434
25	x	x	NOUN	NN	Number=Sing	24	_	_	start_char=3434|end_char=3435
26	n	n	NOUN	NN	Number=Sing	25	_	_	start_char=3436|end_char=3437
27	,	,	PUNCT	,	_	26	_	_	start_char=3438|end_char=3439
28	y	y	NOUN	NN	Number=Sing	27	_	_	start_char=3440|end_char=3441
29	n	n	NOUN	NN	Number=Sing	28	_	_	start_char=3442|end_char=3443
30	)	)	PUNCT	-RRB-	_	29	_	_	start_char=3444|end_char=3445
31	using	use	VERB	VBG	Tense=Pres|VerbForm=Part	30	_	_	start_char=3446|end_char=3451
32	which	which	PRON	WDT	PronType=Rel	31	_	_	start_char=3452|end_char=3457
33	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	32	_	_	start_char=3458|end_char=3460
34	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	33	_	_	start_char=3461|end_char=3464
35	able	able	ADJ	JJ	Degree=Pos	34	_	_	start_char=3465|end_char=3469
36	to	to	PART	TO	_	35	_	_	start_char=3470|end_char=3472
37	determine	determine	VERB	VB	VerbForm=Inf	36	_	_	start_char=3473|end_char=3482
38	a	a	DET	DT	Definite=Ind|PronType=Art	37	_	_	start_char=3483|end_char=3484
39	combination	combination	NOUN	NN	Number=Sing	38	_	_	start_char=3485|end_char=3496
40	vector	vector	NOUN	NN	Number=Sing	39	_	_	start_char=3497|end_char=3503
41	μ	'	PUNCT	,	_	40	_	_	start_char=3504|end_char=3505
42	such	such	ADJ	JJ	Degree=Pos	41	_	_	start_char=3506|end_char=3510
43	that	that	PRON	WDT	PronType=Rel	42	_	_	start_char=3511|end_char=3515
44	r(	r(	NOUN	NN	Number=Sing	43	_	_	SpaceAfter=No|start_char=3516|end_char=3518
45	μ	μ	NOUN	NN	Number=Sing	44	_	_	SpaceAfter=No|start_char=3518|end_char=3519
46	)	)	PUNCT	-RRB-	_	45	_	_	start_char=3519|end_char=3520
47	≤	≤	NOUN	NN	Number=Sing	46	_	_	start_char=3521|end_char=3522
48	ǫ.	ǫ.	SYM	SYM	_	47	_	_	start_char=3523|end_char=3525
49	1	1	NUM	LS	NumForm=Digit|NumType=Card	48	_	_	SpaceAfter=No|start_char=3526|end_char=3527
50	.	.	PUNCT	.	_	49	_	_	start_char=3527|end_char=3528
51	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	50	_	_	start_char=3529|end_char=3531
52	shall	shall	AUX	MD	VerbForm=Fin	51	_	_	start_char=3532|end_char=3537
53	first	first	ADV	RB	Degree=Pos|NumForm=Word|NumType=Ord	52	_	_	start_char=3538|end_char=3543
54	prove	prove	VERB	VB	VerbForm=Inf	53	_	_	start_char=3544|end_char=3549
55	that	that	SCONJ	IN	_	54	_	_	SpaceAfter=No|start_char=3550|end_char=3554
56	,	,	PUNCT	,	_	55	_	_	start_char=3554|end_char=3555
57	with	with	ADP	IN	_	56	_	_	start_char=3556|end_char=3560
58	high	high	ADJ	JJ	Degree=Pos	57	_	_	start_char=3561|end_char=3565
59	probability	probability	NOUN	NN	Number=Sing	58	_	_	start_char=3566|end_char=3577
60	over	over	ADP	IN	_	59	_	_	start_char=3578|end_char=3582
61	the	the	DET	DT	Definite=Def|PronType=Art	60	_	_	start_char=3583|end_char=3586
62	choice	choice	NOUN	NN	Number=Sing	61	_	_	start_char=3587|end_char=3593
63	of	of	ADP	IN	_	62	_	_	start_char=3594|end_char=3596
64	the	the	DET	DT	Definite=Def|PronType=Art	63	_	_	start_char=3597|end_char=3600
65	training	training	NOUN	NN	Number=Sing	64	_	_	start_char=3601|end_char=3609
66	points	point	NOUN	NNS	Number=Plur	65	_	_	SpaceAfter=No|start_char=3610|end_char=3616
67	,	,	PUNCT	,	_	66	_	_	start_char=3616|end_char=3617
68	the	the	DET	DT	Definite=Def|PronType=Art	67	_	_	start_char=3618|end_char=3621
69	learned	learn	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	68	_	_	start_char=3622|end_char=3629
70	combination	combination	NOUN	NN	Number=Sing	69	_	_	start_char=3630|end_char=3641
71	vector	vector	NOUN	NN	Number=Sing	70	_	_	start_char=3642|end_char=3648
72	μ	μ	NOUN	NN	Number=Sing	71	_	_	start_char=3649|end_char=3650
73	will	will	AUX	MD	VerbForm=Fin	72	_	_	start_char=3651|end_char=3655
74	give	give	VERB	VB	VerbForm=Inf	73	_	_	start_char=3656|end_char=3660
75	us	we	PRON	PRP	Case=Acc|Number=Plur|Person=1|PronType=Prs	74	_	_	start_char=3661|end_char=3663
76	a	a	DET	DT	Definite=Ind|PronType=Art	75	_	_	start_char=3664|end_char=3665
77	kernel	kernel	NOUN	NN	Number=Sing	76	_	_	start_char=3666|end_char=3672
78	k	k	NOUN	NN	Number=Sing	77	_	_	start_char=3673|end_char=3674
79	μ	'	PUNCT	HYPH	_	78	_	_	start_char=3675|end_char=3676
80	that	that	PRON	WDT	PronType=Rel	79	_	_	start_char=3677|end_char=3681
81	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	80	_	_	start_char=3682|end_char=3684
82	ǫ	ǫ	SYM	SYM	_	81	_	_	start_char=3685|end_char=3686
83	+	+	SYM	SYM	_	82	_	_	start_char=3687|end_char=3688
84	ǫ	ǫ	SYM	SYM	_	83	_	_	start_char=3689|end_char=3690
85	1	1	NUM	CD	NumForm=Digit|NumType=Card	84	_	_	start_char=3691|end_char=3692
86	,	,	PUNCT	,	_	85	_	_	start_char=3693|end_char=3694
87	1	1	NUM	CD	NumForm=Digit|NumType=Card	86	_	_	start_char=3695|end_char=3696
88	μ	'	PUNCT	,	_	87	_	_	SpaceAfter=No|start_char=3697|end_char=3698
89	,	,	PUNCT	,	_	88	_	_	SpaceAfter=No|start_char=3698|end_char=3699
90	κ	κ	NOUN	NN	Number=Sing	89	_	_	start_char=3699|end_char=3700
91	-	-	PUNCT	HYPH	_	90	_	_	SpaceAfter=No|start_char=3701|end_char=3702
92	kernel	kernel	NOUN	NN	Number=Sing	91	_	_	start_char=3702|end_char=3708
93	good	good	ADJ	JJ	Degree=Pos	92	_	_	start_char=3709|end_char=3713
94	where	where	ADV	WRB	PronType=Int	93	_	_	start_char=3714|end_char=3719
95	ǫ	ǫ	SYM	SYM	_	94	_	_	start_char=3720|end_char=3721
96	1	1	NUM	CD	NumForm=Digit|NumType=Card	95	_	_	start_char=3722|end_char=3723
97	>	>	PUNCT	-RRB-	_	96	_	_	start_char=3724|end_char=3725
98	0	0	NUM	CD	NumForm=Digit|NumType=Card	97	_	_	start_char=3726|end_char=3727
99	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	98	_	_	start_char=3728|end_char=3730
100	a	a	DET	DT	Definite=Ind|PronType=Art	99	_	_	start_char=3731|end_char=3732
101	quantity	quantity	NOUN	NN	Number=Sing	100	_	_	start_char=3733|end_char=3741
102	that	that	PRON	WDT	PronType=Rel	101	_	_	start_char=3742|end_char=3746
103	can	can	AUX	MD	VerbForm=Fin	102	_	_	start_char=3747|end_char=3750
104	be	be	AUX	VB	VerbForm=Inf	103	_	_	start_char=3751|end_char=3753
105	made	make	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	104	_	_	start_char=3754|end_char=3758
106	arbitrarily	arbitrarily	ADV	RB	_	105	_	_	start_char=3759|end_char=3770
107	small	small	ADJ	JJ	Degree=Pos	106	_	_	SpaceAfter=No|start_char=3771|end_char=3776
108	.	.	PUNCT	.	_	107	_	_	start_char=3776|end_char=3777

# text = 1 we note that [6] includes the terms [1µ, z(xi, xi) ] + into the empirical risk as well.
# sent_id = 13
1	1	1	NUM	LS	NumForm=Digit|NumType=Card	0	_	_	start_char=3778|end_char=3779
2	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	1	_	_	start_char=3780|end_char=3782
3	note	note	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	2	_	_	start_char=3783|end_char=3787
4	that	that	SCONJ	IN	_	3	_	_	start_char=3788|end_char=3792
5	[	[	PUNCT	-LRB-	_	4	_	_	SpaceAfter=No|start_char=3793|end_char=3794
6	6	6	NUM	CD	NumForm=Digit|NumType=Card	5	_	_	SpaceAfter=No|start_char=3794|end_char=3795
7	]	]	PUNCT	-RRB-	_	6	_	_	start_char=3795|end_char=3796
8	includes	include	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	_	_	start_char=3797|end_char=3805
9	the	the	DET	DT	Definite=Def|PronType=Art	8	_	_	start_char=3806|end_char=3809
10	terms	term	NOUN	NNS	Number=Plur	9	_	_	start_char=3810|end_char=3815
11	[	[	PUNCT	-LRB-	_	10	_	_	SpaceAfter=No|start_char=3816|end_char=3817
12	1	1	NUM	CD	NumForm=Digit|NumType=Card	11	_	_	SpaceAfter=No|start_char=3817|end_char=3818
13	µ	µ	NOUN	NN	Number=Sing	12	_	_	SpaceAfter=No|start_char=3818|end_char=3819
14	,	,	PUNCT	,	_	13	_	_	start_char=3819|end_char=3820
15	z(	z(	NOUN	NN	Number=Sing	14	_	_	SpaceAfter=No|start_char=3821|end_char=3823
16	xi	xi	NOUN	NN	Number=Sing	15	_	_	SpaceAfter=No|start_char=3823|end_char=3825
17	,	,	PUNCT	,	_	16	_	_	start_char=3825|end_char=3826
18	xi	xi	NOUN	NN	Number=Sing	17	_	_	SpaceAfter=No|start_char=3827|end_char=3829
19	)	)	PUNCT	-RRB-	_	18	_	_	start_char=3829|end_char=3830
20	]	]	PUNCT	-RRB-	_	19	_	_	start_char=3831|end_char=3832
21	+	+	SYM	SYM	_	20	_	_	start_char=3833|end_char=3834
22	into	into	ADP	IN	_	21	_	_	start_char=3835|end_char=3839
23	the	the	DET	DT	Definite=Def|PronType=Art	22	_	_	start_char=3840|end_char=3843
24	empirical	empirical	ADJ	JJ	Degree=Pos	23	_	_	start_char=3844|end_char=3853
25	risk	risk	NOUN	NN	Number=Sing	24	_	_	start_char=3854|end_char=3858
26	as	as	ADV	RB	ExtPos=ADV	25	_	_	start_char=3859|end_char=3861
27	well	well	ADV	RB	Degree=Pos	26	_	_	SpaceAfter=No|start_char=3862|end_char=3866
28	.	.	PUNCT	.	_	27	_	_	start_char=3866|end_char=3867

# text = this does not change the asymptotics of our analysis except for causing a bit of notational annoyance.
# sent_id = 14
1	this	this	PRON	DT	Number=Sing|PronType=Dem	0	_	_	start_char=3868|end_char=3872
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	1	_	_	start_char=3873|end_char=3877
3	not	not	PART	RB	Polarity=Neg	2	_	_	start_char=3878|end_char=3881
4	change	change	VERB	VB	VerbForm=Inf	3	_	_	start_char=3882|end_char=3888
5	the	the	DET	DT	Definite=Def|PronType=Art	4	_	_	start_char=3889|end_char=3892
6	asymptotics	asymptotics	NOUN	NNS	Number=Plur	5	_	_	start_char=3893|end_char=3904
7	of	of	ADP	IN	_	6	_	_	start_char=3905|end_char=3907
8	our	our	PRON	PRP$	Case=Gen|Number=Plur|Person=1|Poss=Yes|PronType=Prs	7	_	_	start_char=3908|end_char=3911
9	analysis	analysis	NOUN	NN	Number=Sing	8	_	_	start_char=3912|end_char=3920
10	except	except	SCONJ	IN	_	9	_	_	start_char=3921|end_char=3927
11	for	for	SCONJ	IN	_	10	_	_	start_char=3928|end_char=3931
12	causing	cause	VERB	VBG	Tense=Pres|VerbForm=Part	11	_	_	start_char=3932|end_char=3939
13	a	a	DET	DT	Definite=Ind|PronType=Art	12	_	_	start_char=3940|end_char=3941
14	bit	bit	NOUN	NN	Number=Sing	13	_	_	start_char=3942|end_char=3945
15	of	of	ADP	IN	_	14	_	_	start_char=3946|end_char=3948
16	notational	notational	ADJ	JJ	Degree=Pos	15	_	_	start_char=3949|end_char=3959
17	annoyance	annoyance	NOUN	NN	Number=Sing	16	_	_	SpaceAfter=No|start_char=3960|end_char=3969
18	.	.	PUNCT	.	_	17	_	_	start_char=3969|end_char=3970

# text = in order to account for this term, the true risk functional will have to include an additional term r add (µ) := e (x,y)∼d [1 -kµ(x, x)] + . this will add a negligible term to the uniform convergence bound because we will have to consider the convergence of the term radd (µ) := 2 n(n+1) 1≤i≤n [1µ, z(xi, xi) ] + to r add . however, from thereon, the analysis will remain unaffected since r add (µ) ≥ 0 so a combination µ having true risk r(µ) + r add (µ) ≤ ǫ will still give a kernel kµ that is ǫ, 1 µ,κ -kernel good.
# sent_id = 15
1	in	in	SCONJ	IN	_	0	_	_	start_char=3971|end_char=3973
2	order	order	NOUN	NN	Number=Sing	1	_	_	start_char=3974|end_char=3979
3	to	to	PART	TO	_	2	_	_	start_char=3980|end_char=3982
4	account	account	VERB	VB	VerbForm=Inf	3	_	_	start_char=3983|end_char=3990
5	for	for	ADP	IN	_	4	_	_	start_char=3991|end_char=3994
6	this	this	DET	DT	Number=Sing|PronType=Dem	5	_	_	start_char=3995|end_char=3999
7	term	term	NOUN	NN	Number=Sing	6	_	_	SpaceAfter=No|start_char=4000|end_char=4004
8	,	,	PUNCT	,	_	7	_	_	start_char=4004|end_char=4005
9	the	the	DET	DT	Definite=Def|PronType=Art	8	_	_	start_char=4006|end_char=4009
10	true	true	ADJ	JJ	Degree=Pos	9	_	_	start_char=4010|end_char=4014
11	risk	risk	NOUN	NN	Number=Sing	10	_	_	start_char=4015|end_char=4019
12	functional	functional	ADJ	JJ	Degree=Pos	11	_	_	start_char=4020|end_char=4030
13	will	will	AUX	MD	VerbForm=Fin	12	_	_	start_char=4031|end_char=4035
14	have	have	VERB	VB	VerbForm=Inf	13	_	_	start_char=4036|end_char=4040
15	to	to	PART	TO	_	14	_	_	start_char=4041|end_char=4043
16	include	include	VERB	VB	VerbForm=Inf	15	_	_	start_char=4044|end_char=4051
17	an	a	DET	DT	Definite=Ind|PronType=Art	16	_	_	start_char=4052|end_char=4054
18	additional	additional	ADJ	JJ	Degree=Pos	17	_	_	start_char=4055|end_char=4065
19	term	term	NOUN	NN	Number=Sing	18	_	_	start_char=4066|end_char=4070
20	r	be	X	FW	_	19	_	_	start_char=4071|end_char=4072
21	add	add	NOUN	NN	Number=Sing	20	_	_	start_char=4073|end_char=4076
22	(	(	PUNCT	-LRB-	_	21	_	_	SpaceAfter=No|start_char=4077|end_char=4078
23	µ	µ	NOUN	NN	Number=Sing	22	_	_	SpaceAfter=No|start_char=4078|end_char=4079
24	)	)	PUNCT	-RRB-	_	23	_	_	start_char=4079|end_char=4080
25	:=	:=	PUNCT	NFP	_	24	_	_	start_char=4081|end_char=4083
26	e	e	NOUN	NN	Number=Sing	25	_	_	start_char=4084|end_char=4085
27	(	(	PUNCT	-LRB-	_	26	_	_	SpaceAfter=No|start_char=4086|end_char=4087
28	x	x	NOUN	NN	Number=Sing	27	_	_	SpaceAfter=No|start_char=4087|end_char=4088
29	,	,	PUNCT	,	_	28	_	_	SpaceAfter=No|start_char=4088|end_char=4089
30	y	y	NOUN	NN	Number=Sing	29	_	_	SpaceAfter=No|start_char=4089|end_char=4090
31	)	)	PUNCT	-RRB-	_	30	_	_	SpaceAfter=No|start_char=4090|end_char=4091
32	∼d	∼d	NOUN	NN	Number=Sing	31	_	_	start_char=4091|end_char=4093
33	[	[	PUNCT	-LRB-	_	32	_	_	SpaceAfter=No|start_char=4094|end_char=4095
34	1	1	NUM	CD	NumForm=Digit|NumType=Card	33	_	_	start_char=4095|end_char=4096
35	-	-	SYM	SYM	_	34	_	_	SpaceAfter=No|start_char=4097|end_char=4098
36	kµ(	kµ(	NOUN	NN	Number=Sing	35	_	_	SpaceAfter=No|start_char=4098|end_char=4101
37	x	x	NOUN	NN	Number=Sing	36	_	_	SpaceAfter=No|start_char=4101|end_char=4102
38	,	,	PUNCT	,	_	37	_	_	start_char=4102|end_char=4103
39	x	x	NOUN	NN	Number=Sing	38	_	_	SpaceAfter=No|start_char=4104|end_char=4105
40	)	)	PUNCT	-RRB-	_	39	_	_	SpaceAfter=No|start_char=4105|end_char=4106
41	]	]	PUNCT	-RRB-	_	40	_	_	start_char=4106|end_char=4107
42	+	+	SYM	SYM	_	41	_	_	start_char=4108|end_char=4109
43	.	.	PUNCT	.	_	42	_	_	start_char=4110|end_char=4111
44	this	this	PRON	DT	Number=Sing|PronType=Dem	43	_	_	start_char=4112|end_char=4116
45	will	will	AUX	MD	VerbForm=Fin	44	_	_	start_char=4117|end_char=4121
46	add	add	VERB	VB	VerbForm=Inf	45	_	_	start_char=4122|end_char=4125
47	a	a	DET	DT	Definite=Ind|PronType=Art	46	_	_	start_char=4126|end_char=4127
48	negligible	negligible	ADJ	JJ	Degree=Pos	47	_	_	start_char=4128|end_char=4138
49	term	term	NOUN	NN	Number=Sing	48	_	_	start_char=4139|end_char=4143
50	to	to	ADP	IN	_	49	_	_	start_char=4144|end_char=4146
51	the	the	DET	DT	Definite=Def|PronType=Art	50	_	_	start_char=4147|end_char=4150
52	uniform	uniform	ADJ	JJ	Degree=Pos	51	_	_	start_char=4151|end_char=4158
53	convergence	convergence	NOUN	NN	Number=Sing	52	_	_	start_char=4159|end_char=4170
54	bound	bind	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	53	_	_	start_char=4171|end_char=4176
55	because	because	SCONJ	IN	_	54	_	_	start_char=4177|end_char=4184
56	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	55	_	_	start_char=4185|end_char=4187
57	will	will	AUX	MD	VerbForm=Fin	56	_	_	start_char=4188|end_char=4192
58	have	have	VERB	VB	VerbForm=Inf	57	_	_	start_char=4193|end_char=4197
59	to	to	PART	TO	_	58	_	_	start_char=4198|end_char=4200
60	consider	consider	VERB	VB	VerbForm=Inf	59	_	_	start_char=4201|end_char=4209
61	the	the	DET	DT	Definite=Def|PronType=Art	60	_	_	start_char=4210|end_char=4213
62	convergence	convergence	NOUN	NN	Number=Sing	61	_	_	start_char=4214|end_char=4225
63	of	of	ADP	IN	_	62	_	_	start_char=4226|end_char=4228
64	the	the	DET	DT	Definite=Def|PronType=Art	63	_	_	start_char=4229|end_char=4232
65	term	term	NOUN	NN	Number=Sing	64	_	_	start_char=4233|end_char=4237
66	radd	radd	NOUN	NN	Number=Sing	65	_	_	start_char=4238|end_char=4242
67	(	(	PUNCT	-LRB-	_	66	_	_	SpaceAfter=No|start_char=4243|end_char=4244
68	µ	µ	NOUN	NN	Number=Sing	67	_	_	SpaceAfter=No|start_char=4244|end_char=4245
69	)	)	PUNCT	-RRB-	_	68	_	_	start_char=4245|end_char=4246
70	:=	:=	PUNCT	NFP	_	69	_	_	start_char=4247|end_char=4249
71	2	2	NUM	CD	NumForm=Digit|NumType=Card	70	_	_	start_char=4250|end_char=4251
72	n	n	NOUN	NN	Number=Sing	71	_	_	SpaceAfter=No|start_char=4252|end_char=4253
73	(	(	PUNCT	-LRB-	_	72	_	_	SpaceAfter=No|start_char=4253|end_char=4254
74	n	n	NOUN	NN	Number=Sing	73	_	_	SpaceAfter=No|start_char=4254|end_char=4255
75	+1	+1	NOUN	NN	Number=Sing	74	_	_	SpaceAfter=No|start_char=4255|end_char=4257
76	)	)	PUNCT	-RRB-	_	75	_	_	start_char=4257|end_char=4258
77	1	1	NUM	CD	NumForm=Digit|NumType=Card	76	_	_	SpaceAfter=No|start_char=4259|end_char=4260
78	≤i≤n	≤i≤n	NOUN	NN	Number=Sing	77	_	_	start_char=4260|end_char=4264
79	[	[	PUNCT	-LRB-	_	78	_	_	SpaceAfter=No|start_char=4265|end_char=4266
80	1	1	NUM	CD	NumForm=Digit|NumType=Card	79	_	_	SpaceAfter=No|start_char=4266|end_char=4267
81	µ	µ	NOUN	NN	Number=Sing	80	_	_	SpaceAfter=No|start_char=4267|end_char=4268
82	,	,	PUNCT	,	_	81	_	_	start_char=4268|end_char=4269
83	z(	z(	X	FW	_	82	_	_	SpaceAfter=No|start_char=4270|end_char=4272
84	xi	xi	NOUN	NN	Number=Sing	83	_	_	SpaceAfter=No|start_char=4272|end_char=4274
85	,	,	PUNCT	,	_	84	_	_	start_char=4274|end_char=4275
86	xi	xi	NOUN	NN	Number=Sing	85	_	_	SpaceAfter=No|start_char=4276|end_char=4278
87	)	)	PUNCT	-RRB-	_	86	_	_	start_char=4278|end_char=4279
88	]	]	PUNCT	-RRB-	_	87	_	_	start_char=4280|end_char=4281
89	+	+	SYM	SYM	_	88	_	_	start_char=4282|end_char=4283
90	to	to	PART	TO	_	89	_	_	start_char=4284|end_char=4286
91	r	be	AUX	VB	Mood=Ind|Tense=Pres|VerbForm=Fin	90	_	_	start_char=4287|end_char=4288
92	add	add	VERB	VB	VerbForm=Inf	91	_	_	start_char=4289|end_char=4292
93	.	.	PUNCT	.	_	92	_	_	start_char=4293|end_char=4294
94	however	however	ADV	RB	_	93	_	_	SpaceAfter=No|start_char=4295|end_char=4302
95	,	,	PUNCT	,	_	94	_	_	start_char=4302|end_char=4303
96	from	from	ADP	IN	_	95	_	_	start_char=4304|end_char=4308
97	thereon	thereon	ADV	RB	_	96	_	_	SpaceAfter=No|start_char=4309|end_char=4316
98	,	,	PUNCT	,	_	97	_	_	start_char=4316|end_char=4317
99	the	the	DET	DT	Definite=Def|PronType=Art	98	_	_	start_char=4318|end_char=4321
100	analysis	analysis	NOUN	NN	Number=Sing	99	_	_	start_char=4322|end_char=4330
101	will	will	AUX	MD	VerbForm=Fin	100	_	_	start_char=4331|end_char=4335
102	remain	remain	VERB	VB	VerbForm=Inf	101	_	_	start_char=4336|end_char=4342
103	unaffected	unaffected	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	102	_	_	start_char=4343|end_char=4353
104	since	since	ADP	IN	_	103	_	_	start_char=4354|end_char=4359
105	r	be	X	LS	_	104	_	_	start_char=4360|end_char=4361
106	add	add	VERB	VB	Mood=Imp|VerbForm=Fin	105	_	_	start_char=4362|end_char=4365
107	(	(	PUNCT	-LRB-	_	106	_	_	SpaceAfter=No|start_char=4366|end_char=4367
108	µ	µ	NOUN	NN	Number=Sing	107	_	_	SpaceAfter=No|start_char=4367|end_char=4368
109	)	)	PUNCT	-RRB-	_	108	_	_	start_char=4368|end_char=4369
110	≥	≥	NOUN	NN	Number=Sing	109	_	_	start_char=4370|end_char=4371
111	0	0	NUM	CD	NumForm=Digit|NumType=Card	110	_	_	start_char=4372|end_char=4373
112	so	so	ADV	RB	_	111	_	_	start_char=4374|end_char=4376
113	a	a	DET	DT	Definite=Ind|PronType=Art	112	_	_	start_char=4377|end_char=4378
114	combination	combination	NOUN	NN	Number=Sing	113	_	_	start_char=4379|end_char=4390
115	µ	µ	NOUN	NN	Number=Sing	114	_	_	start_char=4391|end_char=4392
116	having	have	VERB	VBG	VerbForm=Ger	115	_	_	start_char=4393|end_char=4399
117	true	true	ADJ	JJ	Degree=Pos	116	_	_	start_char=4400|end_char=4404
118	risk	risk	NOUN	NN	Number=Sing	117	_	_	start_char=4405|end_char=4409
119	r	be	X	GW	_	118	_	_	SpaceAfter=No|start_char=4410|end_char=4411
120	(µ	(µ	NOUN	NN	Number=Sing	119	_	_	SpaceAfter=No|start_char=4411|end_char=4413
121	)	)	PUNCT	-RRB-	_	120	_	_	start_char=4413|end_char=4414
122	+	+	SYM	SYM	_	121	_	_	start_char=4415|end_char=4416
123	r	be	X	AFX	_	122	_	_	start_char=4417|end_char=4418
124	add	add	NOUN	NN	Number=Sing	123	_	_	start_char=4419|end_char=4422
125	(	(	PUNCT	-LRB-	_	124	_	_	SpaceAfter=No|start_char=4423|end_char=4424
126	µ	µ	NOUN	NN	Number=Sing	125	_	_	SpaceAfter=No|start_char=4424|end_char=4425
127	)	)	PUNCT	-RRB-	_	126	_	_	start_char=4425|end_char=4426
128	≤	≤	PUNCT	,	_	127	_	_	start_char=4427|end_char=4428
129	ǫ	ǫ	PUNCT	,	_	128	_	_	start_char=4429|end_char=4430
130	will	will	AUX	MD	VerbForm=Fin	129	_	_	start_char=4431|end_char=4435
131	still	still	ADV	RB	_	130	_	_	start_char=4436|end_char=4441
132	give	give	VERB	VB	VerbForm=Inf	131	_	_	start_char=4442|end_char=4446
133	a	a	DET	DT	Definite=Ind|PronType=Art	132	_	_	start_char=4447|end_char=4448
134	kernel	kernel	NOUN	NN	Number=Sing	133	_	_	start_char=4449|end_char=4455
135	kµ	kµ	NOUN	NN	Number=Sing	134	_	_	start_char=4456|end_char=4458
136	that	that	PRON	WDT	PronType=Rel	135	_	_	start_char=4459|end_char=4463
137	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	136	_	_	start_char=4464|end_char=4466
138	ǫ	ǫ	PUNCT	:	_	137	_	_	SpaceAfter=No|start_char=4467|end_char=4468
139	,	,	PUNCT	,	_	138	_	_	start_char=4468|end_char=4469
140	1	1	NUM	CD	NumForm=Digit|NumType=Card	139	_	_	start_char=4470|end_char=4471
141	µ	µ	NOUN	NN	Number=Sing	140	_	_	SpaceAfter=No|start_char=4472|end_char=4473
142	,	,	PUNCT	,	_	141	_	_	SpaceAfter=No|start_char=4473|end_char=4474
143	κ	κ	NOUN	NN	Number=Sing	142	_	_	start_char=4474|end_char=4475
144	-	-	PUNCT	HYPH	_	143	_	_	SpaceAfter=No|start_char=4476|end_char=4477
145	kernel	kernel	NOUN	NN	Number=Sing	144	_	_	start_char=4477|end_char=4483
146	good	good	ADJ	JJ	Degree=Pos	145	_	_	SpaceAfter=No|start_char=4484|end_char=4488
147	.	.	PUNCT	.	_	146	_	_	start_char=4488|end_char=4489

# text = 2. we shall then prove that given that there exists a good combination of kernels in the k-space, with very high probability ǫ will be very small.
# sent_id = 16
1	2	2	NUM	LS	NumForm=Digit|NumType=Card	0	_	_	SpaceAfter=No|start_char=4490|end_char=4491
2	.	.	PUNCT	.	_	1	_	_	start_char=4491|end_char=4492
3	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	2	_	_	start_char=4493|end_char=4495
4	shall	shall	AUX	MD	VerbForm=Fin	3	_	_	start_char=4496|end_char=4501
5	then	then	ADV	RB	PronType=Dem	4	_	_	start_char=4502|end_char=4506
6	prove	prove	VERB	VB	VerbForm=Inf	5	_	_	start_char=4507|end_char=4512
7	that	that	SCONJ	IN	_	6	_	_	start_char=4513|end_char=4517
8	given	give	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	7	_	_	start_char=4518|end_char=4523
9	that	that	SCONJ	IN	_	8	_	_	start_char=4524|end_char=4528
10	there	there	PRON	EX	_	9	_	_	start_char=4529|end_char=4534
11	exists	exist	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	_	_	start_char=4535|end_char=4541
12	a	a	DET	DT	Definite=Ind|PronType=Art	11	_	_	start_char=4542|end_char=4543
13	good	good	ADJ	JJ	Degree=Pos	12	_	_	start_char=4544|end_char=4548
14	combination	combination	NOUN	NN	Number=Sing	13	_	_	start_char=4549|end_char=4560
15	of	of	ADP	IN	_	14	_	_	start_char=4561|end_char=4563
16	kernels	kernel	NOUN	NNS	Number=Plur	15	_	_	start_char=4564|end_char=4571
17	in	in	ADP	IN	_	16	_	_	start_char=4572|end_char=4574
18	the	the	DET	DT	Definite=Def|PronType=Art	17	_	_	start_char=4575|end_char=4578
19	k-	k-	NOUN	NN	Number=Sing	18	_	_	SpaceAfter=No|start_char=4579|end_char=4581
20	space	space	NOUN	NN	Number=Sing	19	_	_	SpaceAfter=No|start_char=4581|end_char=4586
21	,	,	PUNCT	,	_	20	_	_	start_char=4586|end_char=4587
22	with	with	ADP	IN	_	21	_	_	start_char=4588|end_char=4592
23	very	very	ADV	RB	_	22	_	_	start_char=4593|end_char=4597
24	high	high	ADJ	JJ	Degree=Pos	23	_	_	start_char=4598|end_char=4602
25	probability	probability	NOUN	NN	Number=Sing	24	_	_	start_char=4603|end_char=4614
26	ǫ	ǫ	PUNCT	,	_	25	_	_	start_char=4615|end_char=4616
27	will	will	AUX	MD	VerbForm=Fin	26	_	_	start_char=4617|end_char=4621
28	be	be	AUX	VB	VerbForm=Inf	27	_	_	start_char=4622|end_char=4624
29	very	very	ADV	RB	_	28	_	_	start_char=4625|end_char=4629
30	small	small	ADJ	JJ	Degree=Pos	29	_	_	SpaceAfter=No|start_char=4630|end_char=4635
31	.	.	PUNCT	.	_	30	_	_	start_char=4635|end_char=4636

# text = this we will prove by showing a converse of the inequality proved in the first step.
# sent_id = 17
1	this	this	PRON	DT	Number=Sing|PronType=Dem	0	_	_	start_char=4637|end_char=4641
2	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	1	_	_	start_char=4642|end_char=4644
3	will	will	AUX	MD	VerbForm=Fin	2	_	_	start_char=4645|end_char=4649
4	prove	prove	VERB	VB	VerbForm=Inf	3	_	_	start_char=4650|end_char=4655
5	by	by	SCONJ	IN	_	4	_	_	start_char=4656|end_char=4658
6	showing	show	VERB	VBG	Tense=Pres|VerbForm=Part	5	_	_	start_char=4659|end_char=4666
7	a	a	DET	DT	Definite=Ind|PronType=Art	6	_	_	start_char=4667|end_char=4668
8	converse	converse	NOUN	NN	Number=Sing	7	_	_	start_char=4669|end_char=4677
9	of	of	ADP	IN	_	8	_	_	start_char=4678|end_char=4680
10	the	the	DET	DT	Definite=Def|PronType=Art	9	_	_	start_char=4681|end_char=4684
11	inequality	inequality	NOUN	NN	Number=Sing	10	_	_	start_char=4685|end_char=4695
12	proved	prove	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	11	_	_	start_char=4696|end_char=4702
13	in	in	ADP	IN	_	12	_	_	start_char=4703|end_char=4705
14	the	the	DET	DT	Definite=Def|PronType=Art	13	_	_	start_char=4706|end_char=4709
15	first	first	ADJ	JJ	Degree=Pos|NumForm=Word|NumType=Ord	14	_	_	start_char=4710|end_char=4715
16	step	step	NOUN	NN	Number=Sing	15	_	_	SpaceAfter=No|start_char=4716|end_char=4720
17	.	.	PUNCT	.	_	16	_	_	start_char=4720|end_char=4721

# text = this will allow us to give oracle inequalities for the kernel goodness of the learned combination.
# sent_id = 18
1	this	this	PRON	DT	Number=Sing|PronType=Dem	0	_	_	start_char=4722|end_char=4726
2	will	will	AUX	MD	VerbForm=Fin	1	_	_	start_char=4727|end_char=4731
3	allow	allow	VERB	VB	VerbForm=Inf	2	_	_	start_char=4732|end_char=4737
4	us	we	PRON	PRP	Case=Acc|Number=Plur|Person=1|PronType=Prs	3	_	_	start_char=4738|end_char=4740
5	to	to	PART	TO	_	4	_	_	start_char=4741|end_char=4743
6	give	give	VERB	VB	VerbForm=Inf	5	_	_	start_char=4744|end_char=4748
7	oracle	oracle	NOUN	NN	Number=Sing	6	_	_	start_char=4749|end_char=4755
8	inequalities	inequality	NOUN	NNS	Number=Plur	7	_	_	start_char=4756|end_char=4768
9	for	for	ADP	IN	_	8	_	_	start_char=4769|end_char=4772
10	the	the	DET	DT	Definite=Def|PronType=Art	9	_	_	start_char=4773|end_char=4776
11	kernel	kernel	NOUN	NN	Number=Sing	10	_	_	start_char=4777|end_char=4783
12	goodness	goodness	NOUN	NN	Number=Sing	11	_	_	start_char=4784|end_char=4792
13	of	of	ADP	IN	_	12	_	_	start_char=4793|end_char=4795
14	the	the	DET	DT	Definite=Def|PronType=Art	13	_	_	start_char=4796|end_char=4799
15	learned	learn	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	14	_	_	start_char=4800|end_char=4807
16	combination	combination	NOUN	NN	Number=Sing	15	_	_	SpaceAfter=No|start_char=4808|end_char=4819
17	.	.	PUNCT	.	_	16	_	_	SpaceAfter=No|start_char=4819|end_char=4820

