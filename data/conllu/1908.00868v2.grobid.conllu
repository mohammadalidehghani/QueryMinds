# text = machine learning as ecology machine learning methods have had spectacular success on numerous problems.
# sent_id = 0
1	machine	machine	NOUN	NN	Number=Sing	0	_	_	start_char=0|end_char=7
2	learning	learning	NOUN	NN	Number=Sing	1	_	_	start_char=8|end_char=16
3	as	as	SCONJ	IN	_	2	_	_	start_char=17|end_char=19
4	ecology	ecology	NOUN	NN	Number=Sing	3	_	_	start_char=20|end_char=27
5	machine	machine	NOUN	NN	Number=Sing	4	_	_	start_char=28|end_char=35
6	learning	learning	NOUN	NN	Number=Sing	5	_	_	start_char=36|end_char=44
7	methods	method	NOUN	NNS	Number=Plur	6	_	_	start_char=45|end_char=52
8	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	7	_	_	start_char=53|end_char=57
9	had	have	VERB	VBN	Tense=Past|VerbForm=Part	8	_	_	start_char=58|end_char=61
10	spectacular	spectacular	ADJ	JJ	Degree=Pos	9	_	_	start_char=62|end_char=73
11	success	success	NOUN	NN	Number=Sing	10	_	_	start_char=74|end_char=81
12	on	on	ADP	IN	_	11	_	_	start_char=82|end_char=84
13	numerous	numerous	ADJ	JJ	Degree=Pos	12	_	_	start_char=85|end_char=93
14	problems	problem	NOUN	NNS	Number=Plur	13	_	_	SpaceAfter=No|start_char=94|end_char=102
15	.	.	PUNCT	.	_	14	_	_	start_char=102|end_char=103

# text = here we show that a prominent class of learning algorithms -including support vector machines (svms) -have a natural interpretation in terms of ecological dynamics.
# sent_id = 1
1	here	here	ADV	RB	PronType=Dem	0	_	_	start_char=104|end_char=108
2	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	1	_	_	start_char=109|end_char=111
3	show	show	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	2	_	_	start_char=112|end_char=116
4	that	that	SCONJ	IN	_	3	_	_	start_char=117|end_char=121
5	a	a	DET	DT	Definite=Ind|PronType=Art	4	_	_	start_char=122|end_char=123
6	prominent	prominent	ADJ	JJ	Degree=Pos	5	_	_	start_char=124|end_char=133
7	class	class	NOUN	NN	Number=Sing	6	_	_	start_char=134|end_char=139
8	of	of	ADP	IN	_	7	_	_	start_char=140|end_char=142
9	learning	learning	NOUN	NN	Number=Sing	8	_	_	start_char=143|end_char=151
10	algorithms	algorithm	NOUN	NNS	Number=Plur	9	_	_	start_char=152|end_char=162
11	-	-	PUNCT	,	_	10	_	_	SpaceAfter=No|start_char=163|end_char=164
12	including	include	VERB	VBG	Tense=Pres|VerbForm=Part	11	_	_	start_char=164|end_char=173
13	support	support	NOUN	NN	Number=Sing	12	_	_	start_char=174|end_char=181
14	vector	vector	NOUN	NN	Number=Sing	13	_	_	start_char=182|end_char=188
15	machines	machine	NOUN	NNS	Number=Plur	14	_	_	start_char=189|end_char=197
16	(	(	PUNCT	-LRB-	_	15	_	_	SpaceAfter=No|start_char=198|end_char=199
17	svms	svm	NOUN	NNS	Number=Plur	16	_	_	SpaceAfter=No|start_char=199|end_char=203
18	)	)	PUNCT	-RRB-	_	17	_	_	start_char=203|end_char=204
19	-	-	PUNCT	,	_	18	_	_	SpaceAfter=No|start_char=205|end_char=206
20	have	have	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	19	_	_	start_char=206|end_char=210
21	a	a	DET	DT	Definite=Ind|PronType=Art	20	_	_	start_char=211|end_char=212
22	natural	natural	ADJ	JJ	Degree=Pos	21	_	_	start_char=213|end_char=220
23	interpretation	interpretation	NOUN	NN	Number=Sing	22	_	_	start_char=221|end_char=235
24	in	in	ADP	IN	_	23	_	_	start_char=236|end_char=238
25	terms	term	NOUN	NNS	Number=Plur	24	_	_	start_char=239|end_char=244
26	of	of	ADP	IN	_	25	_	_	start_char=245|end_char=247
27	ecological	ecological	ADJ	JJ	Degree=Pos	26	_	_	start_char=248|end_char=258
28	dynamics	dynamic	NOUN	NNS	Number=Plur	27	_	_	SpaceAfter=No|start_char=259|end_char=267
29	.	.	PUNCT	.	_	28	_	_	start_char=267|end_char=268

# text = we use these ideas to design new online svm algorithms that exploit ecological invasions, and benchmark performance using the mnist dataset.
# sent_id = 2
1	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	0	_	_	start_char=269|end_char=271
2	use	use	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	1	_	_	start_char=272|end_char=275
3	these	this	DET	DT	Number=Plur|PronType=Dem	2	_	_	start_char=276|end_char=281
4	ideas	idea	NOUN	NNS	Number=Plur	3	_	_	start_char=282|end_char=287
5	to	to	PART	TO	_	4	_	_	start_char=288|end_char=290
6	design	design	VERB	VB	VerbForm=Inf	5	_	_	start_char=291|end_char=297
7	new	new	ADJ	JJ	Degree=Pos	6	_	_	start_char=298|end_char=301
8	online	online	ADJ	JJ	Degree=Pos	7	_	_	start_char=302|end_char=308
9	svm	svm	NOUN	NN	Number=Sing	8	_	_	start_char=309|end_char=312
10	algorithms	algorithm	NOUN	NNS	Number=Plur	9	_	_	start_char=313|end_char=323
11	that	that	PRON	WDT	PronType=Rel	10	_	_	start_char=324|end_char=328
12	exploit	exploit	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	11	_	_	start_char=329|end_char=336
13	ecological	ecological	ADJ	JJ	Degree=Pos	12	_	_	start_char=337|end_char=347
14	invasions	invasion	NOUN	NNS	Number=Plur	13	_	_	SpaceAfter=No|start_char=348|end_char=357
15	,	,	PUNCT	,	_	14	_	_	start_char=357|end_char=358
16	and	and	CCONJ	CC	_	15	_	_	start_char=359|end_char=362
17	benchmark	benchmark	NOUN	NN	Number=Sing	16	_	_	start_char=363|end_char=372
18	performance	performance	NOUN	NN	Number=Sing	17	_	_	start_char=373|end_char=384
19	using	use	VERB	VBG	VerbForm=Ger	18	_	_	start_char=385|end_char=390
20	the	the	DET	DT	Definite=Def|PronType=Art	19	_	_	start_char=391|end_char=394
21	mnist	mnist	NOUN	NN	Number=Sing	20	_	_	start_char=395|end_char=400
22	dataset	dataset	NOUN	NN	Number=Sing	21	_	_	SpaceAfter=No|start_char=401|end_char=408
23	.	.	PUNCT	.	_	22	_	_	start_char=408|end_char=409

# text = our work provides a new ecological lens through which we can view statistical learning and opens the possibility of designing ecosystems for machine learning.
# sent_id = 3
1	our	our	PRON	PRP$	Case=Gen|Number=Plur|Person=1|Poss=Yes|PronType=Prs	0	_	_	start_char=410|end_char=413
2	work	work	NOUN	NN	Number=Sing	1	_	_	start_char=414|end_char=418
3	provides	provide	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	_	_	start_char=419|end_char=427
4	a	a	DET	DT	Definite=Ind|PronType=Art	3	_	_	start_char=428|end_char=429
5	new	new	ADJ	JJ	Degree=Pos	4	_	_	start_char=430|end_char=433
6	ecological	ecological	ADJ	JJ	Degree=Pos	5	_	_	start_char=434|end_char=444
7	lens	lens	NOUN	NN	Number=Sing	6	_	_	start_char=445|end_char=449
8	through	through	ADP	IN	_	7	_	_	start_char=450|end_char=457
9	which	which	PRON	WDT	PronType=Rel	8	_	_	start_char=458|end_char=463
10	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	9	_	_	start_char=464|end_char=466
11	can	can	AUX	MD	VerbForm=Fin	10	_	_	start_char=467|end_char=470
12	view	view	VERB	VB	VerbForm=Inf	11	_	_	start_char=471|end_char=475
13	statistical	statistical	ADJ	JJ	Degree=Pos	12	_	_	start_char=476|end_char=487
14	learning	learning	NOUN	NN	Number=Sing	13	_	_	start_char=488|end_char=496
15	and	and	CCONJ	CC	_	14	_	_	start_char=497|end_char=500
16	opens	open	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	15	_	_	start_char=501|end_char=506
17	the	the	DET	DT	Definite=Def|PronType=Art	16	_	_	start_char=507|end_char=510
18	possibility	possibility	NOUN	NN	Number=Sing	17	_	_	start_char=511|end_char=522
19	of	of	SCONJ	IN	_	18	_	_	start_char=523|end_char=525
20	designing	design	VERB	VBG	VerbForm=Ger	19	_	_	start_char=526|end_char=535
21	ecosystems	ecosystem	NOUN	NNS	Number=Plur	20	_	_	start_char=536|end_char=546
22	for	for	ADP	IN	_	21	_	_	start_char=547|end_char=550
23	machine	machine	NOUN	NN	Number=Sing	22	_	_	start_char=551|end_char=558
24	learning	learning	NOUN	NN	Number=Sing	23	_	_	SpaceAfter=No|start_char=559|end_char=567
25	.	.	PUNCT	.	_	24	_	_	start_char=567|end_char=568

# text = introduction machine learning (ml) is one of the most exciting and useful areas of modern computer science [1, 2] . one common machine learning task is classification: given labeled data from one or more categories, predict the category of a new, unlabeled data point.
# sent_id = 4
1	introduction	introduction	NOUN	NN	Number=Sing	0	_	_	start_char=569|end_char=581
2	machine	machine	NOUN	NN	Number=Sing	1	_	_	start_char=582|end_char=589
3	learning	learning	NOUN	NN	Number=Sing	2	_	_	start_char=590|end_char=598
4	(	(	PUNCT	-LRB-	_	3	_	_	SpaceAfter=No|start_char=599|end_char=600
5	ml	millileter	NOUN	NN	Number=Sing	4	_	_	SpaceAfter=No|start_char=600|end_char=602
6	)	)	PUNCT	-RRB-	_	5	_	_	start_char=602|end_char=603
7	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	_	_	start_char=604|end_char=606
8	one	one	NUM	CD	NumForm=Word|NumType=Card	7	_	_	start_char=607|end_char=610
9	of	of	ADP	IN	_	8	_	_	start_char=611|end_char=613
10	the	the	DET	DT	Definite=Def|PronType=Art	9	_	_	start_char=614|end_char=617
11	most	most	ADV	RBS	Degree=Sup	10	_	_	start_char=618|end_char=622
12	exciting	exciting	ADJ	JJ	Degree=Pos	11	_	_	start_char=623|end_char=631
13	and	and	CCONJ	CC	_	12	_	_	start_char=632|end_char=635
14	useful	useful	ADJ	JJ	Degree=Pos	13	_	_	start_char=636|end_char=642
15	areas	area	NOUN	NNS	Number=Plur	14	_	_	start_char=643|end_char=648
16	of	of	ADP	IN	_	15	_	_	start_char=649|end_char=651
17	modern	modern	ADJ	JJ	Degree=Pos	16	_	_	start_char=652|end_char=658
18	computer	computer	NOUN	NN	Number=Sing	17	_	_	start_char=659|end_char=667
19	science	science	NOUN	NN	Number=Sing	18	_	_	start_char=668|end_char=675
20	[	[	PUNCT	-LRB-	_	19	_	_	SpaceAfter=No|start_char=676|end_char=677
21	1	1	NUM	CD	NumForm=Digit|NumType=Card	20	_	_	SpaceAfter=No|start_char=677|end_char=678
22	,	,	PUNCT	,	_	21	_	_	start_char=678|end_char=679
23	2	2	NUM	CD	NumForm=Digit|NumType=Card	22	_	_	SpaceAfter=No|start_char=680|end_char=681
24	]	]	PUNCT	-RRB-	_	23	_	_	start_char=681|end_char=682
25	.	.	PUNCT	.	_	24	_	_	start_char=683|end_char=684
26	one	one	NUM	CD	NumForm=Word|NumType=Card	25	_	_	start_char=685|end_char=688
27	common	common	ADJ	JJ	Degree=Pos	26	_	_	start_char=689|end_char=695
28	machine	machine	NOUN	NN	Number=Sing	27	_	_	start_char=696|end_char=703
29	learning	learning	NOUN	NN	Number=Sing	28	_	_	start_char=704|end_char=712
30	task	task	NOUN	NN	Number=Sing	29	_	_	start_char=713|end_char=717
31	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	30	_	_	start_char=718|end_char=720
32	classification	classification	NOUN	NN	Number=Sing	31	_	_	SpaceAfter=No|start_char=721|end_char=735
33	:	:	PUNCT	:	_	32	_	_	start_char=735|end_char=736
34	given	give	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	33	_	_	start_char=737|end_char=742
35	labeled	label	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	34	_	_	start_char=743|end_char=750
36	data	datum	NOUN	NNS	Number=Plur	35	_	_	start_char=751|end_char=755
37	from	from	ADP	IN	_	36	_	_	start_char=756|end_char=760
38	one	one	NUM	CD	NumForm=Word|NumType=Card	37	_	_	start_char=761|end_char=764
39	or	or	CCONJ	CC	_	38	_	_	start_char=765|end_char=767
40	more	more	ADJ	JJR	Degree=Cmp	39	_	_	start_char=768|end_char=772
41	categories	category	NOUN	NNS	Number=Plur	40	_	_	SpaceAfter=No|start_char=773|end_char=783
42	,	,	PUNCT	,	_	41	_	_	start_char=783|end_char=784
43	predict	predict	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	42	_	_	start_char=785|end_char=792
44	the	the	DET	DT	Definite=Def|PronType=Art	43	_	_	start_char=793|end_char=796
45	category	category	NOUN	NN	Number=Sing	44	_	_	start_char=797|end_char=805
46	of	of	ADP	IN	_	45	_	_	start_char=806|end_char=808
47	a	a	DET	DT	Definite=Ind|PronType=Art	46	_	_	start_char=809|end_char=810
48	new	new	ADJ	JJ	Degree=Pos	47	_	_	SpaceAfter=No|start_char=811|end_char=814
49	,	,	PUNCT	,	_	48	_	_	start_char=814|end_char=815
50	unlabeled	unlabeled	ADJ	JJ	Degree=Pos	49	_	_	start_char=816|end_char=825
51	data	datum	NOUN	NN	Number=Sing	50	_	_	start_char=826|end_char=830
52	point	point	NOUN	NN	Number=Sing	51	_	_	SpaceAfter=No|start_char=831|end_char=836
53	.	.	PUNCT	.	_	52	_	_	start_char=836|end_char=837

# text = another common task is to perform outlier detection (i.e. find data points that appear to be irregular).
# sent_id = 5
1	another	another	DET	DT	PronType=Ind	0	_	_	start_char=838|end_char=845
2	common	common	ADJ	JJ	Degree=Pos	1	_	_	start_char=846|end_char=852
3	task	task	NOUN	NN	Number=Sing	2	_	_	start_char=853|end_char=857
4	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	_	_	start_char=858|end_char=860
5	to	to	PART	TO	_	4	_	_	start_char=861|end_char=863
6	perform	perform	VERB	VB	VerbForm=Inf	5	_	_	start_char=864|end_char=871
7	outlier	outlier	ADJ	JJ	Degree=Pos	6	_	_	start_char=872|end_char=879
8	detection	detection	NOUN	NN	Number=Sing	7	_	_	start_char=880|end_char=889
9	(	(	PUNCT	-LRB-	_	8	_	_	SpaceAfter=No|start_char=890|end_char=891
10	i.e.	i.e.	ADV	FW	Abbr=Yes	9	_	_	start_char=891|end_char=895
11	find	find	VERB	VB	VerbForm=Inf	10	_	_	start_char=896|end_char=900
12	data	datum	NOUN	NNS	Number=Plur	11	_	_	start_char=901|end_char=905
13	points	point	NOUN	NNS	Number=Plur	12	_	_	start_char=906|end_char=912
14	that	that	PRON	WDT	PronType=Rel	13	_	_	start_char=913|end_char=917
15	appear	appear	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	14	_	_	start_char=918|end_char=924
16	to	to	PART	TO	_	15	_	_	start_char=925|end_char=927
17	be	be	AUX	VB	VerbForm=Inf	16	_	_	start_char=928|end_char=930
18	irregular	irregular	ADJ	JJ	Degree=Pos	17	_	_	SpaceAfter=No|start_char=931|end_char=940
19	)	)	PUNCT	-RRB-	_	18	_	_	SpaceAfter=No|start_char=940|end_char=941
20	.	.	PUNCT	.	_	19	_	_	start_char=941|end_char=942

# text = both of these difficult problems can be solved efficiently using kernel-based methods such as support vector machines (svms) [1, 3, 4] . the basic idea behind svms is to use a non-linear map to embed the input data in a high-dimensional feature space where it can be classified using a simple linear classifier (see figure 1 ). to ensure good generalization and avoid overfitting, svms focus on the "hardest to classify" points that lie closest to the linear decision surface in the high-dimensional feature space.
# sent_id = 6
1	both	both	DET	DT	PronType=Tot	0	_	_	start_char=943|end_char=947
2	of	of	ADP	IN	_	1	_	_	start_char=948|end_char=950
3	these	this	DET	DT	Number=Plur|PronType=Dem	2	_	_	start_char=951|end_char=956
4	difficult	difficult	ADJ	JJ	Degree=Pos	3	_	_	start_char=957|end_char=966
5	problems	problem	NOUN	NNS	Number=Plur	4	_	_	start_char=967|end_char=975
6	can	can	AUX	MD	VerbForm=Fin	5	_	_	start_char=976|end_char=979
7	be	be	AUX	VB	VerbForm=Inf	6	_	_	start_char=980|end_char=982
8	solved	solve	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	7	_	_	start_char=983|end_char=989
9	efficiently	efficiently	ADV	RB	_	8	_	_	start_char=990|end_char=1001
10	using	use	VERB	VBG	Tense=Pres|VerbForm=Part	9	_	_	start_char=1002|end_char=1007
11	kernel	kernel	NOUN	NN	Number=Sing	10	_	_	SpaceAfter=No|start_char=1008|end_char=1014
12	-	-	PUNCT	HYPH	_	11	_	_	SpaceAfter=No|start_char=1014|end_char=1015
13	based	base	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	12	_	_	start_char=1015|end_char=1020
14	methods	method	NOUN	NNS	Number=Plur	13	_	_	start_char=1021|end_char=1028
15	such	such	ADJ	JJ	ExtPos=ADP	14	_	_	start_char=1029|end_char=1033
16	as	as	ADP	IN	_	15	_	_	start_char=1034|end_char=1036
17	support	support	NOUN	NN	Number=Sing	16	_	_	start_char=1037|end_char=1044
18	vector	vector	NOUN	NN	Number=Sing	17	_	_	start_char=1045|end_char=1051
19	machines	machine	NOUN	NNS	Number=Plur	18	_	_	start_char=1052|end_char=1060
20	(	(	PUNCT	-LRB-	_	19	_	_	SpaceAfter=No|start_char=1061|end_char=1062
21	svms	svm	NOUN	NNS	Number=Plur	20	_	_	SpaceAfter=No|start_char=1062|end_char=1066
22	)	)	PUNCT	-RRB-	_	21	_	_	start_char=1066|end_char=1067
23	[	[	PUNCT	-LRB-	_	22	_	_	SpaceAfter=No|start_char=1068|end_char=1069
24	1	1	NUM	CD	NumForm=Digit|NumType=Card	23	_	_	SpaceAfter=No|start_char=1069|end_char=1070
25	,	,	PUNCT	,	_	24	_	_	start_char=1070|end_char=1071
26	3	3	NUM	CD	NumForm=Digit|NumType=Card	25	_	_	SpaceAfter=No|start_char=1072|end_char=1073
27	,	,	PUNCT	,	_	26	_	_	start_char=1073|end_char=1074
28	4	4	NUM	CD	NumForm=Digit|NumType=Card	27	_	_	SpaceAfter=No|start_char=1075|end_char=1076
29	]	]	PUNCT	-RRB-	_	28	_	_	start_char=1076|end_char=1077
30	.	.	PUNCT	.	_	29	_	_	start_char=1078|end_char=1079
31	the	the	DET	DT	Definite=Def|PronType=Art	30	_	_	start_char=1080|end_char=1083
32	basic	basic	ADJ	JJ	Degree=Pos	31	_	_	start_char=1084|end_char=1089
33	idea	idea	NOUN	NN	Number=Sing	32	_	_	start_char=1090|end_char=1094
34	behind	behind	ADP	IN	_	33	_	_	start_char=1095|end_char=1101
35	svms	svm	NOUN	NN	Number=Sing	34	_	_	start_char=1102|end_char=1106
36	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	35	_	_	start_char=1107|end_char=1109
37	to	to	PART	TO	_	36	_	_	start_char=1110|end_char=1112
38	use	use	VERB	VB	VerbForm=Inf	37	_	_	start_char=1113|end_char=1116
39	a	a	DET	DT	Definite=Ind|PronType=Art	38	_	_	start_char=1117|end_char=1118
40	non-linear	non-linear	ADJ	JJ	Degree=Pos	39	_	_	start_char=1119|end_char=1129
41	map	map	NOUN	NN	Number=Sing	40	_	_	start_char=1130|end_char=1133
42	to	to	PART	TO	_	41	_	_	start_char=1134|end_char=1136
43	embed	emb	VERB	VB	VerbForm=Inf	42	_	_	start_char=1137|end_char=1142
44	the	the	DET	DT	Definite=Def|PronType=Art	43	_	_	start_char=1143|end_char=1146
45	input	input	NOUN	NN	Number=Sing	44	_	_	start_char=1147|end_char=1152
46	data	datum	NOUN	NNS	Number=Plur	45	_	_	start_char=1153|end_char=1157
47	in	in	ADP	IN	_	46	_	_	start_char=1158|end_char=1160
48	a	a	DET	DT	Definite=Ind|PronType=Art	47	_	_	start_char=1161|end_char=1162
49	high	high	ADJ	JJ	Degree=Pos	48	_	_	SpaceAfter=No|start_char=1163|end_char=1167
50	-	-	PUNCT	HYPH	_	49	_	_	SpaceAfter=No|start_char=1167|end_char=1168
51	dimensional	dimensional	ADJ	JJ	Degree=Pos	50	_	_	start_char=1168|end_char=1179
52	feature	feature	NOUN	NN	Number=Sing	51	_	_	start_char=1180|end_char=1187
53	space	space	NOUN	NN	Number=Sing	52	_	_	start_char=1188|end_char=1193
54	where	where	ADV	WRB	PronType=Rel	53	_	_	start_char=1194|end_char=1199
55	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	54	_	_	start_char=1200|end_char=1202
56	can	can	AUX	MD	VerbForm=Fin	55	_	_	start_char=1203|end_char=1206
57	be	be	AUX	VB	VerbForm=Inf	56	_	_	start_char=1207|end_char=1209
58	classified	classify	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	57	_	_	start_char=1210|end_char=1220
59	using	use	VERB	VBG	Tense=Pres|VerbForm=Part	58	_	_	start_char=1221|end_char=1226
60	a	a	DET	DT	Definite=Ind|PronType=Art	59	_	_	start_char=1227|end_char=1228
61	simple	simple	ADJ	JJ	Degree=Pos	60	_	_	start_char=1229|end_char=1235
62	linear	linear	ADJ	JJ	Degree=Pos	61	_	_	start_char=1236|end_char=1242
63	classifier	classifier	NOUN	NN	Number=Sing	62	_	_	start_char=1243|end_char=1253
64	(	(	PUNCT	-LRB-	_	63	_	_	SpaceAfter=No|start_char=1254|end_char=1255
65	see	see	VERB	VB	Mood=Imp|VerbForm=Fin	64	_	_	start_char=1255|end_char=1258
66	figure	Figure	PROPN	NNP	Number=Sing	65	_	_	start_char=1259|end_char=1265
67	1	1	NUM	CD	NumForm=Digit|NumType=Card	66	_	_	start_char=1266|end_char=1267
68	)	)	PUNCT	-RRB-	_	67	_	_	SpaceAfter=No|start_char=1268|end_char=1269
69	.	.	PUNCT	.	_	68	_	_	start_char=1269|end_char=1270
70	to	to	PART	TO	_	69	_	_	start_char=1271|end_char=1273
71	ensure	ensure	VERB	VB	VerbForm=Inf	70	_	_	start_char=1274|end_char=1280
72	good	good	ADJ	JJ	Degree=Pos	71	_	_	start_char=1281|end_char=1285
73	generalization	generalization	NOUN	NN	Number=Sing	72	_	_	start_char=1286|end_char=1300
74	and	and	CCONJ	CC	_	73	_	_	start_char=1301|end_char=1304
75	avoid	avoid	VERB	VB	VerbForm=Inf	74	_	_	start_char=1305|end_char=1310
76	overfitting	overfitting	NOUN	NN	Number=Sing	75	_	_	SpaceAfter=No|start_char=1311|end_char=1322
77	,	,	PUNCT	,	_	76	_	_	start_char=1322|end_char=1323
78	svms	svm	NOUN	NNS	Number=Plur	77	_	_	start_char=1324|end_char=1328
79	focus	focus	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	78	_	_	start_char=1329|end_char=1334
80	on	on	ADP	IN	_	79	_	_	start_char=1335|end_char=1337
81	the	the	DET	DT	Definite=Def|PronType=Art	80	_	_	start_char=1338|end_char=1341
82	"	"	PUNCT	``	_	81	_	_	SpaceAfter=No|start_char=1342|end_char=1343
83	hardest	hard	ADJ	JJS	Degree=Sup	82	_	_	start_char=1343|end_char=1350
84	to	to	PART	TO	_	83	_	_	start_char=1351|end_char=1353
85	classify	classify	VERB	VB	VerbForm=Inf	84	_	_	SpaceAfter=No|start_char=1354|end_char=1362
86	"	"	PUNCT	''	_	85	_	_	start_char=1362|end_char=1363
87	points	point	NOUN	NNS	Number=Plur	86	_	_	start_char=1364|end_char=1370
88	that	that	PRON	WDT	PronType=Rel	87	_	_	start_char=1371|end_char=1375
89	lie	lie	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	88	_	_	start_char=1376|end_char=1379
90	closest	close	ADJ	JJR	Degree=Pos	89	_	_	start_char=1380|end_char=1387
91	to	to	ADP	IN	_	90	_	_	start_char=1388|end_char=1390
92	the	the	DET	DT	Definite=Def|PronType=Art	91	_	_	start_char=1391|end_char=1394
93	linear	linear	ADJ	JJ	Degree=Pos	92	_	_	start_char=1395|end_char=1401
94	decision	decision	NOUN	NN	Number=Sing	93	_	_	start_char=1402|end_char=1410
95	surface	surface	NOUN	NN	Number=Sing	94	_	_	start_char=1411|end_char=1418
96	in	in	ADP	IN	_	95	_	_	start_char=1419|end_char=1421
97	the	the	DET	DT	Definite=Def|PronType=Art	96	_	_	start_char=1422|end_char=1425
98	high	high	ADJ	JJ	Degree=Pos	97	_	_	SpaceAfter=No|start_char=1426|end_char=1430
99	-	-	PUNCT	HYPH	_	98	_	_	SpaceAfter=No|start_char=1430|end_char=1431
100	dimensional	dimensional	ADJ	JJ	Degree=Pos	99	_	_	start_char=1431|end_char=1442
101	feature	feature	NOUN	NN	Number=Sing	100	_	_	start_char=1443|end_char=1450
102	space	space	NOUN	NN	Number=Sing	101	_	_	SpaceAfter=No|start_char=1451|end_char=1456
103	.	.	PUNCT	.	_	102	_	_	start_char=1456|end_char=1457

# text = these points are called "support vectors" and play a prominent role in svm algorithms.
# sent_id = 7
1	these	this	DET	DT	Number=Plur|PronType=Dem	0	_	_	start_char=1458|end_char=1463
2	points	point	NOUN	NNS	Number=Plur	1	_	_	start_char=1464|end_char=1470
3	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	2	_	_	start_char=1471|end_char=1474
4	called	call	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	3	_	_	start_char=1475|end_char=1481
5	"	"	PUNCT	``	_	4	_	_	SpaceAfter=No|start_char=1482|end_char=1483
6	support	support	NOUN	NN	Number=Sing	5	_	_	start_char=1483|end_char=1490
7	vectors	vector	NOUN	NNS	Number=Plur	6	_	_	SpaceAfter=No|start_char=1491|end_char=1498
8	"	"	PUNCT	''	_	7	_	_	start_char=1498|end_char=1499
9	and	and	CCONJ	CC	_	8	_	_	start_char=1500|end_char=1503
10	play	play	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	9	_	_	start_char=1504|end_char=1508
11	a	a	DET	DT	Definite=Ind|PronType=Art	10	_	_	start_char=1509|end_char=1510
12	prominent	prominent	ADJ	JJ	Degree=Pos	11	_	_	start_char=1511|end_char=1520
13	role	role	NOUN	NN	Number=Sing	12	_	_	start_char=1521|end_char=1525
14	in	in	ADP	IN	_	13	_	_	start_char=1526|end_char=1528
15	svm	svm	NOUN	NN	Number=Sing	14	_	_	start_char=1529|end_char=1532
16	algorithms	algorithm	NOUN	NNS	Number=Plur	15	_	_	SpaceAfter=No|start_char=1533|end_char=1543
17	.	.	PUNCT	.	_	16	_	_	start_char=1543|end_char=1544

# text = the real power and utility of svms comes from the fact that these ideas can be implemented quickly and efficiently using kernel methods and quadratic optimization [1, 4] . the idea of a kernel function is to replace the explicit mapping to a high-dimensional feature space with an implicit kernel function that specifies the similarity (dot product) between data points in the highdimensional feature space.
# sent_id = 8
1	the	the	DET	DT	Definite=Def|PronType=Art	0	_	_	start_char=1545|end_char=1548
2	real	real	ADJ	JJ	Degree=Pos	1	_	_	start_char=1549|end_char=1553
3	power	power	NOUN	NN	Number=Sing	2	_	_	start_char=1554|end_char=1559
4	and	and	CCONJ	CC	_	3	_	_	start_char=1560|end_char=1563
5	utility	utility	NOUN	NN	Number=Sing	4	_	_	start_char=1564|end_char=1571
6	of	of	ADP	IN	_	5	_	_	start_char=1572|end_char=1574
7	svms	svm	NOUN	NNS	Number=Plur	6	_	_	start_char=1575|end_char=1579
8	comes	come	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	_	_	start_char=1580|end_char=1585
9	from	from	ADP	IN	_	8	_	_	start_char=1586|end_char=1590
10	the	the	DET	DT	Definite=Def|PronType=Art	9	_	_	start_char=1591|end_char=1594
11	fact	fact	NOUN	NN	Number=Sing	10	_	_	start_char=1595|end_char=1599
12	that	that	SCONJ	IN	_	11	_	_	start_char=1600|end_char=1604
13	these	this	DET	DT	Number=Plur|PronType=Dem	12	_	_	start_char=1605|end_char=1610
14	ideas	idea	NOUN	NNS	Number=Plur	13	_	_	start_char=1611|end_char=1616
15	can	can	AUX	MD	VerbForm=Fin	14	_	_	start_char=1617|end_char=1620
16	be	be	AUX	VB	VerbForm=Inf	15	_	_	start_char=1621|end_char=1623
17	implemented	implement	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	16	_	_	start_char=1624|end_char=1635
18	quickly	quickly	ADV	RB	_	17	_	_	start_char=1636|end_char=1643
19	and	and	CCONJ	CC	_	18	_	_	start_char=1644|end_char=1647
20	efficiently	efficiently	ADV	RB	_	19	_	_	start_char=1648|end_char=1659
21	using	use	VERB	VBG	Tense=Pres|VerbForm=Part	20	_	_	start_char=1660|end_char=1665
22	kernel	kernel	NOUN	NN	Number=Sing	21	_	_	start_char=1666|end_char=1672
23	methods	method	NOUN	NNS	Number=Plur	22	_	_	start_char=1673|end_char=1680
24	and	and	CCONJ	CC	_	23	_	_	start_char=1681|end_char=1684
25	quadratic	quadratic	ADJ	JJ	Degree=Pos	24	_	_	start_char=1685|end_char=1694
26	optimization	optimization	NOUN	NN	Number=Sing	25	_	_	start_char=1695|end_char=1707
27	[	[	PUNCT	-LRB-	_	26	_	_	SpaceAfter=No|start_char=1708|end_char=1709
28	1	1	NUM	CD	NumForm=Digit|NumType=Card	27	_	_	SpaceAfter=No|start_char=1709|end_char=1710
29	,	,	PUNCT	,	_	28	_	_	start_char=1710|end_char=1711
30	4	4	NUM	CD	NumForm=Digit|NumType=Card	29	_	_	SpaceAfter=No|start_char=1712|end_char=1713
31	]	]	PUNCT	-RRB-	_	30	_	_	start_char=1713|end_char=1714
32	.	.	PUNCT	.	_	31	_	_	start_char=1715|end_char=1716
33	the	the	DET	DT	Definite=Def|PronType=Art	32	_	_	start_char=1717|end_char=1720
34	idea	idea	NOUN	NN	Number=Sing	33	_	_	start_char=1721|end_char=1725
35	of	of	ADP	IN	_	34	_	_	start_char=1726|end_char=1728
36	a	a	DET	DT	Definite=Ind|PronType=Art	35	_	_	start_char=1729|end_char=1730
37	kernel	kernel	NOUN	NN	Number=Sing	36	_	_	start_char=1731|end_char=1737
38	function	function	NOUN	NN	Number=Sing	37	_	_	start_char=1738|end_char=1746
39	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	38	_	_	start_char=1747|end_char=1749
40	to	to	PART	TO	_	39	_	_	start_char=1750|end_char=1752
41	replace	replace	VERB	VB	VerbForm=Inf	40	_	_	start_char=1753|end_char=1760
42	the	the	DET	DT	Definite=Def|PronType=Art	41	_	_	start_char=1761|end_char=1764
43	explicit	explicit	ADJ	JJ	Degree=Pos	42	_	_	start_char=1765|end_char=1773
44	mapping	mapping	NOUN	NN	Number=Sing	43	_	_	start_char=1774|end_char=1781
45	to	to	ADP	IN	_	44	_	_	start_char=1782|end_char=1784
46	a	a	DET	DT	Definite=Ind|PronType=Art	45	_	_	start_char=1785|end_char=1786
47	high	high	ADJ	JJ	Degree=Pos	46	_	_	SpaceAfter=No|start_char=1787|end_char=1791
48	-	-	PUNCT	HYPH	_	47	_	_	SpaceAfter=No|start_char=1791|end_char=1792
49	dimensional	dimensional	ADJ	JJ	Degree=Pos	48	_	_	start_char=1792|end_char=1803
50	feature	feature	NOUN	NN	Number=Sing	49	_	_	start_char=1804|end_char=1811
51	space	space	NOUN	NN	Number=Sing	50	_	_	start_char=1812|end_char=1817
52	with	with	ADP	IN	_	51	_	_	start_char=1818|end_char=1822
53	an	a	DET	DT	Definite=Ind|PronType=Art	52	_	_	start_char=1823|end_char=1825
54	implicit	implicit	ADJ	JJ	Degree=Pos	53	_	_	start_char=1826|end_char=1834
55	kernel	kernel	NOUN	NN	Number=Sing	54	_	_	start_char=1835|end_char=1841
56	function	function	NOUN	NN	Number=Sing	55	_	_	start_char=1842|end_char=1850
57	that	that	PRON	WDT	PronType=Rel	56	_	_	start_char=1851|end_char=1855
58	specifies	specify	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	57	_	_	start_char=1856|end_char=1865
59	the	the	DET	DT	Definite=Def|PronType=Art	58	_	_	start_char=1866|end_char=1869
60	similarity	similarity	NOUN	NN	Number=Sing	59	_	_	start_char=1870|end_char=1880
61	(	(	PUNCT	-LRB-	_	60	_	_	SpaceAfter=No|start_char=1881|end_char=1882
62	dot	dot	NOUN	NN	Number=Sing	61	_	_	start_char=1882|end_char=1885
63	product	product	NOUN	NN	Number=Sing	62	_	_	SpaceAfter=No|start_char=1886|end_char=1893
64	)	)	PUNCT	-RRB-	_	63	_	_	start_char=1893|end_char=1894
65	between	between	ADP	IN	_	64	_	_	start_char=1895|end_char=1902
66	data	datum	NOUN	NN	Number=Sing	65	_	_	start_char=1903|end_char=1907
67	points	point	NOUN	NNS	Number=Plur	66	_	_	start_char=1908|end_char=1914
68	in	in	ADP	IN	_	67	_	_	start_char=1915|end_char=1917
69	the	the	DET	DT	Definite=Def|PronType=Art	68	_	_	start_char=1918|end_char=1921
70	highdimensional	highdimensional	ADJ	JJ	Degree=Pos	69	_	_	start_char=1922|end_char=1937
71	feature	feature	NOUN	NN	Number=Sing	70	_	_	start_char=1938|end_char=1945
72	space	space	NOUN	NN	Number=Sing	71	_	_	SpaceAfter=No|start_char=1946|end_char=1951
73	.	.	PUNCT	.	_	72	_	_	start_char=1951|end_char=1952

# text = once the kernel function is specified, the support vectors and decision surface can be easily computed as an instance of a quadratic programming (qp) problem.
# sent_id = 9
1	once	once	SCONJ	IN	_	0	_	_	start_char=1953|end_char=1957
2	the	the	DET	DT	Definite=Def|PronType=Art	1	_	_	start_char=1958|end_char=1961
3	kernel	kernel	NOUN	NN	Number=Sing	2	_	_	start_char=1962|end_char=1968
4	function	function	NOUN	NN	Number=Sing	3	_	_	start_char=1969|end_char=1977
5	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	_	_	start_char=1978|end_char=1980
6	specified	specify	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	5	_	_	SpaceAfter=No|start_char=1981|end_char=1990
7	,	,	PUNCT	,	_	6	_	_	start_char=1990|end_char=1991
8	the	the	DET	DT	Definite=Def|PronType=Art	7	_	_	start_char=1992|end_char=1995
9	support	support	NOUN	NN	Number=Sing	8	_	_	start_char=1996|end_char=2003
10	vectors	vector	NOUN	NNS	Number=Plur	9	_	_	start_char=2004|end_char=2011
11	and	and	CCONJ	CC	_	10	_	_	start_char=2012|end_char=2015
12	decision	decision	NOUN	NN	Number=Sing	11	_	_	start_char=2016|end_char=2024
13	surface	surface	NOUN	NN	Number=Sing	12	_	_	start_char=2025|end_char=2032
14	can	can	AUX	MD	VerbForm=Fin	13	_	_	start_char=2033|end_char=2036
15	be	be	AUX	VB	VerbForm=Inf	14	_	_	start_char=2037|end_char=2039
16	easily	easily	ADV	RB	_	15	_	_	start_char=2040|end_char=2046
17	computed	compute	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	16	_	_	start_char=2047|end_char=2055
18	as	as	ADP	IN	_	17	_	_	start_char=2056|end_char=2058
19	an	a	DET	DT	Definite=Ind|PronType=Art	18	_	_	start_char=2059|end_char=2061
20	instance	instance	NOUN	NN	Number=Sing	19	_	_	start_char=2062|end_char=2070
21	of	of	ADP	IN	_	20	_	_	start_char=2071|end_char=2073
22	a	a	DET	DT	Definite=Ind|PronType=Art	21	_	_	start_char=2074|end_char=2075
23	quadratic	quadratic	ADJ	JJ	Degree=Pos	22	_	_	start_char=2076|end_char=2085
24	programming	programming	NOUN	NN	Number=Sing	23	_	_	start_char=2086|end_char=2097
25	(	(	PUNCT	-LRB-	_	24	_	_	SpaceAfter=No|start_char=2098|end_char=2099
26	qp	qp	NOUN	NN	Number=Sing	25	_	_	SpaceAfter=No|start_char=2099|end_char=2101
27	)	)	PUNCT	-RRB-	_	26	_	_	start_char=2101|end_char=2102
28	problem	problem	NOUN	NN	Number=Sing	27	_	_	SpaceAfter=No|start_char=2103|end_char=2110
29	.	.	PUNCT	.	_	28	_	_	start_char=2110|end_char=2111

# text = there exist efficient exact and approximate optimization algorithms for qp that scale weakly polynomially in input size.
# sent_id = 10
1	there	there	PRON	EX	_	0	_	_	start_char=2112|end_char=2117
2	exist	exist	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	1	_	_	start_char=2118|end_char=2123
3	efficient	efficient	ADJ	JJ	Degree=Pos	2	_	_	start_char=2124|end_char=2133
4	exact	exact	ADJ	JJ	Degree=Pos	3	_	_	start_char=2134|end_char=2139
5	and	and	CCONJ	CC	_	4	_	_	start_char=2140|end_char=2143
6	approximate	approximate	ADJ	JJ	Degree=Pos	5	_	_	start_char=2144|end_char=2155
7	optimization	optimization	NOUN	NN	Number=Sing	6	_	_	start_char=2156|end_char=2168
8	algorithms	algorithm	NOUN	NNS	Number=Plur	7	_	_	start_char=2169|end_char=2179
9	for	for	ADP	IN	_	8	_	_	start_char=2180|end_char=2183
10	qp	qp	NOUN	NN	Number=Sing	9	_	_	start_char=2184|end_char=2186
11	that	that	PRON	WDT	PronType=Rel	10	_	_	start_char=2187|end_char=2191
12	scale	scale	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	11	_	_	start_char=2192|end_char=2197
13	weakly	weakly	ADV	RB	_	12	_	_	start_char=2198|end_char=2204
14	polynomially	polynomially	ADV	RB	_	13	_	_	start_char=2205|end_char=2217
15	in	in	ADP	IN	_	14	_	_	start_char=2218|end_char=2220
16	input	input	NOUN	NN	Number=Sing	15	_	_	start_char=2221|end_char=2226
17	size	size	NOUN	NN	Number=Sing	16	_	_	SpaceAfter=No|start_char=2227|end_char=2231
18	.	.	PUNCT	.	_	17	_	_	start_char=2231|end_char=2232

# text = the original motivation for svms and other kernel methods were deep results in statistical learning theory concerning generalization errors [3] [4] [5] . here, we show that these statistical problems can also be understood using ideas from niche theory in community ecology (see table i ) [6, 7] . our construction exploits the recently discovered duality between ecological dynamics and constrained optimization problems, specifically quadratic programming [8] [9] [10] . in particular, we show fig. 1 : overview of support vector machines (svms).
# sent_id = 11
1	the	the	DET	DT	Definite=Def|PronType=Art	0	_	_	start_char=2233|end_char=2236
2	original	original	ADJ	JJ	Degree=Pos	1	_	_	start_char=2237|end_char=2245
3	motivation	motivation	NOUN	NN	Number=Sing	2	_	_	start_char=2246|end_char=2256
4	for	for	ADP	IN	_	3	_	_	start_char=2257|end_char=2260
5	svms	svm	NOUN	NNS	Number=Plur	4	_	_	start_char=2261|end_char=2265
6	and	and	CCONJ	CC	_	5	_	_	start_char=2266|end_char=2269
7	other	other	ADJ	JJ	Degree=Pos	6	_	_	start_char=2270|end_char=2275
8	kernel	kernel	NOUN	NN	Number=Sing	7	_	_	start_char=2276|end_char=2282
9	methods	method	NOUN	NNS	Number=Plur	8	_	_	start_char=2283|end_char=2290
10	were	be	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	9	_	_	start_char=2291|end_char=2295
11	deep	deep	ADJ	JJ	Degree=Pos	10	_	_	start_char=2296|end_char=2300
12	results	result	NOUN	NNS	Number=Plur	11	_	_	start_char=2301|end_char=2308
13	in	in	ADP	IN	_	12	_	_	start_char=2309|end_char=2311
14	statistical	statistical	ADJ	JJ	Degree=Pos	13	_	_	start_char=2312|end_char=2323
15	learning	learning	NOUN	NN	Number=Sing	14	_	_	start_char=2324|end_char=2332
16	theory	theory	NOUN	NN	Number=Sing	15	_	_	start_char=2333|end_char=2339
17	concerning	concern	VERB	VBG	Tense=Pres|VerbForm=Part	16	_	_	start_char=2340|end_char=2350
18	generalization	generalization	NOUN	NN	Number=Sing	17	_	_	start_char=2351|end_char=2365
19	errors	error	NOUN	NNS	Number=Plur	18	_	_	start_char=2366|end_char=2372
20	[	[	PUNCT	-LRB-	_	19	_	_	SpaceAfter=No|start_char=2373|end_char=2374
21	3	3	NUM	CD	NumForm=Digit|NumType=Card	20	_	_	SpaceAfter=No|start_char=2374|end_char=2375
22	]	]	PUNCT	-RRB-	_	21	_	_	start_char=2375|end_char=2376
23	[	[	PUNCT	-LRB-	_	22	_	_	SpaceAfter=No|start_char=2377|end_char=2378
24	4	4	NUM	CD	NumForm=Digit|NumType=Card	23	_	_	SpaceAfter=No|start_char=2378|end_char=2379
25	]	]	PUNCT	-RRB-	_	24	_	_	start_char=2379|end_char=2380
26	[	[	PUNCT	-LRB-	_	25	_	_	SpaceAfter=No|start_char=2381|end_char=2382
27	5	5	NUM	CD	NumForm=Digit|NumType=Card	26	_	_	SpaceAfter=No|start_char=2382|end_char=2383
28	]	]	PUNCT	-RRB-	_	27	_	_	start_char=2383|end_char=2384
29	.	.	PUNCT	.	_	28	_	_	start_char=2385|end_char=2386
30	here	here	ADV	RB	PronType=Dem	29	_	_	SpaceAfter=No|start_char=2387|end_char=2391
31	,	,	PUNCT	,	_	30	_	_	start_char=2391|end_char=2392
32	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	31	_	_	start_char=2393|end_char=2395
33	show	show	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	32	_	_	start_char=2396|end_char=2400
34	that	that	SCONJ	IN	_	33	_	_	start_char=2401|end_char=2405
35	these	this	DET	DT	Number=Plur|PronType=Dem	34	_	_	start_char=2406|end_char=2411
36	statistical	statistical	ADJ	JJ	Degree=Pos	35	_	_	start_char=2412|end_char=2423
37	problems	problem	NOUN	NNS	Number=Plur	36	_	_	start_char=2424|end_char=2432
38	can	can	AUX	MD	VerbForm=Fin	37	_	_	start_char=2433|end_char=2436
39	also	also	ADV	RB	_	38	_	_	start_char=2437|end_char=2441
40	be	be	AUX	VB	VerbForm=Inf	39	_	_	start_char=2442|end_char=2444
41	understood	understand	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	40	_	_	start_char=2445|end_char=2455
42	using	use	VERB	VBG	Tense=Pres|VerbForm=Part	41	_	_	start_char=2456|end_char=2461
43	ideas	idea	NOUN	NNS	Number=Plur	42	_	_	start_char=2462|end_char=2467
44	from	from	ADP	IN	_	43	_	_	start_char=2468|end_char=2472
45	niche	niche	NOUN	NN	Number=Sing	44	_	_	start_char=2473|end_char=2478
46	theory	theory	NOUN	NN	Number=Sing	45	_	_	start_char=2479|end_char=2485
47	in	in	ADP	IN	_	46	_	_	start_char=2486|end_char=2488
48	community	community	NOUN	NN	Number=Sing	47	_	_	start_char=2489|end_char=2498
49	ecology	ecology	NOUN	NN	Number=Sing	48	_	_	start_char=2499|end_char=2506
50	(	(	PUNCT	-LRB-	_	49	_	_	SpaceAfter=No|start_char=2507|end_char=2508
51	see	see	VERB	VB	Mood=Imp|VerbForm=Fin	50	_	_	start_char=2508|end_char=2511
52	table	table	NOUN	NN	Number=Sing	51	_	_	start_char=2512|end_char=2517
53	i	i	NUM	LS	NumForm=Roman|NumType=Card	52	_	_	start_char=2518|end_char=2519
54	)	)	PUNCT	-RRB-	_	53	_	_	start_char=2520|end_char=2521
55	[	[	PUNCT	-LRB-	_	54	_	_	SpaceAfter=No|start_char=2522|end_char=2523
56	6	6	NUM	CD	NumForm=Digit|NumType=Card	55	_	_	SpaceAfter=No|start_char=2523|end_char=2524
57	,	,	PUNCT	,	_	56	_	_	start_char=2524|end_char=2525
58	7	7	NUM	CD	NumForm=Digit|NumType=Card	57	_	_	SpaceAfter=No|start_char=2526|end_char=2527
59	]	]	PUNCT	-RRB-	_	58	_	_	start_char=2527|end_char=2528
60	.	.	PUNCT	.	_	59	_	_	start_char=2529|end_char=2530
61	our	our	PRON	PRP$	Case=Gen|Number=Plur|Person=1|Poss=Yes|PronType=Prs	60	_	_	start_char=2531|end_char=2534
62	construction	construction	NOUN	NN	Number=Sing	61	_	_	start_char=2535|end_char=2547
63	exploits	exploit	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	62	_	_	start_char=2548|end_char=2556
64	the	the	DET	DT	Definite=Def|PronType=Art	63	_	_	start_char=2557|end_char=2560
65	recently	recently	ADV	RB	_	64	_	_	start_char=2561|end_char=2569
66	discovered	discover	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	65	_	_	start_char=2570|end_char=2580
67	duality	duality	NOUN	NN	Number=Sing	66	_	_	start_char=2581|end_char=2588
68	between	between	ADP	IN	_	67	_	_	start_char=2589|end_char=2596
69	ecological	ecological	ADJ	JJ	Degree=Pos	68	_	_	start_char=2597|end_char=2607
70	dynamics	dynamic	NOUN	NNS	Number=Plur	69	_	_	start_char=2608|end_char=2616
71	and	and	CCONJ	CC	_	70	_	_	start_char=2617|end_char=2620
72	constrained	constrain	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	71	_	_	start_char=2621|end_char=2632
73	optimization	optimization	NOUN	NN	Number=Sing	72	_	_	start_char=2633|end_char=2645
74	problems	problem	NOUN	NNS	Number=Plur	73	_	_	SpaceAfter=No|start_char=2646|end_char=2654
75	,	,	PUNCT	,	_	74	_	_	start_char=2654|end_char=2655
76	specifically	specifically	ADV	RB	_	75	_	_	start_char=2656|end_char=2668
77	quadratic	quadratic	ADJ	JJ	Degree=Pos	76	_	_	start_char=2669|end_char=2678
78	programming	programming	NOUN	NN	Number=Sing	77	_	_	start_char=2679|end_char=2690
79	[	[	PUNCT	-LRB-	_	78	_	_	SpaceAfter=No|start_char=2691|end_char=2692
80	8	8	NUM	CD	NumForm=Digit|NumType=Card	79	_	_	SpaceAfter=No|start_char=2692|end_char=2693
81	]	]	PUNCT	-RRB-	_	80	_	_	start_char=2693|end_char=2694
82	[	[	PUNCT	-LRB-	_	81	_	_	SpaceAfter=No|start_char=2695|end_char=2696
83	9	9	NUM	CD	NumForm=Digit|NumType=Card	82	_	_	SpaceAfter=No|start_char=2696|end_char=2697
84	]	]	PUNCT	-RRB-	_	83	_	_	start_char=2697|end_char=2698
85	[	[	PUNCT	-LRB-	_	84	_	_	SpaceAfter=No|start_char=2699|end_char=2700
86	10	10	NUM	CD	NumForm=Digit|NumType=Card	85	_	_	SpaceAfter=No|start_char=2700|end_char=2702
87	]	]	PUNCT	-RRB-	_	86	_	_	start_char=2702|end_char=2703
88	.	.	PUNCT	.	_	87	_	_	start_char=2704|end_char=2705
89	in	in	ADP	IN	_	88	_	_	start_char=2706|end_char=2708
90	particular	particular	ADJ	JJ	Degree=Pos	89	_	_	SpaceAfter=No|start_char=2709|end_char=2719
91	,	,	PUNCT	,	_	90	_	_	start_char=2719|end_char=2720
92	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	91	_	_	start_char=2721|end_char=2723
93	show	show	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	92	_	_	start_char=2724|end_char=2728
94	fig	fig	NOUN	NN	Number=Sing	93	_	_	SpaceAfter=No|start_char=2729|end_char=2732
95	.	.	PUNCT	.	_	94	_	_	start_char=2732|end_char=2733
96	1	1	NUM	CD	NumForm=Digit|NumType=Card	95	_	_	start_char=2734|end_char=2735
97	:	:	PUNCT	:	_	96	_	_	start_char=2736|end_char=2737
98	overview	overview	NOUN	NN	Number=Sing	97	_	_	start_char=2738|end_char=2746
99	of	of	ADP	IN	_	98	_	_	start_char=2747|end_char=2749
100	support	support	NOUN	NN	Number=Sing	99	_	_	start_char=2750|end_char=2757
101	vector	vector	NOUN	NN	Number=Sing	100	_	_	start_char=2758|end_char=2764
102	machines	machine	NOUN	NNS	Number=Plur	101	_	_	start_char=2765|end_char=2773
103	(	(	PUNCT	-LRB-	_	102	_	_	SpaceAfter=No|start_char=2774|end_char=2775
104	svms	svm	NOUN	NNS	Number=Plur	103	_	_	SpaceAfter=No|start_char=2775|end_char=2779
105	)	)	PUNCT	-RRB-	_	104	_	_	SpaceAfter=No|start_char=2779|end_char=2780
106	.	.	PUNCT	.	_	105	_	_	start_char=2780|end_char=2781

# text = data points are mapped into a high-dimensional feature space via φ(x) where they can be separated using a linear decision surface.
# sent_id = 12
1	data	datum	NOUN	NN	Number=Sing	0	_	_	start_char=2782|end_char=2786
2	points	point	NOUN	NNS	Number=Plur	1	_	_	start_char=2787|end_char=2793
3	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	2	_	_	start_char=2794|end_char=2797
4	mapped	map	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	3	_	_	start_char=2798|end_char=2804
5	into	into	ADP	IN	_	4	_	_	start_char=2805|end_char=2809
6	a	a	DET	DT	Definite=Ind|PronType=Art	5	_	_	start_char=2810|end_char=2811
7	high	high	ADJ	JJ	Degree=Pos	6	_	_	SpaceAfter=No|start_char=2812|end_char=2816
8	-	-	PUNCT	HYPH	_	7	_	_	SpaceAfter=No|start_char=2816|end_char=2817
9	dimensional	dimensional	ADJ	JJ	Degree=Pos	8	_	_	start_char=2817|end_char=2828
10	feature	feature	NOUN	NN	Number=Sing	9	_	_	start_char=2829|end_char=2836
11	space	space	NOUN	NN	Number=Sing	10	_	_	start_char=2837|end_char=2842
12	via	via	ADP	IN	_	11	_	_	start_char=2843|end_char=2846
13	φ(	φ(	PUNCT	-LRB-	_	12	_	_	SpaceAfter=No|start_char=2847|end_char=2849
14	x	x	NOUN	NN	Number=Sing	13	_	_	SpaceAfter=No|start_char=2849|end_char=2850
15	)	)	PUNCT	-RRB-	_	14	_	_	start_char=2850|end_char=2851
16	where	where	ADV	WRB	PronType=Rel	15	_	_	start_char=2852|end_char=2857
17	they	they	PRON	PRP	Case=Nom|Number=Plur|Person=3|PronType=Prs	16	_	_	start_char=2858|end_char=2862
18	can	can	AUX	MD	VerbForm=Fin	17	_	_	start_char=2863|end_char=2866
19	be	be	AUX	VB	VerbForm=Inf	18	_	_	start_char=2867|end_char=2869
20	separated	separate	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	19	_	_	start_char=2870|end_char=2879
21	using	use	VERB	VBG	Tense=Pres|VerbForm=Part	20	_	_	start_char=2880|end_char=2885
22	a	a	DET	DT	Definite=Ind|PronType=Art	21	_	_	start_char=2886|end_char=2887
23	linear	linear	ADJ	JJ	Degree=Pos	22	_	_	start_char=2888|end_char=2894
24	decision	decision	NOUN	NN	Number=Sing	23	_	_	start_char=2895|end_char=2903
25	surface	surface	NOUN	NN	Number=Sing	24	_	_	SpaceAfter=No|start_char=2904|end_char=2911
26	.	.	PUNCT	.	_	25	_	_	start_char=2911|end_char=2912

# text = the svm tries to maximize the distance (margin) from the decision boundary to the nearest data point.
# sent_id = 13
1	the	the	DET	DT	Definite=Def|PronType=Art	0	_	_	start_char=2913|end_char=2916
2	svm	svm	NOUN	NN	Number=Sing	1	_	_	start_char=2917|end_char=2920
3	tries	try	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	_	_	start_char=2921|end_char=2926
4	to	to	PART	TO	_	3	_	_	start_char=2927|end_char=2929
5	maximize	maximize	VERB	VB	VerbForm=Inf	4	_	_	start_char=2930|end_char=2938
6	the	the	DET	DT	Definite=Def|PronType=Art	5	_	_	start_char=2939|end_char=2942
7	distance	distance	NOUN	NN	Number=Sing	6	_	_	start_char=2943|end_char=2951
8	(	(	PUNCT	-LRB-	_	7	_	_	SpaceAfter=No|start_char=2952|end_char=2953
9	margin	margin	NOUN	NN	Number=Sing	8	_	_	SpaceAfter=No|start_char=2953|end_char=2959
10	)	)	PUNCT	-RRB-	_	9	_	_	start_char=2959|end_char=2960
11	from	from	ADP	IN	_	10	_	_	start_char=2961|end_char=2965
12	the	the	DET	DT	Definite=Def|PronType=Art	11	_	_	start_char=2966|end_char=2969
13	decision	decision	NOUN	NN	Number=Sing	12	_	_	start_char=2970|end_char=2978
14	boundary	boundary	NOUN	NN	Number=Sing	13	_	_	start_char=2979|end_char=2987
15	to	to	ADP	IN	_	14	_	_	start_char=2988|end_char=2990
16	the	the	DET	DT	Definite=Def|PronType=Art	15	_	_	start_char=2991|end_char=2994
17	nearest	near	ADJ	JJS	Degree=Sup	16	_	_	start_char=2995|end_char=3002
18	data	datum	NOUN	NN	Number=Sing	17	_	_	start_char=3003|end_char=3007
19	point	point	NOUN	NN	Number=Sing	18	_	_	SpaceAfter=No|start_char=3008|end_char=3013
20	.	.	PUNCT	.	_	19	_	_	start_char=3013|end_char=3014

# text = points that lie on the maximum-margin planes (circled) are called support vectors and used to classify new, unlabeled data.
# sent_id = 14
1	points	point	NOUN	NNS	Number=Plur	0	_	_	start_char=3015|end_char=3021
2	that	that	PRON	WDT	PronType=Rel	1	_	_	start_char=3022|end_char=3026
3	lie	lie	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	2	_	_	start_char=3027|end_char=3030
4	on	on	ADP	IN	_	3	_	_	start_char=3031|end_char=3033
5	the	the	DET	DT	Definite=Def|PronType=Art	4	_	_	start_char=3034|end_char=3037
6	maximum	maximum	ADJ	JJ	Degree=Pos	5	_	_	SpaceAfter=No|start_char=3038|end_char=3045
7	-	-	PUNCT	HYPH	_	6	_	_	SpaceAfter=No|start_char=3045|end_char=3046
8	margin	margin	NOUN	NN	Number=Sing	7	_	_	start_char=3046|end_char=3052
9	planes	plane	NOUN	NNS	Number=Plur	8	_	_	start_char=3053|end_char=3059
10	(	(	PUNCT	-LRB-	_	9	_	_	SpaceAfter=No|start_char=3060|end_char=3061
11	circled	circle	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	10	_	_	SpaceAfter=No|start_char=3061|end_char=3068
12	)	)	PUNCT	-RRB-	_	11	_	_	start_char=3068|end_char=3069
13	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	12	_	_	start_char=3070|end_char=3073
14	called	call	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	13	_	_	start_char=3074|end_char=3080
15	support	support	NOUN	NN	Number=Sing	14	_	_	start_char=3081|end_char=3088
16	vectors	vector	NOUN	NNS	Number=Plur	15	_	_	start_char=3089|end_char=3096
17	and	and	CCONJ	CC	_	16	_	_	start_char=3097|end_char=3100
18	used	use	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	17	_	_	start_char=3101|end_char=3105
19	to	to	PART	TO	_	18	_	_	start_char=3106|end_char=3108
20	classify	classify	VERB	VB	VerbForm=Inf	19	_	_	start_char=3109|end_char=3117
21	new	new	ADJ	JJ	Degree=Pos	20	_	_	SpaceAfter=No|start_char=3118|end_char=3121
22	,	,	PUNCT	,	_	21	_	_	start_char=3121|end_char=3122
23	unlabeled	unlabeled	ADJ	JJ	Degree=Pos	22	_	_	start_char=3123|end_char=3132
24	data	datum	NOUN	NNS	Number=Plur	23	_	_	SpaceAfter=No|start_char=3133|end_char=3137
25	.	.	PUNCT	.	_	24	_	_	start_char=3137|end_char=3138

# text = that data points can be viewed as "species" that compete for resources, with each feature identified with a distinct resource, and the kernel function specifying the niche overlap between species/datapoints [11, 12] . this mapping allows us to reinterpret svms as complex ecosystems that self-organize into ecologically stable steady states defined by their support vectors.
# sent_id = 15
1	that	that	SCONJ	IN	_	0	_	_	start_char=3139|end_char=3143
2	data	datum	NOUN	NN	Number=Sing	1	_	_	start_char=3144|end_char=3148
3	points	point	NOUN	NNS	Number=Plur	2	_	_	start_char=3149|end_char=3155
4	can	can	AUX	MD	VerbForm=Fin	3	_	_	start_char=3156|end_char=3159
5	be	be	AUX	VB	VerbForm=Inf	4	_	_	start_char=3160|end_char=3162
6	viewed	view	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	5	_	_	start_char=3163|end_char=3169
7	as	as	ADP	IN	_	6	_	_	start_char=3170|end_char=3172
8	"	"	PUNCT	``	_	7	_	_	SpaceAfter=No|start_char=3173|end_char=3174
9	species	species	NOUN	NNS	Number=Plur	8	_	_	SpaceAfter=No|start_char=3174|end_char=3181
10	"	"	PUNCT	''	_	9	_	_	start_char=3181|end_char=3182
11	that	that	PRON	WDT	PronType=Rel	10	_	_	start_char=3183|end_char=3187
12	compete	compete	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	11	_	_	start_char=3188|end_char=3195
13	for	for	ADP	IN	_	12	_	_	start_char=3196|end_char=3199
14	resources	resource	NOUN	NNS	Number=Plur	13	_	_	SpaceAfter=No|start_char=3200|end_char=3209
15	,	,	PUNCT	,	_	14	_	_	start_char=3209|end_char=3210
16	with	with	ADP	IN	_	15	_	_	start_char=3211|end_char=3215
17	each	each	DET	DT	PronType=Tot	16	_	_	start_char=3216|end_char=3220
18	feature	feature	NOUN	NN	Number=Sing	17	_	_	start_char=3221|end_char=3228
19	identified	identify	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	18	_	_	start_char=3229|end_char=3239
20	with	with	ADP	IN	_	19	_	_	start_char=3240|end_char=3244
21	a	a	DET	DT	Definite=Ind|PronType=Art	20	_	_	start_char=3245|end_char=3246
22	distinct	distinct	ADJ	JJ	Degree=Pos	21	_	_	start_char=3247|end_char=3255
23	resource	resource	NOUN	NN	Number=Sing	22	_	_	SpaceAfter=No|start_char=3256|end_char=3264
24	,	,	PUNCT	,	_	23	_	_	start_char=3264|end_char=3265
25	and	and	CCONJ	CC	_	24	_	_	start_char=3266|end_char=3269
26	the	the	DET	DT	Definite=Def|PronType=Art	25	_	_	start_char=3270|end_char=3273
27	kernel	kernel	NOUN	NN	Number=Sing	26	_	_	start_char=3274|end_char=3280
28	function	function	NOUN	NN	Number=Sing	27	_	_	start_char=3281|end_char=3289
29	specifying	specify	VERB	VBG	VerbForm=Ger	28	_	_	start_char=3290|end_char=3300
30	the	the	DET	DT	Definite=Def|PronType=Art	29	_	_	start_char=3301|end_char=3304
31	niche	niche	NOUN	NN	Number=Sing	30	_	_	start_char=3305|end_char=3310
32	overlap	overlap	NOUN	NN	Number=Sing	31	_	_	start_char=3311|end_char=3318
33	between	between	ADP	IN	_	32	_	_	start_char=3319|end_char=3326
34	species	species	NOUN	NNS	Number=Plur	33	_	_	SpaceAfter=No|start_char=3327|end_char=3334
35	/	/	SYM	,	_	34	_	_	SpaceAfter=No|start_char=3334|end_char=3335
36	datapoints	datapoint	NOUN	NNS	Number=Plur	35	_	_	start_char=3335|end_char=3345
37	[	[	PUNCT	-LRB-	_	36	_	_	SpaceAfter=No|start_char=3346|end_char=3347
38	11	11	NUM	CD	NumForm=Digit|NumType=Card	37	_	_	SpaceAfter=No|start_char=3347|end_char=3349
39	,	,	PUNCT	,	_	38	_	_	start_char=3349|end_char=3350
40	12	12	NUM	CD	NumForm=Digit|NumType=Card	39	_	_	SpaceAfter=No|start_char=3351|end_char=3353
41	]	]	PUNCT	-RRB-	_	40	_	_	start_char=3353|end_char=3354
42	.	.	PUNCT	.	_	41	_	_	start_char=3355|end_char=3356
43	this	this	DET	DT	Number=Sing|PronType=Dem	42	_	_	start_char=3357|end_char=3361
44	mapping	mapping	NOUN	NN	Number=Sing	43	_	_	start_char=3362|end_char=3369
45	allows	allow	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	44	_	_	start_char=3370|end_char=3376
46	us	we	PRON	PRP	Case=Acc|Number=Plur|Person=1|PronType=Prs	45	_	_	start_char=3377|end_char=3379
47	to	to	PART	TO	_	46	_	_	start_char=3380|end_char=3382
48	reinterpret	reinterpret	VERB	VB	VerbForm=Inf	47	_	_	start_char=3383|end_char=3394
49	svms	svm	NOUN	NNS	Number=Plur	48	_	_	start_char=3395|end_char=3399
50	as	as	ADP	IN	_	49	_	_	start_char=3400|end_char=3402
51	complex	complex	ADJ	JJ	Degree=Pos	50	_	_	start_char=3403|end_char=3410
52	ecosystems	ecosystem	NOUN	NNS	Number=Plur	51	_	_	start_char=3411|end_char=3421
53	that	that	PRON	WDT	PronType=Rel	52	_	_	start_char=3422|end_char=3426
54	self	self	NOUN	NN	Number=Sing	53	_	_	SpaceAfter=No|start_char=3427|end_char=3431
55	-	-	PUNCT	HYPH	_	54	_	_	SpaceAfter=No|start_char=3431|end_char=3432
56	organize	organize	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	55	_	_	start_char=3432|end_char=3440
57	into	into	ADP	IN	_	56	_	_	start_char=3441|end_char=3445
58	ecologically	ecologically	ADV	RB	_	57	_	_	start_char=3446|end_char=3458
59	stable	stable	ADJ	JJ	Degree=Pos	58	_	_	start_char=3459|end_char=3465
60	steady	steady	ADJ	JJ	Degree=Pos	59	_	_	start_char=3466|end_char=3472
61	states	state	NOUN	NNS	Number=Plur	60	_	_	start_char=3473|end_char=3479
62	defined	define	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	61	_	_	start_char=3480|end_char=3487
63	by	by	ADP	IN	_	62	_	_	start_char=3488|end_char=3490
64	their	their	PRON	PRP$	Case=Gen|Number=Plur|Person=3|Poss=Yes|PronType=Prs	63	_	_	start_char=3491|end_char=3496
65	support	support	NOUN	NN	Number=Sing	64	_	_	start_char=3497|end_char=3504
66	vectors	vector	NOUN	NNS	Number=Plur	65	_	_	SpaceAfter=No|start_char=3505|end_char=3512
67	.	.	PUNCT	.	_	66	_	_	start_char=3512|end_char=3513

# text = this new ecological perspective naturally leads to a new online algorithms based on ecological invasion for svms as well as for outlier detection kernel methods such as support vector data description (svdd) [13, 14] . we also show that our ecological svdd method is equivalent to the online algorithm derived in [15] .
# sent_id = 16
1	this	this	DET	DT	Number=Sing|PronType=Dem	0	_	_	start_char=3514|end_char=3518
2	new	new	ADJ	JJ	Degree=Pos	1	_	_	start_char=3519|end_char=3522
3	ecological	ecological	ADJ	JJ	Degree=Pos	2	_	_	start_char=3523|end_char=3533
4	perspective	perspective	NOUN	NN	Number=Sing	3	_	_	start_char=3534|end_char=3545
5	naturally	naturally	ADV	RB	_	4	_	_	start_char=3546|end_char=3555
6	leads	lead	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	_	_	start_char=3556|end_char=3561
7	to	to	ADP	IN	_	6	_	_	start_char=3562|end_char=3564
8	a	a	DET	DT	Definite=Ind|PronType=Art	7	_	_	start_char=3565|end_char=3566
9	new	new	ADJ	JJ	Degree=Pos	8	_	_	start_char=3567|end_char=3570
10	online	online	ADJ	JJ	Degree=Pos	9	_	_	start_char=3571|end_char=3577
11	algorithms	algorithm	NOUN	NNS	Number=Plur	10	_	_	start_char=3578|end_char=3588
12	based	base	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	11	_	_	start_char=3589|end_char=3594
13	on	on	ADP	IN	_	12	_	_	start_char=3595|end_char=3597
14	ecological	ecological	ADJ	JJ	Degree=Pos	13	_	_	start_char=3598|end_char=3608
15	invasion	invasion	NOUN	NN	Number=Sing	14	_	_	start_char=3609|end_char=3617
16	for	for	ADP	IN	_	15	_	_	start_char=3618|end_char=3621
17	svms	svm	NOUN	NNS	Number=Plur	16	_	_	start_char=3622|end_char=3626
18	as	as	ADV	RB	ExtPos=CCONJ	17	_	_	start_char=3627|end_char=3629
19	well	well	ADV	RB	Degree=Pos	18	_	_	start_char=3630|end_char=3634
20	as	as	ADP	IN	_	19	_	_	start_char=3635|end_char=3637
21	for	for	ADP	IN	_	20	_	_	start_char=3638|end_char=3641
22	outlier	outlier	ADJ	JJ	Degree=Pos	21	_	_	start_char=3642|end_char=3649
23	detection	detection	NOUN	NN	Number=Sing	22	_	_	start_char=3650|end_char=3659
24	kernel	kernel	NOUN	NN	Number=Sing	23	_	_	start_char=3660|end_char=3666
25	methods	method	NOUN	NNS	Number=Plur	24	_	_	start_char=3667|end_char=3674
26	such	such	ADJ	JJ	ExtPos=ADP	25	_	_	start_char=3675|end_char=3679
27	as	as	ADP	IN	_	26	_	_	start_char=3680|end_char=3682
28	support	support	NOUN	NN	Number=Sing	27	_	_	start_char=3683|end_char=3690
29	vector	vector	NOUN	NN	Number=Sing	28	_	_	start_char=3691|end_char=3697
30	data	datum	NOUN	NN	Number=Sing	29	_	_	start_char=3698|end_char=3702
31	description	description	NOUN	NN	Number=Sing	30	_	_	start_char=3703|end_char=3714
32	(	(	PUNCT	-LRB-	_	31	_	_	SpaceAfter=No|start_char=3715|end_char=3716
33	svdd	svdd	PROPN	NNP	Number=Sing	32	_	_	SpaceAfter=No|start_char=3716|end_char=3720
34	)	)	PUNCT	-RRB-	_	33	_	_	start_char=3720|end_char=3721
35	[	[	PUNCT	-LRB-	_	34	_	_	SpaceAfter=No|start_char=3722|end_char=3723
36	13	13	NUM	CD	NumForm=Digit|NumType=Card	35	_	_	SpaceAfter=No|start_char=3723|end_char=3725
37	,	,	PUNCT	,	_	36	_	_	start_char=3725|end_char=3726
38	14	14	NUM	CD	NumForm=Digit|NumType=Card	37	_	_	SpaceAfter=No|start_char=3727|end_char=3729
39	]	]	PUNCT	-RRB-	_	38	_	_	start_char=3729|end_char=3730
40	.	.	PUNCT	.	_	39	_	_	start_char=3731|end_char=3732
41	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	40	_	_	start_char=3733|end_char=3735
42	also	also	ADV	RB	_	41	_	_	start_char=3736|end_char=3740
43	show	show	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	42	_	_	start_char=3741|end_char=3745
44	that	that	SCONJ	IN	_	43	_	_	start_char=3746|end_char=3750
45	our	our	PRON	PRP$	Case=Gen|Number=Plur|Person=1|Poss=Yes|PronType=Prs	44	_	_	start_char=3751|end_char=3754
46	ecological	ecological	ADJ	JJ	Degree=Pos	45	_	_	start_char=3755|end_char=3765
47	svdd	svdd	NOUN	NN	Number=Sing	46	_	_	start_char=3766|end_char=3770
48	method	method	NOUN	NN	Number=Sing	47	_	_	start_char=3771|end_char=3777
49	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	48	_	_	start_char=3778|end_char=3780
50	equivalent	equivalent	ADJ	JJ	Degree=Pos	49	_	_	start_char=3781|end_char=3791
51	to	to	ADP	IN	_	50	_	_	start_char=3792|end_char=3794
52	the	the	DET	DT	Definite=Def|PronType=Art	51	_	_	start_char=3795|end_char=3798
53	online	online	ADJ	JJ	Degree=Pos	52	_	_	start_char=3799|end_char=3805
54	algorithm	algorithm	NOUN	NN	Number=Sing	53	_	_	start_char=3806|end_char=3815
55	derived	derive	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	54	_	_	start_char=3816|end_char=3823
56	in	in	ADP	IN	_	55	_	_	start_char=3824|end_char=3826
57	[	[	PUNCT	-LRB-	_	56	_	_	SpaceAfter=No|start_char=3827|end_char=3828
58	15	15	NUM	CD	NumForm=Digit|NumType=Card	57	_	_	SpaceAfter=No|start_char=3828|end_char=3830
59	]	]	PUNCT	-RRB-	_	58	_	_	start_char=3830|end_char=3831
60	.	.	PUNCT	.	_	59	_	_	SpaceAfter=No|start_char=3832|end_char=3833

