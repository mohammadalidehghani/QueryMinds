# text = an aggregate and iterative disaggregate algorithm with proven optimality in machine learning we propose a clustering-based iterative algorithm to solve certain optimization problems in machine learning, where we start the algorithm by aggregating the original data, solving the problem on aggregated data, and then in subsequent steps gradually disaggregate the aggregated data.
# sent_id = 0
1	an	a	DET	DT	Definite=Ind|PronType=Art	0	_	_	start_char=0|end_char=2
2	aggregate	aggregate	ADJ	JJ	Degree=Pos	1	_	_	start_char=3|end_char=12
3	and	and	CCONJ	CC	_	2	_	_	start_char=13|end_char=16
4	iterative	iterative	ADJ	JJ	Degree=Pos	3	_	_	start_char=17|end_char=26
5	disaggregate	disaggregate	NOUN	NN	Number=Sing	4	_	_	start_char=27|end_char=39
6	algorithm	algorithm	NOUN	NN	Number=Sing	5	_	_	start_char=40|end_char=49
7	with	with	ADP	IN	_	6	_	_	start_char=50|end_char=54
8	proven	prove	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	7	_	_	start_char=55|end_char=61
9	optimality	optimality	NOUN	NN	Number=Sing	8	_	_	start_char=62|end_char=72
10	in	in	ADP	IN	_	9	_	_	start_char=73|end_char=75
11	machine	machine	NOUN	NN	Number=Sing	10	_	_	start_char=76|end_char=83
12	learning	learning	NOUN	NN	Number=Sing	11	_	_	start_char=84|end_char=92
13	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	12	_	_	start_char=93|end_char=95
14	propose	propose	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	13	_	_	start_char=96|end_char=103
15	a	a	DET	DT	Definite=Ind|PronType=Art	14	_	_	start_char=104|end_char=105
16	clustering	clustering	NOUN	NN	Number=Sing	15	_	_	SpaceAfter=No|start_char=106|end_char=116
17	-	-	PUNCT	HYPH	_	16	_	_	SpaceAfter=No|start_char=116|end_char=117
18	based	base	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	17	_	_	start_char=117|end_char=122
19	iterative	iterative	ADJ	JJ	Degree=Pos	18	_	_	start_char=123|end_char=132
20	algorithm	algorithm	NOUN	NN	Number=Sing	19	_	_	start_char=133|end_char=142
21	to	to	PART	TO	_	20	_	_	start_char=143|end_char=145
22	solve	solve	VERB	VB	VerbForm=Inf	21	_	_	start_char=146|end_char=151
23	certain	certain	ADJ	JJ	Degree=Pos	22	_	_	start_char=152|end_char=159
24	optimization	optimization	NOUN	NN	Number=Sing	23	_	_	start_char=160|end_char=172
25	problems	problem	NOUN	NNS	Number=Plur	24	_	_	start_char=173|end_char=181
26	in	in	ADP	IN	_	25	_	_	start_char=182|end_char=184
27	machine	machine	NOUN	NN	Number=Sing	26	_	_	start_char=185|end_char=192
28	learning	learning	NOUN	NN	Number=Sing	27	_	_	SpaceAfter=No|start_char=193|end_char=201
29	,	,	PUNCT	,	_	28	_	_	start_char=201|end_char=202
30	where	where	ADV	WRB	PronType=Rel	29	_	_	start_char=203|end_char=208
31	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	30	_	_	start_char=209|end_char=211
32	start	start	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	31	_	_	start_char=212|end_char=217
33	the	the	DET	DT	Definite=Def|PronType=Art	32	_	_	start_char=218|end_char=221
34	algorithm	algorithm	NOUN	NN	Number=Sing	33	_	_	start_char=222|end_char=231
35	by	by	SCONJ	IN	_	34	_	_	start_char=232|end_char=234
36	aggregating	aggregate	VERB	VBG	Tense=Pres|VerbForm=Part	35	_	_	start_char=235|end_char=246
37	the	the	DET	DT	Definite=Def|PronType=Art	36	_	_	start_char=247|end_char=250
38	original	original	ADJ	JJ	Degree=Pos	37	_	_	start_char=251|end_char=259
39	data	datum	NOUN	NNS	Number=Plur	38	_	_	SpaceAfter=No|start_char=260|end_char=264
40	,	,	PUNCT	,	_	39	_	_	start_char=264|end_char=265
41	solving	solve	VERB	VBG	Tense=Pres|VerbForm=Part	40	_	_	start_char=266|end_char=273
42	the	the	DET	DT	Definite=Def|PronType=Art	41	_	_	start_char=274|end_char=277
43	problem	problem	NOUN	NN	Number=Sing	42	_	_	start_char=278|end_char=285
44	on	on	ADP	IN	_	43	_	_	start_char=286|end_char=288
45	aggregated	aggregate	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	44	_	_	start_char=289|end_char=299
46	data	datum	NOUN	NNS	Number=Plur	45	_	_	SpaceAfter=No|start_char=300|end_char=304
47	,	,	PUNCT	,	_	46	_	_	start_char=304|end_char=305
48	and	and	CCONJ	CC	_	47	_	_	start_char=306|end_char=309
49	then	then	ADV	RB	PronType=Dem	48	_	_	start_char=310|end_char=314
50	in	in	ADP	IN	_	49	_	_	start_char=315|end_char=317
51	subsequent	subsequent	ADJ	JJ	Degree=Pos	50	_	_	start_char=318|end_char=328
52	steps	step	NOUN	NNS	Number=Plur	51	_	_	start_char=329|end_char=334
53	gradually	gradually	ADV	RB	_	52	_	_	start_char=335|end_char=344
54	disaggregate	disaggregate	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	53	_	_	start_char=345|end_char=357
55	the	the	DET	DT	Definite=Def|PronType=Art	54	_	_	start_char=358|end_char=361
56	aggregated	aggregate	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	55	_	_	start_char=362|end_char=372
57	data	datum	NOUN	NNS	Number=Plur	56	_	_	SpaceAfter=No|start_char=373|end_char=377
58	.	.	PUNCT	.	_	57	_	_	start_char=377|end_char=378

# text = we apply the algorithm to common machine learning problems such as the least absolute deviation regression problem, support vector machines, and semi-supervised support vector machines.
# sent_id = 1
1	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	0	_	_	start_char=379|end_char=381
2	apply	apply	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	1	_	_	start_char=382|end_char=387
3	the	the	DET	DT	Definite=Def|PronType=Art	2	_	_	start_char=388|end_char=391
4	algorithm	algorithm	NOUN	NN	Number=Sing	3	_	_	start_char=392|end_char=401
5	to	to	ADP	IN	_	4	_	_	start_char=402|end_char=404
6	common	common	ADJ	JJ	Degree=Pos	5	_	_	start_char=405|end_char=411
7	machine	machine	NOUN	NN	Number=Sing	6	_	_	start_char=412|end_char=419
8	learning	learning	NOUN	NN	Number=Sing	7	_	_	start_char=420|end_char=428
9	problems	problem	NOUN	NNS	Number=Plur	8	_	_	start_char=429|end_char=437
10	such	such	ADJ	JJ	ExtPos=ADP	9	_	_	start_char=438|end_char=442
11	as	as	ADP	IN	_	10	_	_	start_char=443|end_char=445
12	the	the	DET	DT	Definite=Def|PronType=Art	11	_	_	start_char=446|end_char=449
13	least	least	ADJ	JJS	Degree=Sup	12	_	_	start_char=450|end_char=455
14	absolute	absolute	ADJ	JJ	Degree=Pos	13	_	_	start_char=456|end_char=464
15	deviation	deviation	NOUN	NN	Number=Sing	14	_	_	start_char=465|end_char=474
16	regression	regression	NOUN	NN	Number=Sing	15	_	_	start_char=475|end_char=485
17	problem	problem	NOUN	NN	Number=Sing	16	_	_	SpaceAfter=No|start_char=486|end_char=493
18	,	,	PUNCT	,	_	17	_	_	start_char=493|end_char=494
19	support	support	NOUN	NN	Number=Sing	18	_	_	start_char=495|end_char=502
20	vector	vector	NOUN	NN	Number=Sing	19	_	_	start_char=503|end_char=509
21	machines	machine	NOUN	NNS	Number=Plur	20	_	_	SpaceAfter=No|start_char=510|end_char=518
22	,	,	PUNCT	,	_	21	_	_	start_char=518|end_char=519
23	and	and	CCONJ	CC	_	22	_	_	start_char=520|end_char=523
24	semi	semi	NOUN	NN	Number=Sing	23	_	_	SpaceAfter=No|start_char=524|end_char=528
25	-	-	PUNCT	HYPH	_	24	_	_	SpaceAfter=No|start_char=528|end_char=529
26	supervised	supervise	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	25	_	_	start_char=529|end_char=539
27	support	support	NOUN	NN	Number=Sing	26	_	_	start_char=540|end_char=547
28	vector	vector	NOUN	NN	Number=Sing	27	_	_	start_char=548|end_char=554
29	machines	machine	NOUN	NNS	Number=Plur	28	_	_	SpaceAfter=No|start_char=555|end_char=563
30	.	.	PUNCT	.	_	29	_	_	start_char=563|end_char=564

# text = we derive model-specific data aggregation and disaggregation procedures.
# sent_id = 2
1	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	0	_	_	start_char=565|end_char=567
2	derive	derive	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	1	_	_	start_char=568|end_char=574
3	model	model	NOUN	NN	Number=Sing	2	_	_	SpaceAfter=No|start_char=575|end_char=580
4	-	-	PUNCT	HYPH	_	3	_	_	SpaceAfter=No|start_char=580|end_char=581
5	specific	specific	ADJ	JJ	Degree=Pos	4	_	_	start_char=581|end_char=589
6	data	datum	NOUN	NN	Number=Sing	5	_	_	start_char=590|end_char=594
7	aggregation	aggregation	NOUN	NN	Number=Sing	6	_	_	start_char=595|end_char=606
8	and	and	CCONJ	CC	_	7	_	_	start_char=607|end_char=610
9	disaggregation	disaggregation	NOUN	NN	Number=Sing	8	_	_	start_char=611|end_char=625
10	procedures	procedure	NOUN	NNS	Number=Plur	9	_	_	SpaceAfter=No|start_char=626|end_char=636
11	.	.	PUNCT	.	_	10	_	_	start_char=636|end_char=637

# text = we also show optimality, convergence, and the optimality gap of the approximated solution in each iteration.
# sent_id = 3
1	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	0	_	_	start_char=638|end_char=640
2	also	also	ADV	RB	_	1	_	_	start_char=641|end_char=645
3	show	show	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	2	_	_	start_char=646|end_char=650
4	optimality	optimality	NOUN	NN	Number=Sing	3	_	_	SpaceAfter=No|start_char=651|end_char=661
5	,	,	PUNCT	,	_	4	_	_	start_char=661|end_char=662
6	convergence	convergence	NOUN	NN	Number=Sing	5	_	_	SpaceAfter=No|start_char=663|end_char=674
7	,	,	PUNCT	,	_	6	_	_	start_char=674|end_char=675
8	and	and	CCONJ	CC	_	7	_	_	start_char=676|end_char=679
9	the	the	DET	DT	Definite=Def|PronType=Art	8	_	_	start_char=680|end_char=683
10	optimality	optimality	NOUN	NN	Number=Sing	9	_	_	start_char=684|end_char=694
11	gap	gap	NOUN	NN	Number=Sing	10	_	_	start_char=695|end_char=698
12	of	of	ADP	IN	_	11	_	_	start_char=699|end_char=701
13	the	the	DET	DT	Definite=Def|PronType=Art	12	_	_	start_char=702|end_char=705
14	approximated	approximate	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	13	_	_	start_char=706|end_char=718
15	solution	solution	NOUN	NN	Number=Sing	14	_	_	start_char=719|end_char=727
16	in	in	ADP	IN	_	15	_	_	start_char=728|end_char=730
17	each	each	DET	DT	PronType=Tot	16	_	_	start_char=731|end_char=735
18	iteration	iteration	NOUN	NN	Number=Sing	17	_	_	SpaceAfter=No|start_char=736|end_char=745
19	.	.	PUNCT	.	_	18	_	_	start_char=745|end_char=746

# text = a computational study is provided.
# sent_id = 4
1	a	a	DET	DT	Definite=Ind|PronType=Art	0	_	_	start_char=747|end_char=748
2	computational	computational	ADJ	JJ	Degree=Pos	1	_	_	start_char=749|end_char=762
3	study	study	NOUN	NN	Number=Sing	2	_	_	start_char=763|end_char=768
4	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	_	_	start_char=769|end_char=771
5	provided	provide	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	4	_	_	SpaceAfter=No|start_char=772|end_char=780
6	.	.	PUNCT	.	_	5	_	_	start_char=780|end_char=781

# text = introduction in this paper, we propose a clustering-based iterative algorithm to solve certain optimization problems in machine learning when data size is large and thus it becomes impractical to use out-of-the-box algorithms.
# sent_id = 5
1	introduction	introduction	NOUN	NN	Number=Sing	0	_	_	start_char=782|end_char=794
2	in	in	ADP	IN	_	1	_	_	start_char=795|end_char=797
3	this	this	DET	DT	Number=Sing|PronType=Dem	2	_	_	start_char=798|end_char=802
4	paper	paper	NOUN	NN	Number=Sing	3	_	_	SpaceAfter=No|start_char=803|end_char=808
5	,	,	PUNCT	,	_	4	_	_	start_char=808|end_char=809
6	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	5	_	_	start_char=810|end_char=812
7	propose	propose	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	6	_	_	start_char=813|end_char=820
8	a	a	DET	DT	Definite=Ind|PronType=Art	7	_	_	start_char=821|end_char=822
9	clustering	clustering	NOUN	NN	Number=Sing	8	_	_	SpaceAfter=No|start_char=823|end_char=833
10	-	-	PUNCT	HYPH	_	9	_	_	SpaceAfter=No|start_char=833|end_char=834
11	based	base	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	10	_	_	start_char=834|end_char=839
12	iterative	iterative	ADJ	JJ	Degree=Pos	11	_	_	start_char=840|end_char=849
13	algorithm	algorithm	NOUN	NN	Number=Sing	12	_	_	start_char=850|end_char=859
14	to	to	PART	TO	_	13	_	_	start_char=860|end_char=862
15	solve	solve	VERB	VB	VerbForm=Inf	14	_	_	start_char=863|end_char=868
16	certain	certain	ADJ	JJ	Degree=Pos	15	_	_	start_char=869|end_char=876
17	optimization	optimization	NOUN	NN	Number=Sing	16	_	_	start_char=877|end_char=889
18	problems	problem	NOUN	NNS	Number=Plur	17	_	_	start_char=890|end_char=898
19	in	in	ADP	IN	_	18	_	_	start_char=899|end_char=901
20	machine	machine	NOUN	NN	Number=Sing	19	_	_	start_char=902|end_char=909
21	learning	learning	NOUN	NN	Number=Sing	20	_	_	start_char=910|end_char=918
22	when	when	ADV	WRB	PronType=Int	21	_	_	start_char=919|end_char=923
23	data	datum	NOUN	NNS	Number=Plur	22	_	_	start_char=924|end_char=928
24	size	size	NOUN	NN	Number=Sing	23	_	_	start_char=929|end_char=933
25	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	24	_	_	start_char=934|end_char=936
26	large	large	ADJ	JJ	Degree=Pos	25	_	_	start_char=937|end_char=942
27	and	and	CCONJ	CC	_	26	_	_	start_char=943|end_char=946
28	thus	thus	ADV	RB	_	27	_	_	start_char=947|end_char=951
29	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	28	_	_	start_char=952|end_char=954
30	becomes	become	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	29	_	_	start_char=955|end_char=962
31	impractical	impractical	ADJ	JJ	Degree=Pos	30	_	_	start_char=963|end_char=974
32	to	to	PART	TO	_	31	_	_	start_char=975|end_char=977
33	use	use	VERB	VB	VerbForm=Inf	32	_	_	start_char=978|end_char=981
34	out	out	ADP	RP	_	33	_	_	SpaceAfter=No|start_char=982|end_char=985
35	-	-	PUNCT	HYPH	_	34	_	_	SpaceAfter=No|start_char=985|end_char=986
36	of	of	ADP	IN	_	35	_	_	SpaceAfter=No|start_char=986|end_char=988
37	-	-	PUNCT	HYPH	_	36	_	_	SpaceAfter=No|start_char=988|end_char=989
38	the	the	DET	DT	Definite=Def|PronType=Art	37	_	_	SpaceAfter=No|start_char=989|end_char=992
39	-	-	PUNCT	HYPH	_	38	_	_	SpaceAfter=No|start_char=992|end_char=993
40	box	box	NOUN	NN	Number=Sing	39	_	_	start_char=993|end_char=996
41	algorithms	algorithm	NOUN	NNS	Number=Plur	40	_	_	SpaceAfter=No|start_char=997|end_char=1007
42	.	.	PUNCT	.	_	41	_	_	start_char=1007|end_char=1008

# text = we rely on the principle of data aggregation and then subsequent disaggregations.
# sent_id = 6
1	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	0	_	_	start_char=1009|end_char=1011
2	rely	rely	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	1	_	_	start_char=1012|end_char=1016
3	on	on	ADP	IN	_	2	_	_	start_char=1017|end_char=1019
4	the	the	DET	DT	Definite=Def|PronType=Art	3	_	_	start_char=1020|end_char=1023
5	principle	principle	NOUN	NN	Number=Sing	4	_	_	start_char=1024|end_char=1033
6	of	of	ADP	IN	_	5	_	_	start_char=1034|end_char=1036
7	data	datum	NOUN	NN	Number=Sing	6	_	_	start_char=1037|end_char=1041
8	aggregation	aggregation	NOUN	NN	Number=Sing	7	_	_	start_char=1042|end_char=1053
9	and	and	CCONJ	CC	_	8	_	_	start_char=1054|end_char=1057
10	then	then	ADV	RB	PronType=Dem	9	_	_	start_char=1058|end_char=1062
11	subsequent	subsequent	ADJ	JJ	Degree=Pos	10	_	_	start_char=1063|end_char=1073
12	disaggregations	disaggregation	NOUN	NNS	Number=Plur	11	_	_	SpaceAfter=No|start_char=1074|end_char=1089
13	.	.	PUNCT	.	_	12	_	_	start_char=1089|end_char=1090

# text = while it is standard practice to aggregate the data and then calibrate the machine learning algorithm on aggregated data, we embed this into an iterative framework where initial aggregations are gradually disaggregated to the extent that even an optimal solution is obtainable.
# sent_id = 7
1	while	while	SCONJ	IN	_	0	_	_	start_char=1091|end_char=1096
2	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	1	_	_	start_char=1097|end_char=1099
3	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	_	_	start_char=1100|end_char=1102
4	standard	standard	ADJ	JJ	Degree=Pos	3	_	_	start_char=1103|end_char=1111
5	practice	practice	NOUN	NN	Number=Sing	4	_	_	start_char=1112|end_char=1120
6	to	to	PART	TO	_	5	_	_	start_char=1121|end_char=1123
7	aggregate	aggregate	VERB	VB	VerbForm=Inf	6	_	_	start_char=1124|end_char=1133
8	the	the	DET	DT	Definite=Def|PronType=Art	7	_	_	start_char=1134|end_char=1137
9	data	datum	NOUN	NNS	Number=Plur	8	_	_	start_char=1138|end_char=1142
10	and	and	CCONJ	CC	_	9	_	_	start_char=1143|end_char=1146
11	then	then	ADV	RB	PronType=Dem	10	_	_	start_char=1147|end_char=1151
12	calibrate	calibrate	VERB	VB	VerbForm=Inf	11	_	_	start_char=1152|end_char=1161
13	the	the	DET	DT	Definite=Def|PronType=Art	12	_	_	start_char=1162|end_char=1165
14	machine	machine	NOUN	NN	Number=Sing	13	_	_	start_char=1166|end_char=1173
15	learning	learning	NOUN	NN	Number=Sing	14	_	_	start_char=1174|end_char=1182
16	algorithm	algorithm	NOUN	NN	Number=Sing	15	_	_	start_char=1183|end_char=1192
17	on	on	ADP	IN	_	16	_	_	start_char=1193|end_char=1195
18	aggregated	aggregate	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	17	_	_	start_char=1196|end_char=1206
19	data	datum	NOUN	NNS	Number=Plur	18	_	_	SpaceAfter=No|start_char=1207|end_char=1211
20	,	,	PUNCT	,	_	19	_	_	start_char=1211|end_char=1212
21	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	20	_	_	start_char=1213|end_char=1215
22	embed	emb	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	21	_	_	start_char=1216|end_char=1221
23	this	this	PRON	DT	Number=Sing|PronType=Dem	22	_	_	start_char=1222|end_char=1226
24	into	into	ADP	IN	_	23	_	_	start_char=1227|end_char=1231
25	an	a	DET	DT	Definite=Ind|PronType=Art	24	_	_	start_char=1232|end_char=1234
26	iterative	iterative	ADJ	JJ	Degree=Pos	25	_	_	start_char=1235|end_char=1244
27	framework	framework	NOUN	NN	Number=Sing	26	_	_	start_char=1245|end_char=1254
28	where	where	ADV	WRB	PronType=Rel	27	_	_	start_char=1255|end_char=1260
29	initial	initial	ADJ	JJ	Degree=Pos	28	_	_	start_char=1261|end_char=1268
30	aggregations	aggregation	NOUN	NNS	Number=Plur	29	_	_	start_char=1269|end_char=1281
31	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	30	_	_	start_char=1282|end_char=1285
32	gradually	gradually	ADV	RB	_	31	_	_	start_char=1286|end_char=1295
33	disaggregated	disaggregate	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	32	_	_	start_char=1296|end_char=1309
34	to	to	ADP	IN	_	33	_	_	start_char=1310|end_char=1312
35	the	the	DET	DT	Definite=Def|PronType=Art	34	_	_	start_char=1313|end_char=1316
36	extent	extent	NOUN	NN	Number=Sing	35	_	_	start_char=1317|end_char=1323
37	that	that	SCONJ	IN	_	36	_	_	start_char=1324|end_char=1328
38	even	even	ADV	RB	_	37	_	_	start_char=1329|end_char=1333
39	an	a	DET	DT	Definite=Ind|PronType=Art	38	_	_	start_char=1334|end_char=1336
40	optimal	optimal	ADJ	JJ	Degree=Pos	39	_	_	start_char=1337|end_char=1344
41	solution	solution	NOUN	NN	Number=Sing	40	_	_	start_char=1345|end_char=1353
42	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	41	_	_	start_char=1354|end_char=1356
43	obtainable	obtainable	ADJ	JJ	Degree=Pos	42	_	_	SpaceAfter=No|start_char=1357|end_char=1367
44	.	.	PUNCT	.	_	43	_	_	start_char=1367|end_char=1368

# text = early studies in data aggregation consider transportation problems [1, 10] , where either demand or supply nodes are aggregated.
# sent_id = 8
1	early	early	ADJ	JJ	Degree=Pos	0	_	_	start_char=1369|end_char=1374
2	studies	study	NOUN	NNS	Number=Plur	1	_	_	start_char=1375|end_char=1382
3	in	in	ADP	IN	_	2	_	_	start_char=1383|end_char=1385
4	data	datum	NOUN	NN	Number=Sing	3	_	_	start_char=1386|end_char=1390
5	aggregation	aggregation	NOUN	NN	Number=Sing	4	_	_	start_char=1391|end_char=1402
6	consider	consider	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	_	_	start_char=1403|end_char=1411
7	transportation	transportation	NOUN	NN	Number=Sing	6	_	_	start_char=1412|end_char=1426
8	problems	problem	NOUN	NNS	Number=Plur	7	_	_	start_char=1427|end_char=1435
9	[	[	PUNCT	-LRB-	_	8	_	_	SpaceAfter=No|start_char=1436|end_char=1437
10	1	1	NUM	CD	NumForm=Digit|NumType=Card	9	_	_	SpaceAfter=No|start_char=1437|end_char=1438
11	,	,	PUNCT	,	_	10	_	_	start_char=1438|end_char=1439
12	10	10	NUM	CD	NumForm=Digit|NumType=Card	11	_	_	SpaceAfter=No|start_char=1440|end_char=1442
13	]	]	PUNCT	-RRB-	_	12	_	_	start_char=1442|end_char=1443
14	,	,	PUNCT	,	_	13	_	_	start_char=1444|end_char=1445
15	where	where	ADV	WRB	PronType=Rel	14	_	_	start_char=1446|end_char=1451
16	either	either	CCONJ	CC	_	15	_	_	start_char=1452|end_char=1458
17	demand	demand	NOUN	NN	Number=Sing	16	_	_	start_char=1459|end_char=1465
18	or	or	CCONJ	CC	_	17	_	_	start_char=1466|end_char=1468
19	supply	supply	NOUN	NN	Number=Sing	18	_	_	start_char=1469|end_char=1475
20	nodes	node	NOUN	NNS	Number=Plur	19	_	_	start_char=1476|end_char=1481
21	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	20	_	_	start_char=1482|end_char=1485
22	aggregated	aggregate	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	21	_	_	SpaceAfter=No|start_char=1486|end_char=1496
23	.	.	PUNCT	.	_	22	_	_	start_char=1496|end_char=1497

# text = zipkin [31] studied data aggregation for linear programming (lp) and derived error bounds of the approximate solution.
# sent_id = 9
1	zipkin	zipkin	PROPN	NNP	Number=Sing	0	_	_	start_char=1498|end_char=1504
2	[	[	PUNCT	-LRB-	_	1	_	_	SpaceAfter=No|start_char=1505|end_char=1506
3	31	31	NUM	CD	NumForm=Digit|NumType=Card	2	_	_	SpaceAfter=No|start_char=1506|end_char=1508
4	]	]	PUNCT	-RRB-	_	3	_	_	start_char=1508|end_char=1509
5	studied	study	VERB	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	_	_	start_char=1510|end_char=1517
6	data	datum	NOUN	NN	Number=Sing	5	_	_	start_char=1518|end_char=1522
7	aggregation	aggregation	NOUN	NN	Number=Sing	6	_	_	start_char=1523|end_char=1534
8	for	for	ADP	IN	_	7	_	_	start_char=1535|end_char=1538
9	linear	linear	ADJ	JJ	Degree=Pos	8	_	_	start_char=1539|end_char=1545
10	programming	programming	NOUN	NN	Number=Sing	9	_	_	start_char=1546|end_char=1557
11	(	(	PUNCT	-LRB-	_	10	_	_	SpaceAfter=No|start_char=1558|end_char=1559
12	lp	lp	NOUN	NN	Number=Sing	11	_	_	SpaceAfter=No|start_char=1559|end_char=1561
13	)	)	PUNCT	-RRB-	_	12	_	_	start_char=1561|end_char=1562
14	and	and	CCONJ	CC	_	13	_	_	start_char=1563|end_char=1566
15	derived	derive	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	14	_	_	start_char=1567|end_char=1574
16	error	error	NOUN	NN	Number=Sing	15	_	_	start_char=1575|end_char=1580
17	bounds	bound	NOUN	NNS	Number=Plur	16	_	_	start_char=1581|end_char=1587
18	of	of	ADP	IN	_	17	_	_	start_char=1588|end_char=1590
19	the	the	DET	DT	Definite=Def|PronType=Art	18	_	_	start_char=1591|end_char=1594
20	approximate	approximate	ADJ	JJ	Degree=Pos	19	_	_	start_char=1595|end_char=1606
21	solution	solution	NOUN	NN	Number=Sing	20	_	_	SpaceAfter=No|start_char=1607|end_char=1615
22	.	.	PUNCT	.	_	21	_	_	start_char=1615|end_char=1616

# text = there are also studies on data aggregation for 0-1 integer programming [8, 13] . the reader is referred to rogers et al [22] and litvinchev and tsurkov [16] for comprehensive literature reviews for aggregation techniques applied for optimization problems.
# sent_id = 10
1	there	there	PRON	EX	_	0	_	_	start_char=1617|end_char=1622
2	are	be	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	1	_	_	start_char=1623|end_char=1626
3	also	also	ADV	RB	_	2	_	_	start_char=1627|end_char=1631
4	studies	study	NOUN	NNS	Number=Plur	3	_	_	start_char=1632|end_char=1639
5	on	on	ADP	IN	_	4	_	_	start_char=1640|end_char=1642
6	data	datum	NOUN	NN	Number=Sing	5	_	_	start_char=1643|end_char=1647
7	aggregation	aggregation	NOUN	NN	Number=Sing	6	_	_	start_char=1648|end_char=1659
8	for	for	ADP	IN	_	7	_	_	start_char=1660|end_char=1663
9	0	0	NUM	CD	NumForm=Digit|NumType=Card	8	_	_	SpaceAfter=No|start_char=1664|end_char=1665
10	-	-	SYM	SYM	_	9	_	_	SpaceAfter=No|start_char=1665|end_char=1666
11	1	1	NUM	CD	NumForm=Digit|NumType=Card	10	_	_	start_char=1666|end_char=1667
12	integer	integer	NOUN	NN	Number=Sing	11	_	_	start_char=1668|end_char=1675
13	programming	programming	NOUN	NN	Number=Sing	12	_	_	start_char=1676|end_char=1687
14	[	[	PUNCT	-LRB-	_	13	_	_	SpaceAfter=No|start_char=1688|end_char=1689
15	8	8	NUM	CD	NumForm=Digit|NumType=Card	14	_	_	SpaceAfter=No|start_char=1689|end_char=1690
16	,	,	PUNCT	,	_	15	_	_	start_char=1690|end_char=1691
17	13	13	NUM	CD	NumForm=Digit|NumType=Card	16	_	_	SpaceAfter=No|start_char=1692|end_char=1694
18	]	]	PUNCT	-RRB-	_	17	_	_	start_char=1694|end_char=1695
19	.	.	PUNCT	.	_	18	_	_	start_char=1696|end_char=1697
20	the	the	DET	DT	Definite=Def|PronType=Art	19	_	_	start_char=1698|end_char=1701
21	reader	reader	NOUN	NN	Number=Sing	20	_	_	start_char=1702|end_char=1708
22	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	21	_	_	start_char=1709|end_char=1711
23	referred	refer	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	22	_	_	start_char=1712|end_char=1720
24	to	to	ADP	IN	_	23	_	_	start_char=1721|end_char=1723
25	rogers	rogers	PROPN	NNP	Number=Sing	24	_	_	start_char=1724|end_char=1730
26	et	et	X	FW	_	25	_	_	start_char=1731|end_char=1733
27	al	al	PROPN	NNP	Number=Sing	26	_	_	start_char=1734|end_char=1736
28	[	[	PUNCT	-LRB-	_	27	_	_	SpaceAfter=No|start_char=1737|end_char=1738
29	22	22	NUM	CD	NumForm=Digit|NumType=Card	28	_	_	SpaceAfter=No|start_char=1738|end_char=1740
30	]	]	PUNCT	-RRB-	_	29	_	_	start_char=1740|end_char=1741
31	and	and	CCONJ	CC	_	30	_	_	start_char=1742|end_char=1745
32	litvinchev	litvinchev	PROPN	NNP	Number=Sing	31	_	_	start_char=1746|end_char=1756
33	and	and	CCONJ	CC	_	32	_	_	start_char=1757|end_char=1760
34	tsurkov	tsurkov	PROPN	NNP	Number=Sing	33	_	_	start_char=1761|end_char=1768
35	[	[	PUNCT	-LRB-	_	34	_	_	SpaceAfter=No|start_char=1769|end_char=1770
36	16	16	NUM	CD	NumForm=Digit|NumType=Card	35	_	_	SpaceAfter=No|start_char=1770|end_char=1772
37	]	]	PUNCT	-RRB-	_	36	_	_	start_char=1772|end_char=1773
38	for	for	ADP	IN	_	37	_	_	start_char=1774|end_char=1777
39	comprehensive	comprehensive	ADJ	JJ	Degree=Pos	38	_	_	start_char=1778|end_char=1791
40	literature	literature	NOUN	NN	Number=Sing	39	_	_	start_char=1792|end_char=1802
41	reviews	review	NOUN	NNS	Number=Plur	40	_	_	start_char=1803|end_char=1810
42	for	for	ADP	IN	_	41	_	_	start_char=1811|end_char=1814
43	aggregation	aggregation	NOUN	NN	Number=Sing	42	_	_	start_char=1815|end_char=1826
44	techniques	technique	NOUN	NNS	Number=Plur	43	_	_	start_char=1827|end_char=1837
45	applied	apply	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	44	_	_	start_char=1838|end_char=1845
46	for	for	ADP	IN	_	45	_	_	start_char=1846|end_char=1849
47	optimization	optimization	NOUN	NN	Number=Sing	46	_	_	start_char=1850|end_char=1862
48	problems	problem	NOUN	NNS	Number=Plur	47	_	_	SpaceAfter=No|start_char=1863|end_char=1871
49	.	.	PUNCT	.	_	48	_	_	start_char=1871|end_char=1872

# text = for support vector machines (svm), there exist several works using the concept of clustering or data aggregation.
# sent_id = 11
1	for	for	ADP	IN	_	0	_	_	start_char=1873|end_char=1876
2	support	support	NOUN	NN	Number=Sing	1	_	_	start_char=1877|end_char=1884
3	vector	vector	NOUN	NN	Number=Sing	2	_	_	start_char=1885|end_char=1891
4	machines	machine	NOUN	NNS	Number=Plur	3	_	_	start_char=1892|end_char=1900
5	(	(	PUNCT	-LRB-	_	4	_	_	SpaceAfter=No|start_char=1901|end_char=1902
6	svm	svm	NOUN	NN	Number=Sing	5	_	_	SpaceAfter=No|start_char=1902|end_char=1905
7	)	)	PUNCT	-RRB-	_	6	_	_	SpaceAfter=No|start_char=1905|end_char=1906
8	,	,	PUNCT	,	_	7	_	_	start_char=1906|end_char=1907
9	there	there	PRON	EX	_	8	_	_	start_char=1908|end_char=1913
10	exist	exist	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	9	_	_	start_char=1914|end_char=1919
11	several	several	ADJ	JJ	Degree=Pos	10	_	_	start_char=1920|end_char=1927
12	works	work	NOUN	NNS	Number=Plur	11	_	_	start_char=1928|end_char=1933
13	using	use	VERB	VBG	VerbForm=Ger	12	_	_	start_char=1934|end_char=1939
14	the	the	DET	DT	Definite=Def|PronType=Art	13	_	_	start_char=1940|end_char=1943
15	concept	concept	NOUN	NN	Number=Sing	14	_	_	start_char=1944|end_char=1951
16	of	of	ADP	IN	_	15	_	_	start_char=1952|end_char=1954
17	clustering	clustering	NOUN	NN	Number=Sing	16	_	_	start_char=1955|end_char=1965
18	or	or	CCONJ	CC	_	17	_	_	start_char=1966|end_char=1968
19	data	datum	NOUN	NN	Number=Sing	18	_	_	start_char=1969|end_char=1973
20	aggregation	aggregation	NOUN	NN	Number=Sing	19	_	_	SpaceAfter=No|start_char=1974|end_char=1985
21	.	.	PUNCT	.	_	20	_	_	start_char=1985|end_char=1986

# text = evgeniou and pontil [11] proposed a clustering algorithm that creates large size clusters for entries surrounded by the same class and small size clusters for entries in the mixed-class area.
# sent_id = 12
1	evgeniou	evgeniou	NOUN	NN	Number=Sing	0	_	_	start_char=1987|end_char=1995
2	and	and	CCONJ	CC	_	1	_	_	start_char=1996|end_char=1999
3	pontil	pontil	NOUN	NN	Number=Sing	2	_	_	start_char=2000|end_char=2006
4	[	[	PUNCT	-LRB-	_	3	_	_	SpaceAfter=No|start_char=2007|end_char=2008
5	11	11	NUM	CD	NumForm=Digit|NumType=Card	4	_	_	SpaceAfter=No|start_char=2008|end_char=2010
6	]	]	PUNCT	-RRB-	_	5	_	_	start_char=2010|end_char=2011
7	proposed	propose	VERB	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	_	_	start_char=2012|end_char=2020
8	a	a	DET	DT	Definite=Ind|PronType=Art	7	_	_	start_char=2021|end_char=2022
9	clustering	cluster	VERB	VBG	VerbForm=Ger	8	_	_	start_char=2023|end_char=2033
10	algorithm	algorithm	NOUN	NN	Number=Sing	9	_	_	start_char=2034|end_char=2043
11	that	that	PRON	WDT	PronType=Rel	10	_	_	start_char=2044|end_char=2048
12	creates	create	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	11	_	_	start_char=2049|end_char=2056
13	large	large	ADJ	JJ	Degree=Pos	12	_	_	start_char=2057|end_char=2062
14	size	size	NOUN	NN	Number=Sing	13	_	_	start_char=2063|end_char=2067
15	clusters	cluster	NOUN	NNS	Number=Plur	14	_	_	start_char=2068|end_char=2076
16	for	for	ADP	IN	_	15	_	_	start_char=2077|end_char=2080
17	entries	entrie	NOUN	NNS	Number=Plur	16	_	_	start_char=2081|end_char=2088
18	surrounded	surround	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	17	_	_	start_char=2089|end_char=2099
19	by	by	ADP	IN	_	18	_	_	start_char=2100|end_char=2102
20	the	the	DET	DT	Definite=Def|PronType=Art	19	_	_	start_char=2103|end_char=2106
21	same	same	ADJ	JJ	Degree=Pos	20	_	_	start_char=2107|end_char=2111
22	class	class	NOUN	NN	Number=Sing	21	_	_	start_char=2112|end_char=2117
23	and	and	CCONJ	CC	_	22	_	_	start_char=2118|end_char=2121
24	small	small	ADJ	JJ	Degree=Pos	23	_	_	start_char=2122|end_char=2127
25	size	size	NOUN	NN	Number=Sing	24	_	_	start_char=2128|end_char=2132
26	clusters	cluster	NOUN	NNS	Number=Plur	25	_	_	start_char=2133|end_char=2141
27	for	for	ADP	IN	_	26	_	_	start_char=2142|end_char=2145
28	entries	entrie	NOUN	NNS	Number=Plur	27	_	_	start_char=2146|end_char=2153
29	in	in	ADP	IN	_	28	_	_	start_char=2154|end_char=2156
30	the	the	DET	DT	Definite=Def|PronType=Art	29	_	_	start_char=2157|end_char=2160
31	mixed	mix	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	30	_	_	SpaceAfter=No|start_char=2161|end_char=2166
32	-	-	PUNCT	HYPH	_	31	_	_	SpaceAfter=No|start_char=2166|end_char=2167
33	class	class	NOUN	NN	Number=Sing	32	_	_	start_char=2167|end_char=2172
34	area	area	NOUN	NN	Number=Sing	33	_	_	SpaceAfter=No|start_char=2173|end_char=2177
35	.	.	PUNCT	.	_	34	_	_	start_char=2177|end_char=2178

# text = the clustering algorithm is used to preprocess the data and the clustered data is used to solve the problem.
# sent_id = 13
1	the	the	DET	DT	Definite=Def|PronType=Art	0	_	_	start_char=2179|end_char=2182
2	clustering	clustering	NOUN	NN	Number=Sing	1	_	_	start_char=2183|end_char=2193
3	algorithm	algorithm	NOUN	NN	Number=Sing	2	_	_	start_char=2194|end_char=2203
4	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	_	_	start_char=2204|end_char=2206
5	used	use	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	4	_	_	start_char=2207|end_char=2211
6	to	to	PART	TO	_	5	_	_	start_char=2212|end_char=2214
7	preprocess	preprocess	VERB	VB	VerbForm=Inf	6	_	_	start_char=2215|end_char=2225
8	the	the	DET	DT	Definite=Def|PronType=Art	7	_	_	start_char=2226|end_char=2229
9	data	datum	NOUN	NNS	Number=Plur	8	_	_	start_char=2230|end_char=2234
10	and	and	CCONJ	CC	_	9	_	_	start_char=2235|end_char=2238
11	the	the	DET	DT	Definite=Def|PronType=Art	10	_	_	start_char=2239|end_char=2242
12	clustered	cluster	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	11	_	_	start_char=2243|end_char=2252
13	data	datum	NOUN	NNS	Number=Plur	12	_	_	start_char=2253|end_char=2257
14	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	13	_	_	start_char=2258|end_char=2260
15	used	use	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	14	_	_	start_char=2261|end_char=2265
16	to	to	PART	TO	_	15	_	_	start_char=2266|end_char=2268
17	solve	solve	VERB	VB	VerbForm=Inf	16	_	_	start_char=2269|end_char=2274
18	the	the	DET	DT	Definite=Def|PronType=Art	17	_	_	start_char=2275|end_char=2278
19	problem	problem	NOUN	NN	Number=Sing	18	_	_	SpaceAfter=No|start_char=2279|end_char=2286
20	.	.	PUNCT	.	_	19	_	_	start_char=2286|end_char=2287

# text = the algorithm tends to create large size clusters for entries far from the decision boundary and small size clusters for the other case.
# sent_id = 14
1	the	the	DET	DT	Definite=Def|PronType=Art	0	_	_	start_char=2288|end_char=2291
2	algorithm	algorithm	NOUN	NN	Number=Sing	1	_	_	start_char=2292|end_char=2301
3	tends	tend	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	_	_	start_char=2302|end_char=2307
4	to	to	PART	TO	_	3	_	_	start_char=2308|end_char=2310
5	create	create	VERB	VB	VerbForm=Inf	4	_	_	start_char=2311|end_char=2317
6	large	large	ADJ	JJ	Degree=Pos	5	_	_	start_char=2318|end_char=2323
7	size	size	NOUN	NN	Number=Sing	6	_	_	start_char=2324|end_char=2328
8	clusters	cluster	NOUN	NNS	Number=Plur	7	_	_	start_char=2329|end_char=2337
9	for	for	ADP	IN	_	8	_	_	start_char=2338|end_char=2341
10	entries	entrie	NOUN	NNS	Number=Plur	9	_	_	start_char=2342|end_char=2349
11	far	far	ADV	RB	Degree=Pos	10	_	_	start_char=2350|end_char=2353
12	from	from	ADP	IN	_	11	_	_	start_char=2354|end_char=2358
13	the	the	DET	DT	Definite=Def|PronType=Art	12	_	_	start_char=2359|end_char=2362
14	decision	decision	NOUN	NN	Number=Sing	13	_	_	start_char=2363|end_char=2371
15	boundary	boundary	NOUN	NN	Number=Sing	14	_	_	start_char=2372|end_char=2380
16	and	and	CCONJ	CC	_	15	_	_	start_char=2381|end_char=2384
17	small	small	ADJ	JJ	Degree=Pos	16	_	_	start_char=2385|end_char=2390
18	size	size	NOUN	NN	Number=Sing	17	_	_	start_char=2391|end_char=2395
19	clusters	cluster	NOUN	NNS	Number=Plur	18	_	_	start_char=2396|end_char=2404
20	for	for	ADP	IN	_	19	_	_	start_char=2405|end_char=2408
21	the	the	DET	DT	Definite=Def|PronType=Art	20	_	_	start_char=2409|end_char=2412
22	other	other	ADJ	JJ	Degree=Pos	21	_	_	start_char=2413|end_char=2418
23	case	case	NOUN	NN	Number=Sing	22	_	_	SpaceAfter=No|start_char=2419|end_char=2423
24	.	.	PUNCT	.	_	23	_	_	start_char=2423|end_char=2424

# text = wang et al [26] developed screening rules for svm to discard non-support vectors that do not affect the classifier.
# sent_id = 15
1	wang	wang	PROPN	NNP	Number=Sing	0	_	_	start_char=2425|end_char=2429
2	et	et	X	FW	_	1	_	_	start_char=2430|end_char=2432
3	al	al	PROPN	NNP	Number=Sing	2	_	_	start_char=2433|end_char=2435
4	[	[	PUNCT	-LRB-	_	3	_	_	SpaceAfter=No|start_char=2436|end_char=2437
5	26	26	NUM	CD	NumForm=Digit|NumType=Card	4	_	_	SpaceAfter=No|start_char=2437|end_char=2439
6	]	]	PUNCT	-RRB-	_	5	_	_	start_char=2439|end_char=2440
7	developed	develop	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	6	_	_	start_char=2441|end_char=2450
8	screening	screen	NOUN	NN	Number=Sing	7	_	_	start_char=2451|end_char=2460
9	rules	rule	NOUN	NNS	Number=Plur	8	_	_	start_char=2461|end_char=2466
10	for	for	ADP	IN	_	9	_	_	start_char=2467|end_char=2470
11	svm	svm	NOUN	NN	Number=Sing	10	_	_	start_char=2471|end_char=2474
12	to	to	PART	TO	_	11	_	_	start_char=2475|end_char=2477
13	discard	discard	VERB	VB	VerbForm=Inf	12	_	_	start_char=2478|end_char=2485
14	non-support	non-support	ADJ	JJ	Degree=Pos	13	_	_	start_char=2486|end_char=2497
15	vectors	vector	NOUN	NNS	Number=Plur	14	_	_	start_char=2498|end_char=2505
16	that	that	PRON	WDT	PronType=Rel	15	_	_	start_char=2506|end_char=2510
17	do	do	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	16	_	_	start_char=2511|end_char=2513
18	not	not	PART	RB	Polarity=Neg	17	_	_	start_char=2514|end_char=2517
19	affect	affect	VERB	VB	VerbForm=Inf	18	_	_	start_char=2518|end_char=2524
20	the	the	DET	DT	Definite=Def|PronType=Art	19	_	_	start_char=2525|end_char=2528
21	classifier	classifier	NOUN	NN	Number=Sing	20	_	_	SpaceAfter=No|start_char=2529|end_char=2539
22	.	.	PUNCT	.	_	21	_	_	start_char=2539|end_char=2540

# text = nath et al [19] and doppa et al [9] proposed a second order cone programming (socp) formulation for svm based on chance constraints and clusters.
# sent_id = 16
1	nath	nath	PROPN	NNP	Number=Sing	0	_	_	start_char=2541|end_char=2545
2	et	et	X	FW	Foreign=Yes	1	_	_	start_char=2546|end_char=2548
3	al	al	PROPN	NNP	Number=Sing	2	_	_	start_char=2549|end_char=2551
4	[	[	PUNCT	-LRB-	_	3	_	_	SpaceAfter=No|start_char=2552|end_char=2553
5	19	19	NUM	CD	NumForm=Digit|NumType=Card	4	_	_	SpaceAfter=No|start_char=2553|end_char=2555
6	]	]	PUNCT	-RRB-	_	5	_	_	start_char=2555|end_char=2556
7	and	and	CCONJ	CC	_	6	_	_	start_char=2557|end_char=2560
8	doppa	doppa	PROPN	NNP	Number=Sing	7	_	_	start_char=2561|end_char=2566
9	et	et	X	FW	Foreign=Yes	8	_	_	start_char=2567|end_char=2569
10	al	al	PROPN	NNP	Number=Sing	9	_	_	start_char=2570|end_char=2572
11	[	[	PUNCT	-LRB-	_	10	_	_	SpaceAfter=No|start_char=2573|end_char=2574
12	9	9	NUM	CD	NumForm=Digit|NumType=Card	11	_	_	SpaceAfter=No|start_char=2574|end_char=2575
13	]	]	PUNCT	-RRB-	_	12	_	_	start_char=2575|end_char=2576
14	proposed	propose	VERB	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin|Voice=Pass	13	_	_	start_char=2577|end_char=2585
15	a	a	DET	DT	Definite=Ind|PronType=Art	14	_	_	start_char=2586|end_char=2587
16	second	second	ADJ	JJ	Degree=Pos|NumForm=Word|NumType=Ord	15	_	_	start_char=2588|end_char=2594
17	order	order	NOUN	NN	Number=Sing	16	_	_	start_char=2595|end_char=2600
18	cone	cone	NOUN	NN	Number=Sing	17	_	_	start_char=2601|end_char=2605
19	programming	programming	NOUN	NN	Number=Sing	18	_	_	start_char=2606|end_char=2617
20	(	(	PUNCT	-LRB-	_	19	_	_	SpaceAfter=No|start_char=2618|end_char=2619
21	socp	socp	NOUN	NN	Number=Sing	20	_	_	SpaceAfter=No|start_char=2619|end_char=2623
22	)	)	PUNCT	-RRB-	_	21	_	_	start_char=2623|end_char=2624
23	formulation	formulation	NOUN	NN	Number=Sing	22	_	_	start_char=2625|end_char=2636
24	for	for	ADP	IN	_	23	_	_	start_char=2637|end_char=2640
25	svm	svm	NOUN	NN	Number=Sing	24	_	_	start_char=2641|end_char=2644
26	based	base	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	25	_	_	start_char=2645|end_char=2650
27	on	on	ADP	IN	_	26	_	_	start_char=2651|end_char=2653
28	chance	chance	NOUN	NN	Number=Sing	27	_	_	start_char=2654|end_char=2660
29	constraints	constraint	NOUN	NNS	Number=Plur	28	_	_	start_char=2661|end_char=2672
30	and	and	CCONJ	CC	_	29	_	_	start_char=2673|end_char=2676
31	clusters	cluster	NOUN	NNS	Number=Plur	30	_	_	SpaceAfter=No|start_char=2677|end_char=2685
32	.	.	PUNCT	.	_	31	_	_	start_char=2685|end_char=2686

# text = the key idea of the socp formulations is to reduce the number of constraints (from the number of the entries to number of clusters) by defining chance constraints for clusters.
# sent_id = 17
1	the	the	DET	DT	Definite=Def|PronType=Art	0	_	_	start_char=2687|end_char=2690
2	key	key	ADJ	JJ	Degree=Pos	1	_	_	start_char=2691|end_char=2694
3	idea	idea	NOUN	NN	Number=Sing	2	_	_	start_char=2695|end_char=2699
4	of	of	ADP	IN	_	3	_	_	start_char=2700|end_char=2702
5	the	the	DET	DT	Definite=Def|PronType=Art	4	_	_	start_char=2703|end_char=2706
6	socp	socp	NOUN	NN	Number=Sing	5	_	_	start_char=2707|end_char=2711
7	formulations	formulation	NOUN	NNS	Number=Plur	6	_	_	start_char=2712|end_char=2724
8	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	_	_	start_char=2725|end_char=2727
9	to	to	PART	TO	_	8	_	_	start_char=2728|end_char=2730
10	reduce	reduce	VERB	VB	VerbForm=Inf	9	_	_	start_char=2731|end_char=2737
11	the	the	DET	DT	Definite=Def|PronType=Art	10	_	_	start_char=2738|end_char=2741
12	number	number	NOUN	NN	Number=Sing	11	_	_	start_char=2742|end_char=2748
13	of	of	ADP	IN	_	12	_	_	start_char=2749|end_char=2751
14	constraints	constraint	NOUN	NNS	Number=Plur	13	_	_	start_char=2752|end_char=2763
15	(	(	PUNCT	-LRB-	_	14	_	_	SpaceAfter=No|start_char=2764|end_char=2765
16	from	from	ADP	IN	_	15	_	_	start_char=2765|end_char=2769
17	the	the	DET	DT	Definite=Def|PronType=Art	16	_	_	start_char=2770|end_char=2773
18	number	number	NOUN	NN	Number=Sing	17	_	_	start_char=2774|end_char=2780
19	of	of	ADP	IN	_	18	_	_	start_char=2781|end_char=2783
20	the	the	DET	DT	Definite=Def|PronType=Art	19	_	_	start_char=2784|end_char=2787
21	entries	entrie	NOUN	NNS	Number=Plur	20	_	_	start_char=2788|end_char=2795
22	to	to	ADP	IN	_	21	_	_	start_char=2796|end_char=2798
23	number	number	NOUN	NN	Number=Sing	22	_	_	start_char=2799|end_char=2805
24	of	of	ADP	IN	_	23	_	_	start_char=2806|end_char=2808
25	clusters	cluster	NOUN	NNS	Number=Plur	24	_	_	SpaceAfter=No|start_char=2809|end_char=2817
26	)	)	PUNCT	-RRB-	_	25	_	_	start_char=2817|end_char=2818
27	by	by	SCONJ	IN	_	26	_	_	start_char=2819|end_char=2821
28	defining	define	VERB	VBG	Tense=Pres|VerbForm=Part	27	_	_	start_char=2822|end_char=2830
29	chance	chance	NOUN	NN	Number=Sing	28	_	_	start_char=2831|end_char=2837
30	constraints	constraint	NOUN	NNS	Number=Plur	29	_	_	start_char=2838|end_char=2849
31	for	for	ADP	IN	_	30	_	_	start_char=2850|end_char=2853
32	clusters	cluster	NOUN	NNS	Number=Plur	31	_	_	SpaceAfter=No|start_char=2854|end_char=2862
33	.	.	PUNCT	.	_	32	_	_	start_char=2862|end_char=2863

# text = after obtaining an approximate solution by solving the optimization problem with aggregated data, a natural attempt is to use less-coarsely aggregated data, in order to obtain a finer approximation.
# sent_id = 18
1	after	after	SCONJ	IN	_	0	_	_	start_char=2864|end_char=2869
2	obtaining	obtain	VERB	VBG	Tense=Pres|VerbForm=Part	1	_	_	start_char=2870|end_char=2879
3	an	a	DET	DT	Definite=Ind|PronType=Art	2	_	_	start_char=2880|end_char=2882
4	approximate	approximate	ADJ	JJ	Degree=Pos	3	_	_	start_char=2883|end_char=2894
5	solution	solution	NOUN	NN	Number=Sing	4	_	_	start_char=2895|end_char=2903
6	by	by	SCONJ	IN	_	5	_	_	start_char=2904|end_char=2906
7	solving	solve	VERB	VBG	Tense=Pres|VerbForm=Part	6	_	_	start_char=2907|end_char=2914
8	the	the	DET	DT	Definite=Def|PronType=Art	7	_	_	start_char=2915|end_char=2918
9	optimization	optimization	NOUN	NN	Number=Sing	8	_	_	start_char=2919|end_char=2931
10	problem	problem	NOUN	NN	Number=Sing	9	_	_	start_char=2932|end_char=2939
11	with	with	ADP	IN	_	10	_	_	start_char=2940|end_char=2944
12	aggregated	aggregate	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	11	_	_	start_char=2945|end_char=2955
13	data	datum	NOUN	NNS	Number=Plur	12	_	_	SpaceAfter=No|start_char=2956|end_char=2960
14	,	,	PUNCT	,	_	13	_	_	start_char=2960|end_char=2961
15	a	a	DET	DT	Definite=Ind|PronType=Art	14	_	_	start_char=2962|end_char=2963
16	natural	natural	ADJ	JJ	Degree=Pos	15	_	_	start_char=2964|end_char=2971
17	attempt	attempt	NOUN	NN	Number=Sing	16	_	_	start_char=2972|end_char=2979
18	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	17	_	_	start_char=2980|end_char=2982
19	to	to	PART	TO	_	18	_	_	start_char=2983|end_char=2985
20	use	use	VERB	VB	VerbForm=Inf	19	_	_	start_char=2986|end_char=2989
21	less	less	ADJ	JJR	Degree=Cmp	20	_	_	SpaceAfter=No|start_char=2990|end_char=2994
22	-	-	PUNCT	HYPH	_	21	_	_	SpaceAfter=No|start_char=2994|end_char=2995
23	coarsely	coarsely	ADV	RB	_	22	_	_	start_char=2995|end_char=3003
24	aggregated	aggregate	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	23	_	_	start_char=3004|end_char=3014
25	data	datum	NOUN	NNS	Number=Plur	24	_	_	SpaceAfter=No|start_char=3015|end_char=3019
26	,	,	PUNCT	,	_	25	_	_	start_char=3019|end_char=3020
27	in	in	SCONJ	IN	_	26	_	_	start_char=3021|end_char=3023
28	order	order	NOUN	NN	Number=Sing	27	_	_	start_char=3024|end_char=3029
29	to	to	PART	TO	_	28	_	_	start_char=3030|end_char=3032
30	obtain	obtain	VERB	VB	VerbForm=Inf	29	_	_	start_char=3033|end_char=3039
31	a	a	DET	DT	Definite=Ind|PronType=Art	30	_	_	start_char=3040|end_char=3041
32	finer	finer	ADJ	JJ	Degree=Pos	31	_	_	start_char=3042|end_char=3047
33	approximation	approximation	NOUN	NN	Number=Sing	32	_	_	SpaceAfter=No|start_char=3048|end_char=3061
34	.	.	PUNCT	.	_	33	_	_	start_char=3061|end_char=3062

# text = in fact, we can do this iteratively: modify the aggregated data in each iteration based on the information at hand.
# sent_id = 19
1	in	in	ADP	IN	_	0	_	_	start_char=3063|end_char=3065
2	fact	fact	NOUN	NN	Number=Sing	1	_	_	SpaceAfter=No|start_char=3066|end_char=3070
3	,	,	PUNCT	,	_	2	_	_	start_char=3070|end_char=3071
4	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	3	_	_	start_char=3072|end_char=3074
5	can	can	AUX	MD	VerbForm=Fin	4	_	_	start_char=3075|end_char=3078
6	do	do	VERB	VB	VerbForm=Inf	5	_	_	start_char=3079|end_char=3081
7	this	this	PRON	DT	Number=Sing|PronType=Dem	6	_	_	start_char=3082|end_char=3086
8	iteratively	iteratively	ADV	RB	Degree=Pos	7	_	_	SpaceAfter=No|start_char=3087|end_char=3098
9	:	:	PUNCT	:	_	8	_	_	start_char=3098|end_char=3099
10	modify	modify	VERB	VB	Mood=Imp|VerbForm=Fin	9	_	_	start_char=3100|end_char=3106
11	the	the	DET	DT	Definite=Def|PronType=Art	10	_	_	start_char=3107|end_char=3110
12	aggregated	aggregate	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	11	_	_	start_char=3111|end_char=3121
13	data	datum	NOUN	NNS	Number=Plur	12	_	_	start_char=3122|end_char=3126
14	in	in	ADP	IN	_	13	_	_	start_char=3127|end_char=3129
15	each	each	DET	DT	PronType=Tot	14	_	_	start_char=3130|end_char=3134
16	iteration	iteration	NOUN	NN	Number=Sing	15	_	_	start_char=3135|end_char=3144
17	based	base	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	16	_	_	start_char=3145|end_char=3150
18	on	on	ADP	IN	_	17	_	_	start_char=3151|end_char=3153
19	the	the	DET	DT	Definite=Def|PronType=Art	18	_	_	start_char=3154|end_char=3157
20	information	information	NOUN	NN	Number=Sing	19	_	_	start_char=3158|end_char=3169
21	at	at	ADP	IN	_	20	_	_	start_char=3170|end_char=3172
22	hand	hand	NOUN	NN	Number=Sing	21	_	_	SpaceAfter=No|start_char=3173|end_char=3177
23	.	.	PUNCT	.	_	22	_	_	start_char=3177|end_char=3178

# text = this framework, which iteratively passes information between the original problem and the aggregated problem [22] , is known as iterative aggregation disaggregation (iad).
# sent_id = 20
1	this	this	DET	DT	Number=Sing|PronType=Dem	0	_	_	start_char=3179|end_char=3183
2	framework	framework	NOUN	NN	Number=Sing	1	_	_	SpaceAfter=No|start_char=3184|end_char=3193
3	,	,	PUNCT	,	_	2	_	_	start_char=3193|end_char=3194
4	which	which	PRON	WDT	PronType=Rel	3	_	_	start_char=3195|end_char=3200
5	iteratively	iteratively	ADV	RB	_	4	_	_	start_char=3201|end_char=3212
6	passes	pass	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	_	_	start_char=3213|end_char=3219
7	information	information	NOUN	NN	Number=Sing	6	_	_	start_char=3220|end_char=3231
8	between	between	ADP	IN	_	7	_	_	start_char=3232|end_char=3239
9	the	the	DET	DT	Definite=Def|PronType=Art	8	_	_	start_char=3240|end_char=3243
10	original	original	ADJ	JJ	Degree=Pos	9	_	_	start_char=3244|end_char=3252
11	problem	problem	NOUN	NN	Number=Sing	10	_	_	start_char=3253|end_char=3260
12	and	and	CCONJ	CC	_	11	_	_	start_char=3261|end_char=3264
13	the	the	DET	DT	Definite=Def|PronType=Art	12	_	_	start_char=3265|end_char=3268
14	aggregated	aggregate	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	13	_	_	start_char=3269|end_char=3279
15	problem	problem	NOUN	NN	Number=Sing	14	_	_	start_char=3280|end_char=3287
16	[	[	PUNCT	-LRB-	_	15	_	_	SpaceAfter=No|start_char=3288|end_char=3289
17	22	22	NUM	CD	NumForm=Digit|NumType=Card	16	_	_	SpaceAfter=No|start_char=3289|end_char=3291
18	]	]	PUNCT	-RRB-	_	17	_	_	start_char=3291|end_char=3292
19	,	,	PUNCT	,	_	18	_	_	start_char=3293|end_char=3294
20	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	19	_	_	start_char=3295|end_char=3297
21	known	know	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	20	_	_	start_char=3298|end_char=3303
22	as	as	ADP	IN	_	21	_	_	start_char=3304|end_char=3306
23	iterative	iterative	ADJ	JJ	Degree=Pos	22	_	_	start_char=3307|end_char=3316
24	aggregation	aggregation	NOUN	NN	Number=Sing	23	_	_	start_char=3317|end_char=3328
25	disaggregation	disaggregation	NOUN	NN	Number=Sing	24	_	_	start_char=3329|end_char=3343
26	(	(	PUNCT	-LRB-	_	25	_	_	SpaceAfter=No|start_char=3344|end_char=3345
27	iad	iad	NOUN	NN	Number=Sing	26	_	_	SpaceAfter=No|start_char=3345|end_char=3348
28	)	)	PUNCT	-RRB-	_	27	_	_	SpaceAfter=No|start_char=3348|end_char=3349
29	.	.	PUNCT	.	_	28	_	_	start_char=3349|end_char=3350

# text = the iad framework has been applied for several optimization problems such as lp [17, 24, 25] and network design [2] . in machine learning, yu et al [28, 29] used hierarchical micro clustering and a clustering feature tree to obtain an approximate solution for support vector machines.
# sent_id = 21
1	the	the	DET	DT	Definite=Def|PronType=Art	0	_	_	start_char=3351|end_char=3354
2	iad	iad	NOUN	NN	Number=Sing	1	_	_	start_char=3355|end_char=3358
3	framework	framework	NOUN	NN	Number=Sing	2	_	_	start_char=3359|end_char=3368
4	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	_	_	start_char=3369|end_char=3372
5	been	be	AUX	VBN	Tense=Past|VerbForm=Part	4	_	_	start_char=3373|end_char=3377
6	applied	apply	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	5	_	_	start_char=3378|end_char=3385
7	for	for	ADP	IN	_	6	_	_	start_char=3386|end_char=3389
8	several	several	ADJ	JJ	Degree=Pos	7	_	_	start_char=3390|end_char=3397
9	optimization	optimization	NOUN	NN	Number=Sing	8	_	_	start_char=3398|end_char=3410
10	problems	problem	NOUN	NNS	Number=Plur	9	_	_	start_char=3411|end_char=3419
11	such	such	ADJ	JJ	ExtPos=ADP	10	_	_	start_char=3420|end_char=3424
12	as	as	ADP	IN	_	11	_	_	start_char=3425|end_char=3427
13	lp	lp	NOUN	NN	Number=Sing	12	_	_	start_char=3428|end_char=3430
14	[	[	PUNCT	-LRB-	_	13	_	_	SpaceAfter=No|start_char=3431|end_char=3432
15	17	17	NUM	CD	NumForm=Digit|NumType=Card	14	_	_	SpaceAfter=No|start_char=3432|end_char=3434
16	,	,	PUNCT	,	_	15	_	_	start_char=3434|end_char=3435
17	24	24	NUM	CD	NumForm=Digit|NumType=Card	16	_	_	SpaceAfter=No|start_char=3436|end_char=3438
18	,	,	PUNCT	,	_	17	_	_	start_char=3438|end_char=3439
19	25	25	NUM	CD	NumForm=Digit|NumType=Card	18	_	_	SpaceAfter=No|start_char=3440|end_char=3442
20	]	]	PUNCT	-RRB-	_	19	_	_	start_char=3442|end_char=3443
21	and	and	CCONJ	CC	_	20	_	_	start_char=3444|end_char=3447
22	network	network	NOUN	NN	Number=Sing	21	_	_	start_char=3448|end_char=3455
23	design	design	NOUN	NN	Number=Sing	22	_	_	start_char=3456|end_char=3462
24	[	[	PUNCT	-LRB-	_	23	_	_	SpaceAfter=No|start_char=3463|end_char=3464
25	2	2	NUM	CD	NumForm=Digit|NumType=Card	24	_	_	SpaceAfter=No|start_char=3464|end_char=3465
26	]	]	PUNCT	-RRB-	_	25	_	_	start_char=3465|end_char=3466
27	.	.	PUNCT	.	_	26	_	_	start_char=3467|end_char=3468
28	in	in	ADP	IN	_	27	_	_	start_char=3469|end_char=3471
29	machine	machine	NOUN	NN	Number=Sing	28	_	_	start_char=3472|end_char=3479
30	learning	learning	NOUN	NN	Number=Sing	29	_	_	SpaceAfter=No|start_char=3480|end_char=3488
31	,	,	PUNCT	,	_	30	_	_	start_char=3488|end_char=3489
32	yu	yu	PROPN	NNP	Number=Sing	31	_	_	start_char=3490|end_char=3492
33	et	et	X	FW	_	32	_	_	start_char=3493|end_char=3495
34	al	al	PROPN	NNP	Number=Sing	33	_	_	start_char=3496|end_char=3498
35	[	[	PUNCT	-LRB-	_	34	_	_	SpaceAfter=No|start_char=3499|end_char=3500
36	28	28	NUM	CD	NumForm=Digit|NumType=Card	35	_	_	SpaceAfter=No|start_char=3500|end_char=3502
37	,	,	PUNCT	,	_	36	_	_	start_char=3502|end_char=3503
38	29	29	NUM	CD	NumForm=Digit|NumType=Card	37	_	_	SpaceAfter=No|start_char=3504|end_char=3506
39	]	]	PUNCT	-RRB-	_	38	_	_	start_char=3506|end_char=3507
40	used	use	VERB	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	39	_	_	start_char=3508|end_char=3512
41	hierarchical	hierarchical	ADJ	JJ	Degree=Pos	40	_	_	start_char=3513|end_char=3525
42	micro	micro	NOUN	NN	Number=Sing	41	_	_	start_char=3526|end_char=3531
43	clustering	clustering	NOUN	NN	Number=Sing	42	_	_	start_char=3532|end_char=3542
44	and	and	CCONJ	CC	_	43	_	_	start_char=3543|end_char=3546
45	a	a	DET	DT	Definite=Ind|PronType=Art	44	_	_	start_char=3547|end_char=3548
46	clustering	cluster	VERB	VBG	VerbForm=Ger	45	_	_	start_char=3549|end_char=3559
47	feature	feature	NOUN	NN	Number=Sing	46	_	_	start_char=3560|end_char=3567
48	tree	tree	NOUN	NN	Number=Sing	47	_	_	start_char=3568|end_char=3572
49	to	to	PART	TO	_	48	_	_	start_char=3573|end_char=3575
50	obtain	obtain	VERB	VB	VerbForm=Inf	49	_	_	start_char=3576|end_char=3582
51	an	a	DET	DT	Definite=Ind|PronType=Art	50	_	_	start_char=3583|end_char=3585
52	approximate	approximate	ADJ	JJ	Degree=Pos	51	_	_	start_char=3586|end_char=3597
53	solution	solution	NOUN	NN	Number=Sing	52	_	_	start_char=3598|end_char=3606
54	for	for	ADP	IN	_	53	_	_	start_char=3607|end_char=3610
55	support	support	NOUN	NN	Number=Sing	54	_	_	start_char=3611|end_char=3618
56	vector	vector	NOUN	NN	Number=Sing	55	_	_	start_char=3619|end_char=3625
57	machines	machine	NOUN	NNS	Number=Plur	56	_	_	SpaceAfter=No|start_char=3626|end_char=3634
58	.	.	PUNCT	.	_	57	_	_	start_char=3634|end_char=3635

# text = in this paper, we propose a general optimization algorithm based on clustering and data aggregation, and apply it to three common machine learning problems: least absolute deviation regression (lad), svm, and semi-supervised support vector machines (s 3 vm).
# sent_id = 22
1	in	in	ADP	IN	_	0	_	_	start_char=3636|end_char=3638
2	this	this	DET	DT	Number=Sing|PronType=Dem	1	_	_	start_char=3639|end_char=3643
3	paper	paper	NOUN	NN	Number=Sing	2	_	_	SpaceAfter=No|start_char=3644|end_char=3649
4	,	,	PUNCT	,	_	3	_	_	start_char=3649|end_char=3650
5	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	4	_	_	start_char=3651|end_char=3653
6	propose	propose	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	5	_	_	start_char=3654|end_char=3661
7	a	a	DET	DT	Definite=Ind|PronType=Art	6	_	_	start_char=3662|end_char=3663
8	general	general	ADJ	JJ	Degree=Pos	7	_	_	start_char=3664|end_char=3671
9	optimization	optimization	NOUN	NN	Number=Sing	8	_	_	start_char=3672|end_char=3684
10	algorithm	algorithm	NOUN	NN	Number=Sing	9	_	_	start_char=3685|end_char=3694
11	based	base	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	10	_	_	start_char=3695|end_char=3700
12	on	on	ADP	IN	_	11	_	_	start_char=3701|end_char=3703
13	clustering	clustering	NOUN	NN	Number=Sing	12	_	_	start_char=3704|end_char=3714
14	and	and	CCONJ	CC	_	13	_	_	start_char=3715|end_char=3718
15	data	datum	NOUN	NN	Number=Sing	14	_	_	start_char=3719|end_char=3723
16	aggregation	aggregation	NOUN	NN	Number=Sing	15	_	_	SpaceAfter=No|start_char=3724|end_char=3735
17	,	,	PUNCT	,	_	16	_	_	start_char=3735|end_char=3736
18	and	and	CCONJ	CC	_	17	_	_	start_char=3737|end_char=3740
19	apply	apply	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	18	_	_	start_char=3741|end_char=3746
20	it	it	PRON	PRP	Case=Acc|Gender=Neut|Number=Sing|Person=3|PronType=Prs	19	_	_	start_char=3747|end_char=3749
21	to	to	ADP	IN	_	20	_	_	start_char=3750|end_char=3752
22	three	three	NUM	CD	NumForm=Word|NumType=Card	21	_	_	start_char=3753|end_char=3758
23	common	common	ADJ	JJ	Degree=Pos	22	_	_	start_char=3759|end_char=3765
24	machine	machine	NOUN	NN	Number=Sing	23	_	_	start_char=3766|end_char=3773
25	learning	learning	NOUN	NN	Number=Sing	24	_	_	start_char=3774|end_char=3782
26	problems	problem	NOUN	NNS	Number=Plur	25	_	_	SpaceAfter=No|start_char=3783|end_char=3791
27	:	:	PUNCT	:	_	26	_	_	start_char=3791|end_char=3792
28	least	least	ADJ	JJS	Degree=Sup	27	_	_	start_char=3793|end_char=3798
29	absolute	absolute	ADJ	JJ	Degree=Pos	28	_	_	start_char=3799|end_char=3807
30	deviation	deviation	NOUN	NN	Number=Sing	29	_	_	start_char=3808|end_char=3817
31	regression	regression	NOUN	NN	Number=Sing	30	_	_	start_char=3818|end_char=3828
32	(	(	PUNCT	-LRB-	_	31	_	_	SpaceAfter=No|start_char=3829|end_char=3830
33	lad	lad	NOUN	NN	Number=Sing	32	_	_	SpaceAfter=No|start_char=3830|end_char=3833
34	)	)	PUNCT	-RRB-	_	33	_	_	SpaceAfter=No|start_char=3833|end_char=3834
35	,	,	PUNCT	,	_	34	_	_	start_char=3834|end_char=3835
36	svm	svm	NOUN	NN	Number=Sing	35	_	_	SpaceAfter=No|start_char=3836|end_char=3839
37	,	,	PUNCT	,	_	36	_	_	start_char=3839|end_char=3840
38	and	and	CCONJ	CC	_	37	_	_	start_char=3841|end_char=3844
39	semi	semi	NOUN	NN	Number=Sing	38	_	_	SpaceAfter=No|start_char=3845|end_char=3849
40	-	-	PUNCT	HYPH	_	39	_	_	SpaceAfter=No|start_char=3849|end_char=3850
41	supervised	supervise	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	40	_	_	start_char=3850|end_char=3860
42	support	support	NOUN	NN	Number=Sing	41	_	_	start_char=3861|end_char=3868
43	vector	vector	NOUN	NN	Number=Sing	42	_	_	start_char=3869|end_char=3875
44	machines	machine	NOUN	NNS	Number=Plur	43	_	_	start_char=3876|end_char=3884
45	(	(	PUNCT	-LRB-	_	44	_	_	SpaceAfter=No|start_char=3885|end_char=3886
46	s	s	X	AFX	_	45	_	_	start_char=3886|end_char=3887
47	3	3	NUM	CD	NumForm=Digit|NumType=Card	46	_	_	start_char=3888|end_char=3889
48	vm	vm	NOUN	NN	Number=Sing	47	_	_	SpaceAfter=No|start_char=3890|end_char=3892
49	)	)	PUNCT	-RRB-	_	48	_	_	SpaceAfter=No|start_char=3892|end_char=3893
50	.	.	PUNCT	.	_	49	_	_	start_char=3893|end_char=3894

# text = the algorithm fits the iad framework, but has additional properties shown for the selected problems in this paper.
# sent_id = 23
1	the	the	DET	DT	Definite=Def|PronType=Art	0	_	_	start_char=3895|end_char=3898
2	algorithm	algorithm	NOUN	NN	Number=Sing	1	_	_	start_char=3899|end_char=3908
3	fits	fit	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	_	_	start_char=3909|end_char=3913
4	the	the	DET	DT	Definite=Def|PronType=Art	3	_	_	start_char=3914|end_char=3917
5	iad	iad	NOUN	NN	Number=Sing	4	_	_	start_char=3918|end_char=3921
6	framework	framework	NOUN	NN	Number=Sing	5	_	_	SpaceAfter=No|start_char=3922|end_char=3931
7	,	,	PUNCT	,	_	6	_	_	start_char=3931|end_char=3932
8	but	but	CCONJ	CC	_	7	_	_	start_char=3933|end_char=3936
9	has	have	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	_	_	start_char=3937|end_char=3940
10	additional	additional	ADJ	JJ	Degree=Pos	9	_	_	start_char=3941|end_char=3951
11	properties	property	NOUN	NNS	Number=Plur	10	_	_	start_char=3952|end_char=3962
12	shown	show	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	11	_	_	start_char=3963|end_char=3968
13	for	for	ADP	IN	_	12	_	_	start_char=3969|end_char=3972
14	the	the	DET	DT	Definite=Def|PronType=Art	13	_	_	start_char=3973|end_char=3976
15	selected	select	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	14	_	_	start_char=3977|end_char=3985
16	problems	problem	NOUN	NNS	Number=Plur	15	_	_	start_char=3986|end_char=3994
17	in	in	ADP	IN	_	16	_	_	start_char=3995|end_char=3997
18	this	this	DET	DT	Number=Sing|PronType=Dem	17	_	_	start_char=3998|end_char=4002
19	paper	paper	NOUN	NN	Number=Sing	18	_	_	SpaceAfter=No|start_char=4003|end_char=4008
20	.	.	PUNCT	.	_	19	_	_	start_char=4008|end_char=4009

# text = the ability to report the optimality gap and monotonic convergence to global optimum are features of our algorithm for lad and svm, while our algorithm guarantees optimality for s 3 vm without monotonic convergence.
# sent_id = 24
1	the	the	DET	DT	Definite=Def|PronType=Art	0	_	_	start_char=4010|end_char=4013
2	ability	ability	NOUN	NN	Number=Sing	1	_	_	start_char=4014|end_char=4021
3	to	to	PART	TO	_	2	_	_	start_char=4022|end_char=4024
4	report	report	VERB	VB	VerbForm=Inf	3	_	_	start_char=4025|end_char=4031
5	the	the	DET	DT	Definite=Def|PronType=Art	4	_	_	start_char=4032|end_char=4035
6	optimality	optimality	NOUN	NN	Number=Sing	5	_	_	start_char=4036|end_char=4046
7	gap	gap	NOUN	NN	Number=Sing	6	_	_	start_char=4047|end_char=4050
8	and	and	CCONJ	CC	_	7	_	_	start_char=4051|end_char=4054
9	monotonic	monotonic	ADJ	JJ	Degree=Pos	8	_	_	start_char=4055|end_char=4064
10	convergence	convergence	NOUN	NN	Number=Sing	9	_	_	start_char=4065|end_char=4076
11	to	to	ADP	IN	_	10	_	_	start_char=4077|end_char=4079
12	global	global	ADJ	JJ	Degree=Pos	11	_	_	start_char=4080|end_char=4086
13	optimum	optimum	NOUN	NN	Number=Sing	12	_	_	start_char=4087|end_char=4094
14	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	13	_	_	start_char=4095|end_char=4098
15	features	feature	NOUN	NNS	Number=Plur	14	_	_	start_char=4099|end_char=4107
16	of	of	ADP	IN	_	15	_	_	start_char=4108|end_char=4110
17	our	our	PRON	PRP$	Case=Gen|Number=Plur|Person=1|Poss=Yes|PronType=Prs	16	_	_	start_char=4111|end_char=4114
18	algorithm	algorithm	NOUN	NN	Number=Sing	17	_	_	start_char=4115|end_char=4124
19	for	for	ADP	IN	_	18	_	_	start_char=4125|end_char=4128
20	lad	lad	NOUN	NN	Number=Sing	19	_	_	start_char=4129|end_char=4132
21	and	and	CCONJ	CC	_	20	_	_	start_char=4133|end_char=4136
22	svm	svm	NOUN	NN	Number=Sing	21	_	_	SpaceAfter=No|start_char=4137|end_char=4140
23	,	,	PUNCT	,	_	22	_	_	start_char=4140|end_char=4141
24	while	while	SCONJ	IN	_	23	_	_	start_char=4142|end_char=4147
25	our	our	PRON	PRP$	Case=Gen|Number=Plur|Person=1|Poss=Yes|PronType=Prs	24	_	_	start_char=4148|end_char=4151
26	algorithm	algorithm	NOUN	NN	Number=Sing	25	_	_	start_char=4152|end_char=4161
27	guarantees	guarantee	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	26	_	_	start_char=4162|end_char=4172
28	optimality	optimality	NOUN	NN	Number=Sing	27	_	_	start_char=4173|end_char=4183
29	for	for	ADP	IN	_	28	_	_	start_char=4184|end_char=4187
30	s	's	PART	POS	Typo=Yes	29	_	_	start_char=4188|end_char=4189
31	3	3	NUM	CD	NumForm=Digit|NumType=Card	30	_	_	start_char=4190|end_char=4191
32	vm	vm	NOUN	NN	Number=Sing	31	_	_	start_char=4192|end_char=4194
33	without	without	ADP	IN	_	32	_	_	start_char=4195|end_char=4202
34	monotonic	monotonic	ADJ	JJ	Degree=Pos	33	_	_	start_char=4203|end_char=4212
35	convergence	convergence	NOUN	NN	Number=Sing	34	_	_	SpaceAfter=No|start_char=4213|end_char=4224
36	.	.	PUNCT	.	_	35	_	_	start_char=4224|end_char=4225

# text = our work for svm is distinguished from the work of yu et al [28, 29] , as we iteratively solve weighted svm and guarantee optimality, whereas they iteratively solve the standard unweighted svm and thus find only an approximate solution.
# sent_id = 25
1	our	our	PRON	PRP$	Case=Gen|Number=Plur|Person=1|Poss=Yes|PronType=Prs	0	_	_	start_char=4226|end_char=4229
2	work	work	NOUN	NN	Number=Sing	1	_	_	start_char=4230|end_char=4234
3	for	for	ADP	IN	_	2	_	_	start_char=4235|end_char=4238
4	svm	svm	NOUN	NN	Number=Sing	3	_	_	start_char=4239|end_char=4242
5	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	_	_	start_char=4243|end_char=4245
6	distinguished	distinguish	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	5	_	_	start_char=4246|end_char=4259
7	from	from	ADP	IN	_	6	_	_	start_char=4260|end_char=4264
8	the	the	DET	DT	Definite=Def|PronType=Art	7	_	_	start_char=4265|end_char=4268
9	work	work	NOUN	NN	Number=Sing	8	_	_	start_char=4269|end_char=4273
10	of	of	ADP	IN	_	9	_	_	start_char=4274|end_char=4276
11	yu	yu	PROPN	NNP	Number=Sing	10	_	_	start_char=4277|end_char=4279
12	et	et	X	FW	_	11	_	_	start_char=4280|end_char=4282
13	al	al	PROPN	NNP	Number=Sing	12	_	_	start_char=4283|end_char=4285
14	[	[	PUNCT	-LRB-	_	13	_	_	SpaceAfter=No|start_char=4286|end_char=4287
15	28	28	NUM	CD	NumForm=Digit|NumType=Card	14	_	_	SpaceAfter=No|start_char=4287|end_char=4289
16	,	,	PUNCT	,	_	15	_	_	start_char=4289|end_char=4290
17	29	29	NUM	CD	NumForm=Digit|NumType=Card	16	_	_	SpaceAfter=No|start_char=4291|end_char=4293
18	]	]	PUNCT	-RRB-	_	17	_	_	start_char=4293|end_char=4294
19	,	,	PUNCT	,	_	18	_	_	start_char=4295|end_char=4296
20	as	as	SCONJ	IN	_	19	_	_	start_char=4297|end_char=4299
21	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	20	_	_	start_char=4300|end_char=4302
22	iteratively	iteratively	ADV	RB	_	21	_	_	start_char=4303|end_char=4314
23	solve	solve	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	22	_	_	start_char=4315|end_char=4320
24	weighted	weight	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	23	_	_	start_char=4321|end_char=4329
25	svm	svm	NOUN	NN	Number=Sing	24	_	_	start_char=4330|end_char=4333
26	and	and	CCONJ	CC	_	25	_	_	start_char=4334|end_char=4337
27	guarantee	guarantee	NOUN	NN	Number=Sing	26	_	_	start_char=4338|end_char=4347
28	optimality	optimality	NOUN	NN	Number=Sing	27	_	_	SpaceAfter=No|start_char=4348|end_char=4358
29	,	,	PUNCT	,	_	28	_	_	start_char=4358|end_char=4359
30	whereas	whereas	SCONJ	IN	_	29	_	_	start_char=4360|end_char=4367
31	they	they	PRON	PRP	Case=Nom|Number=Plur|Person=3|PronType=Prs	30	_	_	start_char=4368|end_char=4372
32	iteratively	iteratively	ADV	RB	_	31	_	_	start_char=4373|end_char=4384
33	solve	solve	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	32	_	_	start_char=4385|end_char=4390
34	the	the	DET	DT	Definite=Def|PronType=Art	33	_	_	start_char=4391|end_char=4394
35	standard	standard	ADJ	JJ	Degree=Pos	34	_	_	start_char=4395|end_char=4403
36	unweighted	unweighted	ADJ	JJ	Degree=Pos	35	_	_	start_char=4404|end_char=4414
37	svm	svm	NOUN	NN	Number=Sing	36	_	_	start_char=4415|end_char=4418
38	and	and	CCONJ	CC	_	37	_	_	start_char=4419|end_char=4422
39	thus	thus	ADV	RB	_	38	_	_	start_char=4423|end_char=4427
40	find	find	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	39	_	_	start_char=4428|end_char=4432
41	only	only	ADV	RB	_	40	_	_	start_char=4433|end_char=4437
42	an	a	DET	DT	Definite=Ind|PronType=Art	41	_	_	start_char=4438|end_char=4440
43	approximate	approximate	ADJ	JJ	Degree=Pos	42	_	_	start_char=4441|end_char=4452
44	solution	solution	NOUN	NN	Number=Sing	43	_	_	SpaceAfter=No|start_char=4453|end_char=4461
45	.	.	PUNCT	.	_	44	_	_	start_char=4461|end_char=4462

# text = on the other hand, it is distinguished from evgeniou and pontil [11] , as our algorithm is iterative and guarantees global optimum, whereas they used clustering to preprocess data and obtain an approximate optimum.
# sent_id = 26
1	on	on	ADP	IN	_	0	_	_	start_char=4463|end_char=4465
2	the	the	DET	DT	Definite=Def|PronType=Art	1	_	_	start_char=4466|end_char=4469
3	other	other	ADJ	JJ	Degree=Pos	2	_	_	start_char=4470|end_char=4475
4	hand	hand	NOUN	NN	Number=Sing	3	_	_	SpaceAfter=No|start_char=4476|end_char=4480
5	,	,	PUNCT	,	_	4	_	_	start_char=4480|end_char=4481
6	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	5	_	_	start_char=4482|end_char=4484
7	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	_	_	start_char=4485|end_char=4487
8	distinguished	distinguish	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	7	_	_	start_char=4488|end_char=4501
9	from	from	ADP	IN	_	8	_	_	start_char=4502|end_char=4506
10	evgeniou	evgeniou	NOUN	NN	Number=Sing	9	_	_	start_char=4507|end_char=4515
11	and	and	CCONJ	CC	_	10	_	_	start_char=4516|end_char=4519
12	pontil	pontil	NOUN	NN	Number=Sing	11	_	_	start_char=4520|end_char=4526
13	[	[	PUNCT	-LRB-	_	12	_	_	SpaceAfter=No|start_char=4527|end_char=4528
14	11	11	NUM	CD	NumForm=Digit|NumType=Card	13	_	_	SpaceAfter=No|start_char=4528|end_char=4530
15	]	]	PUNCT	-RRB-	_	14	_	_	start_char=4530|end_char=4531
16	,	,	PUNCT	,	_	15	_	_	start_char=4532|end_char=4533
17	as	as	SCONJ	IN	_	16	_	_	start_char=4534|end_char=4536
18	our	our	PRON	PRP$	Case=Gen|Number=Plur|Person=1|Poss=Yes|PronType=Prs	17	_	_	start_char=4537|end_char=4540
19	algorithm	algorithm	NOUN	NN	Number=Sing	18	_	_	start_char=4541|end_char=4550
20	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	19	_	_	start_char=4551|end_char=4553
21	iterative	iterative	ADJ	JJ	Degree=Pos	20	_	_	start_char=4554|end_char=4563
22	and	and	CCONJ	CC	_	21	_	_	start_char=4564|end_char=4567
23	guarantees	guarantee	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	22	_	_	start_char=4568|end_char=4578
24	global	global	ADJ	JJ	Degree=Pos	23	_	_	start_char=4579|end_char=4585
25	optimum	optimum	NOUN	NN	Number=Sing	24	_	_	SpaceAfter=No|start_char=4586|end_char=4593
26	,	,	PUNCT	,	_	25	_	_	start_char=4593|end_char=4594
27	whereas	whereas	SCONJ	IN	_	26	_	_	start_char=4595|end_char=4602
28	they	they	PRON	PRP	Case=Nom|Number=Plur|Person=3|PronType=Prs	27	_	_	start_char=4603|end_char=4607
29	used	use	VERB	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	28	_	_	start_char=4608|end_char=4612
30	clustering	clustering	NOUN	NN	Number=Sing	29	_	_	start_char=4613|end_char=4623
31	to	to	PART	TO	_	30	_	_	start_char=4624|end_char=4626
32	preprocess	preprocess	VERB	VB	VerbForm=Inf	31	_	_	start_char=4627|end_char=4637
33	data	datum	NOUN	NNS	Number=Plur	32	_	_	start_char=4638|end_char=4642
34	and	and	CCONJ	CC	_	33	_	_	start_char=4643|end_char=4646
35	obtain	obtain	VERB	VB	VerbForm=Inf	34	_	_	start_char=4647|end_char=4653
36	an	a	DET	DT	Definite=Ind|PronType=Art	35	_	_	start_char=4654|end_char=4656
37	approximate	approximate	ADJ	JJ	Degree=Pos	36	_	_	start_char=4657|end_char=4668
38	optimum	optimum	NOUN	NN	Number=Sing	37	_	_	SpaceAfter=No|start_char=4669|end_char=4676
39	.	.	PUNCT	.	_	38	_	_	start_char=4676|end_char=4677

# text = nath et al [19] and doppa et al [9] are different because we use the typical svm formulation within an iterative framework, whereas they propose an socp formulation based on chance constraints.
# sent_id = 27
1	nath	nath	PROPN	NNP	Number=Sing	0	_	_	start_char=4678|end_char=4682
2	et	et	X	FW	Foreign=Yes	1	_	_	start_char=4683|end_char=4685
3	al	al	PROPN	NNP	Number=Sing	2	_	_	start_char=4686|end_char=4688
4	[	[	PUNCT	-LRB-	_	3	_	_	SpaceAfter=No|start_char=4689|end_char=4690
5	19	19	NUM	CD	NumForm=Digit|NumType=Card	4	_	_	SpaceAfter=No|start_char=4690|end_char=4692
6	]	]	PUNCT	-RRB-	_	5	_	_	start_char=4692|end_char=4693
7	and	and	CCONJ	CC	_	6	_	_	start_char=4694|end_char=4697
8	doppa	doppa	PROPN	NNP	Number=Sing	7	_	_	start_char=4698|end_char=4703
9	et	et	X	FW	Foreign=Yes	8	_	_	start_char=4704|end_char=4706
10	al	al	PROPN	NNP	Number=Sing	9	_	_	start_char=4707|end_char=4709
11	[	[	PUNCT	-LRB-	_	10	_	_	SpaceAfter=No|start_char=4710|end_char=4711
12	9	9	NUM	CD	NumForm=Digit|NumType=Card	11	_	_	SpaceAfter=No|start_char=4711|end_char=4712
13	]	]	PUNCT	-RRB-	_	12	_	_	start_char=4712|end_char=4713
14	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	13	_	_	start_char=4714|end_char=4717
15	different	different	ADJ	JJ	Degree=Pos	14	_	_	start_char=4718|end_char=4727
16	because	because	SCONJ	IN	_	15	_	_	start_char=4728|end_char=4735
17	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	16	_	_	start_char=4736|end_char=4738
18	use	use	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	17	_	_	start_char=4739|end_char=4742
19	the	the	DET	DT	Definite=Def|PronType=Art	18	_	_	start_char=4743|end_char=4746
20	typical	typical	ADJ	JJ	Degree=Pos	19	_	_	start_char=4747|end_char=4754
21	svm	svm	NOUN	NN	Number=Sing	20	_	_	start_char=4755|end_char=4758
22	formulation	formulation	NOUN	NN	Number=Sing	21	_	_	start_char=4759|end_char=4770
23	within	within	ADP	IN	_	22	_	_	start_char=4771|end_char=4777
24	an	a	DET	DT	Definite=Ind|PronType=Art	23	_	_	start_char=4778|end_char=4780
25	iterative	iterative	ADJ	JJ	Degree=Pos	24	_	_	start_char=4781|end_char=4790
26	framework	framework	NOUN	NN	Number=Sing	25	_	_	SpaceAfter=No|start_char=4791|end_char=4800
27	,	,	PUNCT	,	_	26	_	_	start_char=4800|end_char=4801
28	whereas	whereas	SCONJ	IN	_	27	_	_	start_char=4802|end_char=4809
29	they	they	PRON	PRP	Case=Nom|Number=Plur|Person=3|PronType=Prs	28	_	_	start_char=4810|end_char=4814
30	propose	propose	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	29	_	_	start_char=4815|end_char=4822
31	an	a	DET	DT	Definite=Ind|PronType=Art	30	_	_	start_char=4823|end_char=4825
32	socp	socp	NOUN	NN	Number=Sing	31	_	_	start_char=4826|end_char=4830
33	formulation	formulation	NOUN	NN	Number=Sing	32	_	_	start_char=4831|end_char=4842
34	based	base	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	33	_	_	start_char=4843|end_char=4848
35	on	on	ADP	IN	_	34	_	_	start_char=4849|end_char=4851
36	chance	chance	NOUN	NN	Number=Sing	35	_	_	start_char=4852|end_char=4858
37	constraints	constraint	NOUN	NNS	Number=Plur	36	_	_	SpaceAfter=No|start_char=4859|end_char=4870
38	.	.	PUNCT	.	_	37	_	_	start_char=4870|end_char=4871

# text = our data disaggregation and cluster partitioning procedure is based on the optimality condition derived in this paper: relative location of the observations to the hyperplane (for lad, svm, s 3 vm) and labels of the observations (for svm, s 3 vm).
# sent_id = 28
1	our	our	PRON	PRP$	Case=Gen|Number=Plur|Person=1|Poss=Yes|PronType=Prs	0	_	_	start_char=4872|end_char=4875
2	data	datum	NOUN	NN	Number=Sing	1	_	_	start_char=4876|end_char=4880
3	disaggregation	disaggregation	NOUN	NN	Number=Sing	2	_	_	start_char=4881|end_char=4895
4	and	and	CCONJ	CC	_	3	_	_	start_char=4896|end_char=4899
5	cluster	cluster	NOUN	NN	Number=Sing	4	_	_	start_char=4900|end_char=4907
6	partitioning	partitioning	NOUN	NN	Number=Sing	5	_	_	start_char=4908|end_char=4920
7	procedure	procedure	NOUN	NN	Number=Sing	6	_	_	start_char=4921|end_char=4930
8	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	_	_	start_char=4931|end_char=4933
9	based	base	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	8	_	_	start_char=4934|end_char=4939
10	on	on	ADP	IN	_	9	_	_	start_char=4940|end_char=4942
11	the	the	DET	DT	Definite=Def|PronType=Art	10	_	_	start_char=4943|end_char=4946
12	optimality	optimality	NOUN	NN	Number=Sing	11	_	_	start_char=4947|end_char=4957
13	condition	condition	NOUN	NN	Number=Sing	12	_	_	start_char=4958|end_char=4967
14	derived	derive	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	13	_	_	start_char=4968|end_char=4975
15	in	in	ADP	IN	_	14	_	_	start_char=4976|end_char=4978
16	this	this	DET	DT	Number=Sing|PronType=Dem	15	_	_	start_char=4979|end_char=4983
17	paper	paper	NOUN	NN	Number=Sing	16	_	_	SpaceAfter=No|start_char=4984|end_char=4989
18	:	:	PUNCT	:	_	17	_	_	start_char=4989|end_char=4990
19	relative	relative	ADJ	JJ	Degree=Pos	18	_	_	start_char=4991|end_char=4999
20	location	location	NOUN	NN	Number=Sing	19	_	_	start_char=5000|end_char=5008
21	of	of	ADP	IN	_	20	_	_	start_char=5009|end_char=5011
22	the	the	DET	DT	Definite=Def|PronType=Art	21	_	_	start_char=5012|end_char=5015
23	observations	observation	NOUN	NNS	Number=Plur	22	_	_	start_char=5016|end_char=5028
24	to	to	ADP	IN	_	23	_	_	start_char=5029|end_char=5031
25	the	the	DET	DT	Definite=Def|PronType=Art	24	_	_	start_char=5032|end_char=5035
26	hyperplane	hyperplane	NOUN	NN	Number=Sing	25	_	_	start_char=5036|end_char=5046
27	(	(	PUNCT	-LRB-	_	26	_	_	SpaceAfter=No|start_char=5047|end_char=5048
28	for	for	ADP	IN	_	27	_	_	start_char=5048|end_char=5051
29	lad	lad	NOUN	NN	Number=Sing	28	_	_	SpaceAfter=No|start_char=5052|end_char=5055
30	,	,	PUNCT	,	_	29	_	_	start_char=5055|end_char=5056
31	svm	svm	NOUN	NN	Number=Sing	30	_	_	SpaceAfter=No|start_char=5057|end_char=5060
32	,	,	PUNCT	,	_	31	_	_	start_char=5060|end_char=5061
33	s	's	PART	POS	Typo=Yes	32	_	_	start_char=5062|end_char=5063
34	3	3	NUM	CD	NumForm=Digit|NumType=Card	33	_	_	start_char=5064|end_char=5065
35	vm	vm	NOUN	NN	Number=Sing	34	_	_	SpaceAfter=No|start_char=5066|end_char=5068
36	)	)	PUNCT	-RRB-	_	35	_	_	start_char=5068|end_char=5069
37	and	and	CCONJ	CC	_	36	_	_	start_char=5070|end_char=5073
38	labels	label	NOUN	NNS	Number=Plur	37	_	_	start_char=5074|end_char=5080
39	of	of	ADP	IN	_	38	_	_	start_char=5081|end_char=5083
40	the	the	DET	DT	Definite=Def|PronType=Art	39	_	_	start_char=5084|end_char=5087
41	observations	observation	NOUN	NNS	Number=Plur	40	_	_	start_char=5088|end_char=5100
42	(	(	PUNCT	-LRB-	_	41	_	_	SpaceAfter=No|start_char=5101|end_char=5102
43	for	for	ADP	IN	_	42	_	_	start_char=5102|end_char=5105
44	svm	svm	NOUN	NN	Number=Sing	43	_	_	SpaceAfter=No|start_char=5106|end_char=5109
45	,	,	PUNCT	,	_	44	_	_	start_char=5109|end_char=5110
46	s	s	X	AFX	_	45	_	_	start_char=5111|end_char=5112
47	3	3	NUM	CD	NumForm=Digit|NumType=Card	46	_	_	start_char=5113|end_char=5114
48	vm	vm	NOUN	NN	Number=Sing	47	_	_	SpaceAfter=No|start_char=5115|end_char=5117
49	)	)	PUNCT	-RRB-	_	48	_	_	SpaceAfter=No|start_char=5117|end_char=5118
50	.	.	PUNCT	.	_	49	_	_	start_char=5118|end_char=5119

# text = for example, in the svm case, if the separating hyperplane divides a cluster, the cluster is split.
# sent_id = 29
1	for	for	ADP	IN	_	0	_	_	start_char=5120|end_char=5123
2	example	example	NOUN	NN	Number=Sing	1	_	_	SpaceAfter=No|start_char=5124|end_char=5131
3	,	,	PUNCT	,	_	2	_	_	start_char=5131|end_char=5132
4	in	in	ADP	IN	_	3	_	_	start_char=5133|end_char=5135
5	the	the	DET	DT	Definite=Def|PronType=Art	4	_	_	start_char=5136|end_char=5139
6	svm	svm	NOUN	NN	Number=Sing	5	_	_	start_char=5140|end_char=5143
7	case	case	NOUN	NN	Number=Sing	6	_	_	SpaceAfter=No|start_char=5144|end_char=5148
8	,	,	PUNCT	,	_	7	_	_	start_char=5148|end_char=5149
9	if	if	SCONJ	IN	_	8	_	_	start_char=5150|end_char=5152
10	the	the	DET	DT	Definite=Def|PronType=Art	9	_	_	start_char=5153|end_char=5156
11	separating	separate	VERB	VBG	VerbForm=Ger	10	_	_	start_char=5157|end_char=5167
12	hyperplane	hyperplane	NOUN	NN	Number=Sing	11	_	_	start_char=5168|end_char=5178
13	divides	divide	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	12	_	_	start_char=5179|end_char=5186
14	a	a	DET	DT	Definite=Ind|PronType=Art	13	_	_	start_char=5187|end_char=5188
15	cluster	cluster	NOUN	NN	Number=Sing	14	_	_	SpaceAfter=No|start_char=5189|end_char=5196
16	,	,	PUNCT	,	_	15	_	_	start_char=5196|end_char=5197
17	the	the	DET	DT	Definite=Def|PronType=Art	16	_	_	start_char=5198|end_char=5201
18	cluster	cluster	NOUN	NN	Number=Sing	17	_	_	start_char=5202|end_char=5209
19	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	18	_	_	start_char=5210|end_char=5212
20	split	split	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	19	_	_	SpaceAfter=No|start_char=5213|end_char=5218
21	.	.	PUNCT	.	_	20	_	_	start_char=5218|end_char=5219

# text = the condition for s 3 vm is even more involved since a single cluster can be split into four clusters.
# sent_id = 30
1	the	the	DET	DT	Definite=Def|PronType=Art	0	_	_	start_char=5220|end_char=5223
2	condition	condition	NOUN	NN	Number=Sing	1	_	_	start_char=5224|end_char=5233
3	for	for	ADP	IN	_	2	_	_	start_char=5234|end_char=5237
4	s	's	PART	POS	Typo=Yes	3	_	_	start_char=5238|end_char=5239
5	3	3	NUM	CD	NumForm=Digit|NumType=Card	4	_	_	start_char=5240|end_char=5241
6	vm	vm	NOUN	NN	Number=Sing	5	_	_	start_char=5242|end_char=5244
7	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	_	_	start_char=5245|end_char=5247
8	even	even	ADV	RB	_	7	_	_	start_char=5248|end_char=5252
9	more	more	ADV	RBR	Degree=Cmp	8	_	_	start_char=5253|end_char=5257
10	involved	involve	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	9	_	_	start_char=5258|end_char=5266
11	since	since	SCONJ	IN	_	10	_	_	start_char=5267|end_char=5272
12	a	a	DET	DT	Definite=Ind|PronType=Art	11	_	_	start_char=5273|end_char=5274
13	single	single	ADJ	JJ	Degree=Pos	12	_	_	start_char=5275|end_char=5281
14	cluster	cluster	NOUN	NN	Number=Sing	13	_	_	start_char=5282|end_char=5289
15	can	can	AUX	MD	VerbForm=Fin	14	_	_	start_char=5290|end_char=5293
16	be	be	AUX	VB	VerbForm=Inf	15	_	_	start_char=5294|end_char=5296
17	split	split	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	16	_	_	start_char=5297|end_char=5302
18	into	into	ADP	IN	_	17	_	_	start_char=5303|end_char=5307
19	four	four	NUM	CD	NumForm=Word|NumType=Card	18	_	_	start_char=5308|end_char=5312
20	clusters	cluster	NOUN	NNS	Number=Plur	19	_	_	SpaceAfter=No|start_char=5313|end_char=5321
21	.	.	PUNCT	.	_	20	_	_	start_char=5321|end_char=5322

# text = in the computational experiment, we show that our algorithm outperforms the current state-of-the-art algorithms when the data size is large.
# sent_id = 31
1	in	in	ADP	IN	_	0	_	_	start_char=5323|end_char=5325
2	the	the	DET	DT	Definite=Def|PronType=Art	1	_	_	start_char=5326|end_char=5329
3	computational	computational	ADJ	JJ	Degree=Pos	2	_	_	start_char=5330|end_char=5343
4	experiment	experiment	NOUN	NN	Number=Sing	3	_	_	SpaceAfter=No|start_char=5344|end_char=5354
5	,	,	PUNCT	,	_	4	_	_	start_char=5354|end_char=5355
6	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	5	_	_	start_char=5356|end_char=5358
7	show	show	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	6	_	_	start_char=5359|end_char=5363
8	that	that	SCONJ	IN	_	7	_	_	start_char=5364|end_char=5368
9	our	our	PRON	PRP$	Case=Gen|Number=Plur|Person=1|Poss=Yes|PronType=Prs	8	_	_	start_char=5369|end_char=5372
10	algorithm	algorithm	NOUN	NN	Number=Sing	9	_	_	start_char=5373|end_char=5382
11	outperforms	outperform	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	_	_	start_char=5383|end_char=5394
12	the	the	DET	DT	Definite=Def|PronType=Art	11	_	_	start_char=5395|end_char=5398
13	current	current	ADJ	JJ	Degree=Pos	12	_	_	start_char=5399|end_char=5406
14	state	state	NOUN	NN	Number=Sing	13	_	_	SpaceAfter=No|start_char=5407|end_char=5412
15	-	-	PUNCT	HYPH	_	14	_	_	SpaceAfter=No|start_char=5412|end_char=5413
16	of	of	ADP	IN	_	15	_	_	SpaceAfter=No|start_char=5413|end_char=5415
17	-	-	PUNCT	HYPH	_	16	_	_	SpaceAfter=No|start_char=5415|end_char=5416
18	the	the	DET	DT	Definite=Def|PronType=Art	17	_	_	SpaceAfter=No|start_char=5416|end_char=5419
19	-	-	PUNCT	HYPH	_	18	_	_	SpaceAfter=No|start_char=5419|end_char=5420
20	art	art	NOUN	NN	Number=Sing	19	_	_	start_char=5420|end_char=5423
21	algorithms	algorithm	NOUN	NNS	Number=Plur	20	_	_	start_char=5424|end_char=5434
22	when	when	ADV	WRB	PronType=Int	21	_	_	start_char=5435|end_char=5439
23	the	the	DET	DT	Definite=Def|PronType=Art	22	_	_	start_char=5440|end_char=5443
24	data	datum	NOUN	NNS	Number=Plur	23	_	_	start_char=5444|end_char=5448
25	size	size	NOUN	NN	Number=Sing	24	_	_	start_char=5449|end_char=5453
26	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	25	_	_	start_char=5454|end_char=5456
27	large	large	ADJ	JJ	Degree=Pos	26	_	_	SpaceAfter=No|start_char=5457|end_char=5462
28	.	.	PUNCT	.	_	27	_	_	start_char=5462|end_char=5463

# text = the implementation of our algorithms is based on in-memory processing, however the algorithms work also when data does not fit entirely in memory and has to be read from disk in batches.
# sent_id = 32
1	the	the	DET	DT	Definite=Def|PronType=Art	0	_	_	start_char=5464|end_char=5467
2	implementation	implementation	NOUN	NN	Number=Sing	1	_	_	start_char=5468|end_char=5482
3	of	of	ADP	IN	_	2	_	_	start_char=5483|end_char=5485
4	our	our	PRON	PRP$	Case=Gen|Number=Plur|Person=1|Poss=Yes|PronType=Prs	3	_	_	start_char=5486|end_char=5489
5	algorithms	algorithm	NOUN	NNS	Number=Plur	4	_	_	start_char=5490|end_char=5500
6	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	_	_	start_char=5501|end_char=5503
7	based	base	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	6	_	_	start_char=5504|end_char=5509
8	on	on	ADP	IN	_	7	_	_	start_char=5510|end_char=5512
9	in	in	ADP	IN	_	8	_	_	SpaceAfter=No|start_char=5513|end_char=5515
10	-	-	PUNCT	HYPH	_	9	_	_	SpaceAfter=No|start_char=5515|end_char=5516
11	memory	memory	NOUN	NN	Number=Sing	10	_	_	start_char=5516|end_char=5522
12	processing	processing	NOUN	NN	Number=Sing	11	_	_	SpaceAfter=No|start_char=5523|end_char=5533
13	,	,	PUNCT	,	_	12	_	_	start_char=5533|end_char=5534
14	however	however	ADV	RB	_	13	_	_	start_char=5535|end_char=5542
15	the	the	DET	DT	Definite=Def|PronType=Art	14	_	_	start_char=5543|end_char=5546
16	algorithms	algorithm	NOUN	NNS	Number=Plur	15	_	_	start_char=5547|end_char=5557
17	work	work	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	16	_	_	start_char=5558|end_char=5562
18	also	also	ADV	RB	_	17	_	_	start_char=5563|end_char=5567
19	when	when	ADV	WRB	PronType=Int	18	_	_	start_char=5568|end_char=5572
20	data	datum	NOUN	NNS	Number=Plur	19	_	_	start_char=5573|end_char=5577
21	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	20	_	_	start_char=5578|end_char=5582
22	not	not	PART	RB	Polarity=Neg	21	_	_	start_char=5583|end_char=5586
23	fit	fit	VERB	VB	VerbForm=Inf	22	_	_	start_char=5587|end_char=5590
24	entirely	entirely	ADV	RB	_	23	_	_	start_char=5591|end_char=5599
25	in	in	ADP	IN	_	24	_	_	start_char=5600|end_char=5602
26	memory	memory	NOUN	NN	Number=Sing	25	_	_	start_char=5603|end_char=5609
27	and	and	CCONJ	CC	_	26	_	_	start_char=5610|end_char=5613
28	has	have	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	27	_	_	start_char=5614|end_char=5617
29	to	to	PART	TO	_	28	_	_	start_char=5618|end_char=5620
30	be	be	AUX	VB	VerbForm=Inf	29	_	_	start_char=5621|end_char=5623
31	read	read	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	30	_	_	start_char=5624|end_char=5628
32	from	from	ADP	IN	_	31	_	_	start_char=5629|end_char=5633
33	disk	disk	NOUN	NN	Number=Sing	32	_	_	start_char=5634|end_char=5638
34	in	in	ADP	IN	_	33	_	_	start_char=5639|end_char=5641
35	batches	batch	NOUN	NNS	Number=Plur	34	_	_	SpaceAfter=No|start_char=5642|end_char=5649
36	.	.	PUNCT	.	_	35	_	_	start_char=5649|end_char=5650

# text = the algorithms never require the entire data set to be processed at once.
# sent_id = 33
1	the	the	DET	DT	Definite=Def|PronType=Art	0	_	_	start_char=5651|end_char=5654
2	algorithms	algorithm	NOUN	NNS	Number=Plur	1	_	_	start_char=5655|end_char=5665
3	never	never	ADV	RB	PronType=Neg	2	_	_	start_char=5666|end_char=5671
4	require	require	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	3	_	_	start_char=5672|end_char=5679
5	the	the	DET	DT	Definite=Def|PronType=Art	4	_	_	start_char=5680|end_char=5683
6	entire	entire	ADJ	JJ	Degree=Pos	5	_	_	start_char=5684|end_char=5690
7	data	datum	NOUN	NNS	Number=Plur	6	_	_	start_char=5691|end_char=5695
8	set	set	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	7	_	_	start_char=5696|end_char=5699
9	to	to	PART	TO	_	8	_	_	start_char=5700|end_char=5702
10	be	be	AUX	VB	VerbForm=Inf	9	_	_	start_char=5703|end_char=5705
11	processed	process	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	10	_	_	start_char=5706|end_char=5715
12	at	at	ADP	IN	_	11	_	_	start_char=5716|end_char=5718
13	once	once	ADV	RB	NumForm=Word|NumType=Mult	12	_	_	SpaceAfter=No|start_char=5719|end_char=5723
14	.	.	PUNCT	.	_	13	_	_	start_char=5723|end_char=5724

# text = our contributions are summarized as follows.
# sent_id = 34
1	our	our	PRON	PRP$	Case=Gen|Number=Plur|Person=1|Poss=Yes|PronType=Prs	0	_	_	start_char=5725|end_char=5728
2	contributions	contribution	NOUN	NNS	Number=Plur	1	_	_	start_char=5729|end_char=5742
3	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	2	_	_	start_char=5743|end_char=5746
4	summarized	summarize	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	3	_	_	start_char=5747|end_char=5757
5	as	as	SCONJ	IN	_	4	_	_	start_char=5758|end_char=5760
6	follows	follow	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	_	_	SpaceAfter=No|start_char=5761|end_char=5768
7	.	.	PUNCT	.	_	6	_	_	start_char=5768|end_char=5769

# text = 1. we propose a clustering-based iterative algorithm to solve certain optimization problems, where an optimality condition is derived for each problem.
# sent_id = 35
1	1	1	NUM	LS	NumForm=Digit|NumType=Card	0	_	_	SpaceAfter=No|start_char=5770|end_char=5771
2	.	.	PUNCT	.	_	1	_	_	start_char=5771|end_char=5772
3	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	2	_	_	start_char=5773|end_char=5775
4	propose	propose	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	3	_	_	start_char=5776|end_char=5783
5	a	a	DET	DT	Definite=Ind|PronType=Art	4	_	_	start_char=5784|end_char=5785
6	clustering	clustering	NOUN	NN	Number=Sing	5	_	_	SpaceAfter=No|start_char=5786|end_char=5796
7	-	-	PUNCT	HYPH	_	6	_	_	SpaceAfter=No|start_char=5796|end_char=5797
8	based	base	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	7	_	_	start_char=5797|end_char=5802
9	iterative	iterative	ADJ	JJ	Degree=Pos	8	_	_	start_char=5803|end_char=5812
10	algorithm	algorithm	NOUN	NN	Number=Sing	9	_	_	start_char=5813|end_char=5822
11	to	to	PART	TO	_	10	_	_	start_char=5823|end_char=5825
12	solve	solve	VERB	VB	VerbForm=Inf	11	_	_	start_char=5826|end_char=5831
13	certain	certain	ADJ	JJ	Degree=Pos	12	_	_	start_char=5832|end_char=5839
14	optimization	optimization	NOUN	NN	Number=Sing	13	_	_	start_char=5840|end_char=5852
15	problems	problem	NOUN	NNS	Number=Plur	14	_	_	SpaceAfter=No|start_char=5853|end_char=5861
16	,	,	PUNCT	,	_	15	_	_	start_char=5861|end_char=5862
17	where	where	ADV	WRB	PronType=Rel	16	_	_	start_char=5863|end_char=5868
18	an	a	DET	DT	Definite=Ind|PronType=Art	17	_	_	start_char=5869|end_char=5871
19	optimality	optimality	NOUN	NN	Number=Sing	18	_	_	start_char=5872|end_char=5882
20	condition	condition	NOUN	NN	Number=Sing	19	_	_	start_char=5883|end_char=5892
21	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	20	_	_	start_char=5893|end_char=5895
22	derived	derive	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	21	_	_	start_char=5896|end_char=5903
23	for	for	ADP	IN	_	22	_	_	start_char=5904|end_char=5907
24	each	each	DET	DT	PronType=Tot	23	_	_	start_char=5908|end_char=5912
25	problem	problem	NOUN	NN	Number=Sing	24	_	_	SpaceAfter=No|start_char=5913|end_char=5920
26	.	.	PUNCT	.	_	25	_	_	start_char=5920|end_char=5921

# text = the proposed algorithmic framework can be applied to other problems with certain structural properties (even outside of machine learning).
# sent_id = 36
1	the	the	DET	DT	Definite=Def|PronType=Art	0	_	_	start_char=5922|end_char=5925
2	proposed	propose	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	1	_	_	start_char=5926|end_char=5934
3	algorithmic	algorithmic	ADJ	JJ	Degree=Pos	2	_	_	start_char=5935|end_char=5946
4	framework	framework	NOUN	NN	Number=Sing	3	_	_	start_char=5947|end_char=5956
5	can	can	AUX	MD	VerbForm=Fin	4	_	_	start_char=5957|end_char=5960
6	be	be	AUX	VB	VerbForm=Inf	5	_	_	start_char=5961|end_char=5963
7	applied	apply	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	6	_	_	start_char=5964|end_char=5971
8	to	to	ADP	IN	_	7	_	_	start_char=5972|end_char=5974
9	other	other	ADJ	JJ	Degree=Pos	8	_	_	start_char=5975|end_char=5980
10	problems	problem	NOUN	NNS	Number=Plur	9	_	_	start_char=5981|end_char=5989
11	with	with	ADP	IN	_	10	_	_	start_char=5990|end_char=5994
12	certain	certain	ADJ	JJ	Degree=Pos	11	_	_	start_char=5995|end_char=6002
13	structural	structural	ADJ	JJ	Degree=Pos	12	_	_	start_char=6003|end_char=6013
14	properties	property	NOUN	NNS	Number=Plur	13	_	_	start_char=6014|end_char=6024
15	(	(	PUNCT	-LRB-	_	14	_	_	SpaceAfter=No|start_char=6025|end_char=6026
16	even	even	ADV	RB	_	15	_	_	start_char=6026|end_char=6030
17	outside	outside	ADV	RB	_	16	_	_	start_char=6031|end_char=6038
18	of	of	ADP	IN	_	17	_	_	start_char=6039|end_char=6041
19	machine	machine	NOUN	NN	Number=Sing	18	_	_	start_char=6042|end_char=6049
20	learning	learning	NOUN	NN	Number=Sing	19	_	_	SpaceAfter=No|start_char=6050|end_char=6058
21	)	)	PUNCT	-RRB-	_	20	_	_	SpaceAfter=No|start_char=6058|end_char=6059
22	.	.	PUNCT	.	_	21	_	_	start_char=6059|end_char=6060

# text = the algorithm is most beneficial when the time complexity of the original optimization problem is high.
# sent_id = 37
1	the	the	DET	DT	Definite=Def|PronType=Art	0	_	_	start_char=6061|end_char=6064
2	algorithm	algorithm	NOUN	NN	Number=Sing	1	_	_	start_char=6065|end_char=6074
3	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	_	_	start_char=6075|end_char=6077
4	most	most	ADV	RBS	Degree=Sup	3	_	_	start_char=6078|end_char=6082
5	beneficial	beneficial	ADJ	JJ	Degree=Pos	4	_	_	start_char=6083|end_char=6093
6	when	when	ADV	WRB	PronType=Int	5	_	_	start_char=6094|end_char=6098
7	the	the	DET	DT	Definite=Def|PronType=Art	6	_	_	start_char=6099|end_char=6102
8	time	time	NOUN	NN	Number=Sing	7	_	_	start_char=6103|end_char=6107
9	complexity	complexity	NOUN	NN	Number=Sing	8	_	_	start_char=6108|end_char=6118
10	of	of	ADP	IN	_	9	_	_	start_char=6119|end_char=6121
11	the	the	DET	DT	Definite=Def|PronType=Art	10	_	_	start_char=6122|end_char=6125
12	original	original	ADJ	JJ	Degree=Pos	11	_	_	start_char=6126|end_char=6134
13	optimization	optimization	NOUN	NN	Number=Sing	12	_	_	start_char=6135|end_char=6147
14	problem	problem	NOUN	NN	Number=Sing	13	_	_	start_char=6148|end_char=6155
15	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	_	_	start_char=6156|end_char=6158
16	high	high	ADJ	JJ	Degree=Pos	15	_	_	SpaceAfter=No|start_char=6159|end_char=6163
17	.	.	PUNCT	.	_	16	_	_	start_char=6163|end_char=6164

# text = 2. we present model specific disaggregation and cluster partitioning procedures based on the optimality condition, which is one of the keys for achieving optimality.
# sent_id = 38
1	2	2	NUM	LS	NumForm=Digit|NumType=Card	0	_	_	SpaceAfter=No|start_char=6165|end_char=6166
2	.	.	PUNCT	.	_	1	_	_	start_char=6166|end_char=6167
3	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	2	_	_	start_char=6168|end_char=6170
4	present	present	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	3	_	_	start_char=6171|end_char=6178
5	model	model	NOUN	NN	Number=Sing	4	_	_	start_char=6179|end_char=6184
6	specific	specific	ADJ	JJ	Degree=Pos	5	_	_	start_char=6185|end_char=6193
7	disaggregation	disaggregation	NOUN	NN	Number=Sing	6	_	_	start_char=6194|end_char=6208
8	and	and	CCONJ	CC	_	7	_	_	start_char=6209|end_char=6212
9	cluster	cluster	NOUN	NN	Number=Sing	8	_	_	start_char=6213|end_char=6220
10	partitioning	partitioning	NOUN	NN	Number=Sing	9	_	_	start_char=6221|end_char=6233
11	procedures	procedure	NOUN	NNS	Number=Plur	10	_	_	start_char=6234|end_char=6244
12	based	base	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	11	_	_	start_char=6245|end_char=6250
13	on	on	ADP	IN	_	12	_	_	start_char=6251|end_char=6253
14	the	the	DET	DT	Definite=Def|PronType=Art	13	_	_	start_char=6254|end_char=6257
15	optimality	optimality	NOUN	NN	Number=Sing	14	_	_	start_char=6258|end_char=6268
16	condition	condition	NOUN	NN	Number=Sing	15	_	_	SpaceAfter=No|start_char=6269|end_char=6278
17	,	,	PUNCT	,	_	16	_	_	start_char=6278|end_char=6279
18	which	which	PRON	WDT	PronType=Rel	17	_	_	start_char=6280|end_char=6285
19	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	18	_	_	start_char=6286|end_char=6288
20	one	one	NUM	CD	NumForm=Word|NumType=Card	19	_	_	start_char=6289|end_char=6292
21	of	of	ADP	IN	_	20	_	_	start_char=6293|end_char=6295
22	the	the	DET	DT	Definite=Def|PronType=Art	21	_	_	start_char=6296|end_char=6299
23	keys	key	NOUN	NNS	Number=Plur	22	_	_	start_char=6300|end_char=6304
24	for	for	SCONJ	IN	_	23	_	_	start_char=6305|end_char=6308
25	achieving	achieve	VERB	VBG	VerbForm=Ger	24	_	_	start_char=6309|end_char=6318
26	optimality	optimality	NOUN	NN	Number=Sing	25	_	_	SpaceAfter=No|start_char=6319|end_char=6329
27	.	.	PUNCT	.	_	26	_	_	start_char=6329|end_char=6330

# text = 3. for the selected machine learning problems, i.e., lad and svm, we show that the algorithm monotonically converges to a global optimum, while providing the optimality gap in each iteration.
# sent_id = 39
1	3	3	NUM	LS	NumForm=Digit|NumType=Card	0	_	_	SpaceAfter=No|start_char=6331|end_char=6332
2	.	.	PUNCT	.	_	1	_	_	start_char=6332|end_char=6333
3	for	for	ADP	IN	_	2	_	_	start_char=6334|end_char=6337
4	the	the	DET	DT	Definite=Def|PronType=Art	3	_	_	start_char=6338|end_char=6341
5	selected	select	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	4	_	_	start_char=6342|end_char=6350
6	machine	machine	NOUN	NN	Number=Sing	5	_	_	start_char=6351|end_char=6358
7	learning	learning	NOUN	NN	Number=Sing	6	_	_	start_char=6359|end_char=6367
8	problems	problem	NOUN	NNS	Number=Plur	7	_	_	SpaceAfter=No|start_char=6368|end_char=6376
9	,	,	PUNCT	,	_	8	_	_	start_char=6376|end_char=6377
10	i.e.	i.e.	ADV	FW	Abbr=Yes	9	_	_	SpaceAfter=No|start_char=6378|end_char=6382
11	,	,	PUNCT	,	_	10	_	_	start_char=6382|end_char=6383
12	lad	lad	NOUN	NN	Number=Sing	11	_	_	start_char=6384|end_char=6387
13	and	and	CCONJ	CC	_	12	_	_	start_char=6388|end_char=6391
14	svm	svm	NOUN	NN	Number=Sing	13	_	_	SpaceAfter=No|start_char=6392|end_char=6395
15	,	,	PUNCT	,	_	14	_	_	start_char=6395|end_char=6396
16	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	15	_	_	start_char=6397|end_char=6399
17	show	show	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	16	_	_	start_char=6400|end_char=6404
18	that	that	SCONJ	IN	_	17	_	_	start_char=6405|end_char=6409
19	the	the	DET	DT	Definite=Def|PronType=Art	18	_	_	start_char=6410|end_char=6413
20	algorithm	algorithm	NOUN	NN	Number=Sing	19	_	_	start_char=6414|end_char=6423
21	monotonically	monotonically	ADV	RB	_	20	_	_	start_char=6424|end_char=6437
22	converges	converge	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	21	_	_	start_char=6438|end_char=6447
23	to	to	ADP	IN	_	22	_	_	start_char=6448|end_char=6450
24	a	a	DET	DT	Definite=Ind|PronType=Art	23	_	_	start_char=6451|end_char=6452
25	global	global	ADJ	JJ	Degree=Pos	24	_	_	start_char=6453|end_char=6459
26	optimum	optimum	NOUN	NN	Number=Sing	25	_	_	SpaceAfter=No|start_char=6460|end_char=6467
27	,	,	PUNCT	,	_	26	_	_	start_char=6467|end_char=6468
28	while	while	SCONJ	IN	_	27	_	_	start_char=6469|end_char=6474
29	providing	provide	VERB	VBG	Tense=Pres|VerbForm=Part	28	_	_	start_char=6475|end_char=6484
30	the	the	DET	DT	Definite=Def|PronType=Art	29	_	_	start_char=6485|end_char=6488
31	optimality	optimality	NOUN	NN	Number=Sing	30	_	_	start_char=6489|end_char=6499
32	gap	gap	NOUN	NN	Number=Sing	31	_	_	start_char=6500|end_char=6503
33	in	in	ADP	IN	_	32	_	_	start_char=6504|end_char=6506
34	each	each	DET	DT	PronType=Tot	33	_	_	start_char=6507|end_char=6511
35	iteration	iteration	NOUN	NN	Number=Sing	34	_	_	SpaceAfter=No|start_char=6512|end_char=6521
36	.	.	PUNCT	.	_	35	_	_	start_char=6521|end_char=6522

# text = for s 3 vm, we provide the optimality condition.
# sent_id = 40
1	for	for	ADP	IN	_	0	_	_	start_char=6523|end_char=6526
2	s	's	PART	POS	Typo=Yes	1	_	_	start_char=6527|end_char=6528
3	3	3	NUM	CD	NumForm=Digit|NumType=Card	2	_	_	start_char=6529|end_char=6530
4	vm	vm	NOUN	NN	Number=Sing	3	_	_	SpaceAfter=No|start_char=6531|end_char=6533
5	,	,	PUNCT	,	_	4	_	_	start_char=6533|end_char=6534
6	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	5	_	_	start_char=6535|end_char=6537
7	provide	provide	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	6	_	_	start_char=6538|end_char=6545
8	the	the	DET	DT	Definite=Def|PronType=Art	7	_	_	start_char=6546|end_char=6549
9	optimality	optimality	NOUN	NN	Number=Sing	8	_	_	start_char=6550|end_char=6560
10	condition	condition	NOUN	NN	Number=Sing	9	_	_	SpaceAfter=No|start_char=6561|end_char=6570
11	.	.	PUNCT	.	_	10	_	_	start_char=6570|end_char=6571

# text = we present the algorithmic framework in section 2 and apply it to lad, svm, and s 3 vm in section 3.
# sent_id = 41
1	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	0	_	_	start_char=6572|end_char=6574
2	present	present	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	1	_	_	start_char=6575|end_char=6582
3	the	the	DET	DT	Definite=Def|PronType=Art	2	_	_	start_char=6583|end_char=6586
4	algorithmic	algorithmic	ADJ	JJ	Degree=Pos	3	_	_	start_char=6587|end_char=6598
5	framework	framework	NOUN	NN	Number=Sing	4	_	_	start_char=6599|end_char=6608
6	in	in	ADP	IN	_	5	_	_	start_char=6609|end_char=6611
7	section	section	NOUN	NN	Number=Sing	6	_	_	start_char=6612|end_char=6619
8	2	2	NUM	CD	NumForm=Digit|NumType=Card	7	_	_	start_char=6620|end_char=6621
9	and	and	CCONJ	CC	_	8	_	_	start_char=6622|end_char=6625
10	apply	apply	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	9	_	_	start_char=6626|end_char=6631
11	it	it	PRON	PRP	Case=Acc|Gender=Neut|Number=Sing|Person=3|PronType=Prs	10	_	_	start_char=6632|end_char=6634
12	to	to	ADP	IN	_	11	_	_	start_char=6635|end_char=6637
13	lad	lad	NOUN	NN	Number=Sing	12	_	_	SpaceAfter=No|start_char=6638|end_char=6641
14	,	,	PUNCT	,	_	13	_	_	start_char=6641|end_char=6642
15	svm	svm	NOUN	NN	Number=Sing	14	_	_	SpaceAfter=No|start_char=6643|end_char=6646
16	,	,	PUNCT	,	_	15	_	_	start_char=6646|end_char=6647
17	and	and	CCONJ	CC	_	16	_	_	start_char=6648|end_char=6651
18	s	's	PART	POS	Typo=Yes	17	_	_	start_char=6652|end_char=6653
19	3	3	NUM	CD	NumForm=Digit|NumType=Card	18	_	_	start_char=6654|end_char=6655
20	vm	vm	NOUN	NN	Number=Sing	19	_	_	start_char=6656|end_char=6658
21	in	in	ADP	IN	_	20	_	_	start_char=6659|end_char=6661
22	section	section	NOUN	NN	Number=Sing	21	_	_	start_char=6662|end_char=6669
23	3	3	NUM	CD	NumForm=Digit|NumType=Card	22	_	_	SpaceAfter=No|start_char=6670|end_char=6671
24	.	.	PUNCT	.	_	23	_	_	start_char=6671|end_char=6672

# text = a computational study is provided in section 4, followed by a discussion on the characteristic of the algorithm and how to develop the algorithm for other problems in section 5.
# sent_id = 42
1	a	a	DET	DT	Definite=Ind|PronType=Art	0	_	_	start_char=6673|end_char=6674
2	computational	computational	ADJ	JJ	Degree=Pos	1	_	_	start_char=6675|end_char=6688
3	study	study	NOUN	NN	Number=Sing	2	_	_	start_char=6689|end_char=6694
4	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	_	_	start_char=6695|end_char=6697
5	provided	provide	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	4	_	_	start_char=6698|end_char=6706
6	in	in	ADP	IN	_	5	_	_	start_char=6707|end_char=6709
7	section	section	NOUN	NN	Number=Sing	6	_	_	start_char=6710|end_char=6717
8	4	4	NUM	CD	NumForm=Digit|NumType=Card	7	_	_	SpaceAfter=No|start_char=6718|end_char=6719
9	,	,	PUNCT	,	_	8	_	_	start_char=6719|end_char=6720
10	followed	follow	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	9	_	_	start_char=6721|end_char=6729
11	by	by	ADP	IN	_	10	_	_	start_char=6730|end_char=6732
12	a	a	DET	DT	Definite=Ind|PronType=Art	11	_	_	start_char=6733|end_char=6734
13	discussion	discussion	NOUN	NN	Number=Sing	12	_	_	start_char=6735|end_char=6745
14	on	on	ADP	IN	_	13	_	_	start_char=6746|end_char=6748
15	the	the	DET	DT	Definite=Def|PronType=Art	14	_	_	start_char=6749|end_char=6752
16	characteristic	characteristic	NOUN	NN	Number=Sing	15	_	_	start_char=6753|end_char=6767
17	of	of	ADP	IN	_	16	_	_	start_char=6768|end_char=6770
18	the	the	DET	DT	Definite=Def|PronType=Art	17	_	_	start_char=6771|end_char=6774
19	algorithm	algorithm	NOUN	NN	Number=Sing	18	_	_	start_char=6775|end_char=6784
20	and	and	CCONJ	CC	_	19	_	_	start_char=6785|end_char=6788
21	how	how	ADV	WRB	PronType=Int	20	_	_	start_char=6789|end_char=6792
22	to	to	PART	TO	_	21	_	_	start_char=6793|end_char=6795
23	develop	develop	VERB	VB	VerbForm=Inf	22	_	_	start_char=6796|end_char=6803
24	the	the	DET	DT	Definite=Def|PronType=Art	23	_	_	start_char=6804|end_char=6807
25	algorithm	algorithm	NOUN	NN	Number=Sing	24	_	_	start_char=6808|end_char=6817
26	for	for	ADP	IN	_	25	_	_	start_char=6818|end_char=6821
27	other	other	ADJ	JJ	Degree=Pos	26	_	_	start_char=6822|end_char=6827
28	problems	problem	NOUN	NNS	Number=Plur	27	_	_	start_char=6828|end_char=6836
29	in	in	ADP	IN	_	28	_	_	start_char=6837|end_char=6839
30	section	section	NOUN	NN	Number=Sing	29	_	_	start_char=6840|end_char=6847
31	5	5	NUM	CD	NumForm=Digit|NumType=Card	30	_	_	SpaceAfter=No|start_char=6848|end_char=6849
32	.	.	PUNCT	.	_	31	_	_	SpaceAfter=No|start_char=6849|end_char=6850

