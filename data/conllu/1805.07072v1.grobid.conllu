# text = optimizing for generalization in machine learning with cross-validation gradients cross-validation is the workhorse of modern applied statistics and machine learning, as it provides a principled framework for selecting the model that maximizes generalization performance.
# sent_id = 0
1	optimizing	optimize	VERB	VBG	VerbForm=Ger	0	_	_	start_char=0|end_char=10
2	for	for	ADP	IN	_	1	_	_	start_char=11|end_char=14
3	generalization	generalization	NOUN	NN	Number=Sing	2	_	_	start_char=15|end_char=29
4	in	in	ADP	IN	_	3	_	_	start_char=30|end_char=32
5	machine	machine	NOUN	NN	Number=Sing	4	_	_	start_char=33|end_char=40
6	learning	learning	NOUN	NN	Number=Sing	5	_	_	start_char=41|end_char=49
7	with	with	ADP	IN	_	6	_	_	start_char=50|end_char=54
8	cross-validation	cross-validation	NOUN	NN	Number=Sing	7	_	_	start_char=55|end_char=71
9	gradients	gradient	NOUN	NNS	Number=Plur	8	_	_	start_char=72|end_char=81
10	cross-validation	cross-validation	NOUN	NN	Number=Sing	9	_	_	start_char=82|end_char=98
11	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	_	_	start_char=99|end_char=101
12	the	the	DET	DT	Definite=Def|PronType=Art	11	_	_	start_char=102|end_char=105
13	workhorse	workhorse	NOUN	NN	Number=Sing	12	_	_	start_char=106|end_char=115
14	of	of	ADP	IN	_	13	_	_	start_char=116|end_char=118
15	modern	modern	ADJ	JJ	Degree=Pos	14	_	_	start_char=119|end_char=125
16	applied	apply	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	15	_	_	start_char=126|end_char=133
17	statistics	statistic	NOUN	NNS	Number=Plur	16	_	_	start_char=134|end_char=144
18	and	and	CCONJ	CC	_	17	_	_	start_char=145|end_char=148
19	machine	machine	NOUN	NN	Number=Sing	18	_	_	start_char=149|end_char=156
20	learning	learning	NOUN	NN	Number=Sing	19	_	_	SpaceAfter=No|start_char=157|end_char=165
21	,	,	PUNCT	,	_	20	_	_	start_char=165|end_char=166
22	as	as	SCONJ	IN	_	21	_	_	start_char=167|end_char=169
23	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	22	_	_	start_char=170|end_char=172
24	provides	provide	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	23	_	_	start_char=173|end_char=181
25	a	a	DET	DT	Definite=Ind|PronType=Art	24	_	_	start_char=182|end_char=183
26	principled	principled	ADJ	JJ	Degree=Pos	25	_	_	start_char=184|end_char=194
27	framework	framework	NOUN	NN	Number=Sing	26	_	_	start_char=195|end_char=204
28	for	for	SCONJ	IN	_	27	_	_	start_char=205|end_char=208
29	selecting	select	VERB	VBG	VerbForm=Ger	28	_	_	start_char=209|end_char=218
30	the	the	DET	DT	Definite=Def|PronType=Art	29	_	_	start_char=219|end_char=222
31	model	model	NOUN	NN	Number=Sing	30	_	_	start_char=223|end_char=228
32	that	that	PRON	WDT	PronType=Rel	31	_	_	start_char=229|end_char=233
33	maximizes	maximize	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	32	_	_	start_char=234|end_char=243
34	generalization	generalization	NOUN	NN	Number=Sing	33	_	_	start_char=244|end_char=258
35	performance	performance	NOUN	NN	Number=Sing	34	_	_	SpaceAfter=No|start_char=259|end_char=270
36	.	.	PUNCT	.	_	35	_	_	start_char=270|end_char=271

# text = in this paper, we show that the cross-validation risk is differentiable with respect to the hyperparameters and training data for many common machine learning algorithms, including logistic regression, elastic-net regression, and support vector machines.
# sent_id = 1
1	in	in	ADP	IN	_	0	_	_	start_char=272|end_char=274
2	this	this	DET	DT	Number=Sing|PronType=Dem	1	_	_	start_char=275|end_char=279
3	paper	paper	NOUN	NN	Number=Sing	2	_	_	SpaceAfter=No|start_char=280|end_char=285
4	,	,	PUNCT	,	_	3	_	_	start_char=285|end_char=286
5	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	4	_	_	start_char=287|end_char=289
6	show	show	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	5	_	_	start_char=290|end_char=294
7	that	that	SCONJ	IN	_	6	_	_	start_char=295|end_char=299
8	the	the	DET	DT	Definite=Def|PronType=Art	7	_	_	start_char=300|end_char=303
9	cross-validation	cross-validation	NOUN	NN	Number=Sing	8	_	_	start_char=304|end_char=320
10	risk	risk	NOUN	NN	Number=Sing	9	_	_	start_char=321|end_char=325
11	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	_	_	start_char=326|end_char=328
12	differentiable	differentiable	ADJ	JJ	Degree=Pos	11	_	_	start_char=329|end_char=343
13	with	with	ADP	IN	_	12	_	_	start_char=344|end_char=348
14	respect	respect	NOUN	NN	Number=Sing	13	_	_	start_char=349|end_char=356
15	to	to	ADP	IN	_	14	_	_	start_char=357|end_char=359
16	the	the	DET	DT	Definite=Def|PronType=Art	15	_	_	start_char=360|end_char=363
17	hyperparameters	hyperparameter	NOUN	NNS	Number=Plur	16	_	_	start_char=364|end_char=379
18	and	and	CCONJ	CC	_	17	_	_	start_char=380|end_char=383
19	training	training	NOUN	NN	Number=Sing	18	_	_	start_char=384|end_char=392
20	data	datum	NOUN	NNS	Number=Plur	19	_	_	start_char=393|end_char=397
21	for	for	ADP	IN	_	20	_	_	start_char=398|end_char=401
22	many	many	ADJ	JJ	Degree=Pos	21	_	_	start_char=402|end_char=406
23	common	common	ADJ	JJ	Degree=Pos	22	_	_	start_char=407|end_char=413
24	machine	machine	NOUN	NN	Number=Sing	23	_	_	start_char=414|end_char=421
25	learning	learning	NOUN	NN	Number=Sing	24	_	_	start_char=422|end_char=430
26	algorithms	algorithm	NOUN	NNS	Number=Plur	25	_	_	SpaceAfter=No|start_char=431|end_char=441
27	,	,	PUNCT	,	_	26	_	_	start_char=441|end_char=442
28	including	include	VERB	VBG	Tense=Pres|VerbForm=Part	27	_	_	start_char=443|end_char=452
29	logistic	logistic	ADJ	JJ	Degree=Pos	28	_	_	start_char=453|end_char=461
30	regression	regression	NOUN	NN	Number=Sing	29	_	_	SpaceAfter=No|start_char=462|end_char=472
31	,	,	PUNCT	,	_	30	_	_	start_char=472|end_char=473
32	elastic	elastic	ADJ	JJ	Degree=Pos	31	_	_	SpaceAfter=No|start_char=474|end_char=481
33	-	-	PUNCT	HYPH	_	32	_	_	SpaceAfter=No|start_char=481|end_char=482
34	net	net	NOUN	NN	Number=Sing	33	_	_	start_char=482|end_char=485
35	regression	regression	NOUN	NN	Number=Sing	34	_	_	SpaceAfter=No|start_char=486|end_char=496
36	,	,	PUNCT	,	_	35	_	_	start_char=496|end_char=497
37	and	and	CCONJ	CC	_	36	_	_	start_char=498|end_char=501
38	support	support	NOUN	NN	Number=Sing	37	_	_	start_char=502|end_char=509
39	vector	vector	NOUN	NN	Number=Sing	38	_	_	start_char=510|end_char=516
40	machines	machine	NOUN	NNS	Number=Plur	39	_	_	SpaceAfter=No|start_char=517|end_char=525
41	.	.	PUNCT	.	_	40	_	_	start_char=525|end_char=526

# text = leveraging this property of differentiability, we propose a cross-validation gradient method (cvgm) for hyperparameter optimization.
# sent_id = 2
1	leveraging	leverage	VERB	VBG	Tense=Pres|VerbForm=Part	0	_	_	start_char=527|end_char=537
2	this	this	DET	DT	Number=Sing|PronType=Dem	1	_	_	start_char=538|end_char=542
3	property	property	NOUN	NN	Number=Sing	2	_	_	start_char=543|end_char=551
4	of	of	ADP	IN	_	3	_	_	start_char=552|end_char=554
5	differentiability	differentiability	NOUN	NN	Number=Sing	4	_	_	SpaceAfter=No|start_char=555|end_char=572
6	,	,	PUNCT	,	_	5	_	_	start_char=572|end_char=573
7	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	6	_	_	start_char=574|end_char=576
8	propose	propose	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	7	_	_	start_char=577|end_char=584
9	a	a	DET	DT	Definite=Ind|PronType=Art	8	_	_	start_char=585|end_char=586
10	cross-validation	cross-validation	NOUN	NN	Number=Sing	9	_	_	start_char=587|end_char=603
11	gradient	gradient	NOUN	NN	Number=Sing	10	_	_	start_char=604|end_char=612
12	method	method	NOUN	NN	Number=Sing	11	_	_	start_char=613|end_char=619
13	(	(	PUNCT	-LRB-	_	12	_	_	SpaceAfter=No|start_char=620|end_char=621
14	cvgm	cvgm	NOUN	NN	Number=Sing	13	_	_	SpaceAfter=No|start_char=621|end_char=625
15	)	)	PUNCT	-RRB-	_	14	_	_	start_char=625|end_char=626
16	for	for	ADP	IN	_	15	_	_	start_char=627|end_char=630
17	hyperparameter	hyperparameter	NOUN	NN	Number=Sing	16	_	_	start_char=631|end_char=645
18	optimization	optimization	NOUN	NN	Number=Sing	17	_	_	SpaceAfter=No|start_char=646|end_char=658
19	.	.	PUNCT	.	_	18	_	_	start_char=658|end_char=659

# text = our method enables efficient optimization in high-dimensional hyperparameter spaces of the cross-validation risk, the best surrogate of the true generalization ability of our learning algorithm.
# sent_id = 3
1	our	our	PRON	PRP$	Case=Gen|Number=Plur|Person=1|Poss=Yes|PronType=Prs	0	_	_	start_char=660|end_char=663
2	method	method	NOUN	NN	Number=Sing	1	_	_	start_char=664|end_char=670
3	enables	enable	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	_	_	start_char=671|end_char=678
4	efficient	efficient	ADJ	JJ	Degree=Pos	3	_	_	start_char=679|end_char=688
5	optimization	optimization	NOUN	NN	Number=Sing	4	_	_	start_char=689|end_char=701
6	in	in	ADP	IN	_	5	_	_	start_char=702|end_char=704
7	high	high	ADJ	JJ	Degree=Pos	6	_	_	SpaceAfter=No|start_char=705|end_char=709
8	-	-	PUNCT	HYPH	_	7	_	_	SpaceAfter=No|start_char=709|end_char=710
9	dimensional	dimensional	ADJ	JJ	Degree=Pos	8	_	_	start_char=710|end_char=721
10	hyperparameter	hyperparameter	NOUN	NN	Number=Sing	9	_	_	start_char=722|end_char=736
11	spaces	space	NOUN	NNS	Number=Plur	10	_	_	start_char=737|end_char=743
12	of	of	ADP	IN	_	11	_	_	start_char=744|end_char=746
13	the	the	DET	DT	Definite=Def|PronType=Art	12	_	_	start_char=747|end_char=750
14	cross-validation	cross-validation	NOUN	NN	Number=Sing	13	_	_	start_char=751|end_char=767
15	risk	risk	NOUN	NN	Number=Sing	14	_	_	SpaceAfter=No|start_char=768|end_char=772
16	,	,	PUNCT	,	_	15	_	_	start_char=772|end_char=773
17	the	the	DET	DT	Definite=Def|PronType=Art	16	_	_	start_char=774|end_char=777
18	best	good	ADJ	JJS	Degree=Sup	17	_	_	start_char=778|end_char=782
19	surrogate	surrogate	NOUN	NN	Number=Sing	18	_	_	start_char=783|end_char=792
20	of	of	ADP	IN	_	19	_	_	start_char=793|end_char=795
21	the	the	DET	DT	Definite=Def|PronType=Art	20	_	_	start_char=796|end_char=799
22	true	true	ADJ	JJ	Degree=Pos	21	_	_	start_char=800|end_char=804
23	generalization	generalization	NOUN	NN	Number=Sing	22	_	_	start_char=805|end_char=819
24	ability	ability	NOUN	NN	Number=Sing	23	_	_	start_char=820|end_char=827
25	of	of	ADP	IN	_	24	_	_	start_char=828|end_char=830
26	our	our	PRON	PRP$	Case=Gen|Number=Plur|Person=1|Poss=Yes|PronType=Prs	25	_	_	start_char=831|end_char=834
27	learning	learning	NOUN	NN	Number=Sing	26	_	_	start_char=835|end_char=843
28	algorithm	algorithm	NOUN	NN	Number=Sing	27	_	_	SpaceAfter=No|start_char=844|end_char=853
29	.	.	PUNCT	.	_	28	_	_	start_char=853|end_char=854

# text = 1 nonparametric learning algorithms exist, e.g., k-nearest neighbor, but are challenging to analyze with our method.
# sent_id = 4
1	1	1	NUM	CD	NumForm=Digit|NumType=Card	0	_	_	start_char=855|end_char=856
2	nonparametric	nonparametric	ADJ	JJ	Degree=Pos	1	_	_	start_char=857|end_char=870
3	learning	learning	NOUN	NN	Number=Sing	2	_	_	start_char=871|end_char=879
4	algorithms	algorithm	NOUN	NNS	Number=Plur	3	_	_	start_char=880|end_char=890
5	exist	exist	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	4	_	_	SpaceAfter=No|start_char=891|end_char=896
6	,	,	PUNCT	,	_	5	_	_	start_char=896|end_char=897
7	e.g.	e.g.	ADV	FW	Abbr=Yes	6	_	_	SpaceAfter=No|start_char=898|end_char=902
8	,	,	PUNCT	,	_	7	_	_	start_char=902|end_char=903
9	k	k	NOUN	NN	Number=Sing	8	_	_	SpaceAfter=No|start_char=904|end_char=905
10	-	-	PUNCT	HYPH	_	9	_	_	SpaceAfter=No|start_char=905|end_char=906
11	nearest	near	ADJ	JJS	Degree=Sup	10	_	_	start_char=906|end_char=913
12	neighbor	neighbor	NOUN	NN	Number=Sing	11	_	_	SpaceAfter=No|start_char=914|end_char=922
13	,	,	PUNCT	,	_	12	_	_	start_char=922|end_char=923
14	but	but	CCONJ	CC	_	13	_	_	start_char=924|end_char=927
15	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	14	_	_	start_char=928|end_char=931
16	challenging	challenging	ADJ	JJ	Degree=Pos	15	_	_	start_char=932|end_char=943
17	to	to	PART	TO	_	16	_	_	start_char=944|end_char=946
18	analyze	analyze	VERB	VB	VerbForm=Inf	17	_	_	start_char=947|end_char=954
19	with	with	ADP	IN	_	18	_	_	start_char=955|end_char=959
20	our	our	PRON	PRP$	Case=Gen|Number=Plur|Person=1|Poss=Yes|PronType=Prs	19	_	_	start_char=960|end_char=963
21	method	method	NOUN	NN	Number=Sing	20	_	_	SpaceAfter=No|start_char=964|end_char=970
22	.	.	PUNCT	.	_	21	_	_	start_char=970|end_char=971

# text = introduction the ultimate aim of a supervised learning method is generalization, that is, achieving good prediction ability on unseen test data given only a finite set of training data.
# sent_id = 5
1	introduction	introduction	NOUN	NN	Number=Sing	0	_	_	start_char=972|end_char=984
2	the	the	DET	DT	Definite=Def|PronType=Art	1	_	_	start_char=985|end_char=988
3	ultimate	ultimate	ADJ	JJ	Degree=Pos	2	_	_	start_char=989|end_char=997
4	aim	aim	NOUN	NN	Number=Sing	3	_	_	start_char=998|end_char=1001
5	of	of	ADP	IN	_	4	_	_	start_char=1002|end_char=1004
6	a	a	DET	DT	Definite=Ind|PronType=Art	5	_	_	start_char=1005|end_char=1006
7	supervised	supervise	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	6	_	_	start_char=1007|end_char=1017
8	learning	learning	NOUN	NN	Number=Sing	7	_	_	start_char=1018|end_char=1026
9	method	method	NOUN	NN	Number=Sing	8	_	_	start_char=1027|end_char=1033
10	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	_	_	start_char=1034|end_char=1036
11	generalization	generalization	NOUN	NN	Number=Sing	10	_	_	SpaceAfter=No|start_char=1037|end_char=1051
12	,	,	PUNCT	,	_	11	_	_	start_char=1051|end_char=1052
13	that	that	PRON	DT	Number=Sing|PronType=Dem	12	_	_	start_char=1053|end_char=1057
14	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	13	_	_	SpaceAfter=No|start_char=1058|end_char=1060
15	,	,	PUNCT	,	_	14	_	_	start_char=1060|end_char=1061
16	achieving	achieve	VERB	VBG	Tense=Pres|VerbForm=Part	15	_	_	start_char=1062|end_char=1071
17	good	good	ADJ	JJ	Degree=Pos	16	_	_	start_char=1072|end_char=1076
18	prediction	prediction	NOUN	NN	Number=Sing	17	_	_	start_char=1077|end_char=1087
19	ability	ability	NOUN	NN	Number=Sing	18	_	_	start_char=1088|end_char=1095
20	on	on	ADP	IN	_	19	_	_	start_char=1096|end_char=1098
21	unseen	unseen	ADJ	JJ	Degree=Pos	20	_	_	start_char=1099|end_char=1105
22	test	test	NOUN	NN	Number=Sing	21	_	_	start_char=1106|end_char=1110
23	data	datum	NOUN	NNS	Number=Plur	22	_	_	start_char=1111|end_char=1115
24	given	give	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	23	_	_	start_char=1116|end_char=1121
25	only	only	ADV	RB	_	24	_	_	start_char=1122|end_char=1126
26	a	a	DET	DT	Definite=Ind|PronType=Art	25	_	_	start_char=1127|end_char=1128
27	finite	finite	ADJ	JJ	Degree=Pos	26	_	_	start_char=1129|end_char=1135
28	set	set	NOUN	NN	Number=Sing	27	_	_	start_char=1136|end_char=1139
29	of	of	ADP	IN	_	28	_	_	start_char=1140|end_char=1142
30	training	training	NOUN	NN	Number=Sing	29	_	_	start_char=1143|end_char=1151
31	data	datum	NOUN	NNS	Number=Plur	30	_	_	SpaceAfter=No|start_char=1152|end_char=1156
32	.	.	PUNCT	.	_	31	_	_	start_char=1156|end_char=1157

# text = the generalization capability of learning algorithms should be the primary criterion for model selection, yet an algorithm's generalization capability is a somewhat elusive quantity that is challenging to optimize for.
# sent_id = 6
1	the	the	DET	DT	Definite=Def|PronType=Art	0	_	_	start_char=1158|end_char=1161
2	generalization	generalization	NOUN	NN	Number=Sing	1	_	_	start_char=1162|end_char=1176
3	capability	capability	NOUN	NN	Number=Sing	2	_	_	start_char=1177|end_char=1187
4	of	of	ADP	IN	_	3	_	_	start_char=1188|end_char=1190
5	learning	learning	NOUN	NN	Number=Sing	4	_	_	start_char=1191|end_char=1199
6	algorithms	algorithm	NOUN	NNS	Number=Plur	5	_	_	start_char=1200|end_char=1210
7	should	should	AUX	MD	VerbForm=Fin	6	_	_	start_char=1211|end_char=1217
8	be	be	AUX	VB	VerbForm=Inf	7	_	_	start_char=1218|end_char=1220
9	the	the	DET	DT	Definite=Def|PronType=Art	8	_	_	start_char=1221|end_char=1224
10	primary	primary	ADJ	JJ	Degree=Pos	9	_	_	start_char=1225|end_char=1232
11	criterion	criterion	NOUN	NN	Number=Sing	10	_	_	start_char=1233|end_char=1242
12	for	for	ADP	IN	_	11	_	_	start_char=1243|end_char=1246
13	model	model	NOUN	NN	Number=Sing	12	_	_	start_char=1247|end_char=1252
14	selection	selection	NOUN	NN	Number=Sing	13	_	_	SpaceAfter=No|start_char=1253|end_char=1262
15	,	,	PUNCT	,	_	14	_	_	start_char=1262|end_char=1263
16	yet	yet	CCONJ	CC	_	15	_	_	start_char=1264|end_char=1267
17	an	a	DET	DT	Definite=Ind|PronType=Art	16	_	_	start_char=1268|end_char=1270
18-19	algorithm's	_	_	_	_	_	_	_	start_char=1271|end_char=1282
18	algorithm	algorithm	NOUN	NN	Number=Sing	17	_	_	start_char=1271|end_char=1280
19	's	's	PART	POS	_	18	_	_	start_char=1280|end_char=1282
20	generalization	generalization	NOUN	NN	Number=Sing	19	_	_	start_char=1283|end_char=1297
21	capability	capability	NOUN	NN	Number=Sing	20	_	_	start_char=1298|end_char=1308
22	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	21	_	_	start_char=1309|end_char=1311
23	a	a	DET	DT	Definite=Ind|PronType=Art	22	_	_	start_char=1312|end_char=1313
24	somewhat	somewhat	ADV	RB	_	23	_	_	start_char=1314|end_char=1322
25	elusive	elusive	ADJ	JJ	Degree=Pos	24	_	_	start_char=1323|end_char=1330
26	quantity	quantity	NOUN	NN	Number=Sing	25	_	_	start_char=1331|end_char=1339
27	that	that	PRON	WDT	PronType=Rel	26	_	_	start_char=1340|end_char=1344
28	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	27	_	_	start_char=1345|end_char=1347
29	challenging	challenging	ADJ	JJ	Degree=Pos	28	_	_	start_char=1348|end_char=1359
30	to	to	PART	TO	_	29	_	_	start_char=1360|end_char=1362
31	optimize	optimize	VERB	VB	VerbForm=Inf	30	_	_	start_char=1363|end_char=1371
32	for	for	ADP	IN	_	31	_	_	SpaceAfter=No|start_char=1372|end_char=1375
33	.	.	PUNCT	.	_	32	_	_	start_char=1375|end_char=1376

# text = in this paper we introduce a method to optimize directly for the closest available proxy to generalization performance: cross-validation loss.
# sent_id = 7
1	in	in	ADP	IN	_	0	_	_	start_char=1377|end_char=1379
2	this	this	DET	DT	Number=Sing|PronType=Dem	1	_	_	start_char=1380|end_char=1384
3	paper	paper	NOUN	NN	Number=Sing	2	_	_	start_char=1385|end_char=1390
4	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	3	_	_	start_char=1391|end_char=1393
5	introduce	introduce	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	4	_	_	start_char=1394|end_char=1403
6	a	a	DET	DT	Definite=Ind|PronType=Art	5	_	_	start_char=1404|end_char=1405
7	method	method	NOUN	NN	Number=Sing	6	_	_	start_char=1406|end_char=1412
8	to	to	PART	TO	_	7	_	_	start_char=1413|end_char=1415
9	optimize	optimize	VERB	VB	VerbForm=Inf	8	_	_	start_char=1416|end_char=1424
10	directly	directly	ADV	RB	_	9	_	_	start_char=1425|end_char=1433
11	for	for	ADP	IN	_	10	_	_	start_char=1434|end_char=1437
12	the	the	DET	DT	Definite=Def|PronType=Art	11	_	_	start_char=1438|end_char=1441
13	closest	close	ADJ	JJS	Degree=Sup	12	_	_	start_char=1442|end_char=1449
14	available	available	ADJ	JJ	Degree=Pos	13	_	_	start_char=1450|end_char=1459
15	proxy	proxy	NOUN	NN	Number=Sing	14	_	_	start_char=1460|end_char=1465
16	to	to	ADP	IN	_	15	_	_	start_char=1466|end_char=1468
17	generalization	generalization	NOUN	NN	Number=Sing	16	_	_	start_char=1469|end_char=1483
18	performance	performance	NOUN	NN	Number=Sing	17	_	_	SpaceAfter=No|start_char=1484|end_char=1495
19	:	:	PUNCT	:	_	18	_	_	start_char=1495|end_char=1496
20	cross-validation	cross-validation	NOUN	NN	Number=Sing	19	_	_	start_char=1497|end_char=1513
21	loss	loss	NOUN	NN	Number=Sing	20	_	_	SpaceAfter=No|start_char=1514|end_char=1518
22	.	.	PUNCT	.	_	21	_	_	start_char=1518|end_char=1519

# text = we begin with a formal description of the overall goal in predictive learning, which also serves as an introduction to notation used throughout the paper.
# sent_id = 8
1	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	0	_	_	start_char=1520|end_char=1522
2	begin	begin	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	1	_	_	start_char=1523|end_char=1528
3	with	with	ADP	IN	_	2	_	_	start_char=1529|end_char=1533
4	a	a	DET	DT	Definite=Ind|PronType=Art	3	_	_	start_char=1534|end_char=1535
5	formal	formal	ADJ	JJ	Degree=Pos	4	_	_	start_char=1536|end_char=1542
6	description	description	NOUN	NN	Number=Sing	5	_	_	start_char=1543|end_char=1554
7	of	of	ADP	IN	_	6	_	_	start_char=1555|end_char=1557
8	the	the	DET	DT	Definite=Def|PronType=Art	7	_	_	start_char=1558|end_char=1561
9	overall	overall	ADJ	JJ	Degree=Pos	8	_	_	start_char=1562|end_char=1569
10	goal	goal	NOUN	NN	Number=Sing	9	_	_	start_char=1570|end_char=1574
11	in	in	ADP	IN	_	10	_	_	start_char=1575|end_char=1577
12	predictive	predictive	ADJ	JJ	Degree=Pos	11	_	_	start_char=1578|end_char=1588
13	learning	learning	NOUN	NN	Number=Sing	12	_	_	SpaceAfter=No|start_char=1589|end_char=1597
14	,	,	PUNCT	,	_	13	_	_	start_char=1597|end_char=1598
15	which	which	PRON	WDT	PronType=Rel	14	_	_	start_char=1599|end_char=1604
16	also	also	ADV	RB	_	15	_	_	start_char=1605|end_char=1609
17	serves	serve	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	16	_	_	start_char=1610|end_char=1616
18	as	as	ADP	IN	_	17	_	_	start_char=1617|end_char=1619
19	an	a	DET	DT	Definite=Ind|PronType=Art	18	_	_	start_char=1620|end_char=1622
20	introduction	introduction	NOUN	NN	Number=Sing	19	_	_	start_char=1623|end_char=1635
21	to	to	ADP	IN	_	20	_	_	start_char=1636|end_char=1638
22	notation	notation	NOUN	NN	Number=Sing	21	_	_	start_char=1639|end_char=1647
23	used	use	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	22	_	_	start_char=1648|end_char=1652
24	throughout	throughout	ADP	IN	_	23	_	_	start_char=1653|end_char=1663
25	the	the	DET	DT	Definite=Def|PronType=Art	24	_	_	start_char=1664|end_char=1667
26	paper	paper	NOUN	NN	Number=Sing	25	_	_	SpaceAfter=No|start_char=1668|end_char=1673
27	.	.	PUNCT	.	_	26	_	_	start_char=1673|end_char=1674

# text = the task of predictive learning involves deriving a prediction function from a finite set of training data.
# sent_id = 9
1	the	the	DET	DT	Definite=Def|PronType=Art	0	_	_	start_char=1675|end_char=1678
2	task	task	NOUN	NN	Number=Sing	1	_	_	start_char=1679|end_char=1683
3	of	of	ADP	IN	_	2	_	_	start_char=1684|end_char=1686
4	predictive	predictive	ADJ	JJ	Degree=Pos	3	_	_	start_char=1687|end_char=1697
5	learning	learning	NOUN	NN	Number=Sing	4	_	_	start_char=1698|end_char=1706
6	involves	involve	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	_	_	start_char=1707|end_char=1715
7	deriving	derive	VERB	VBG	VerbForm=Ger	6	_	_	start_char=1716|end_char=1724
8	a	a	DET	DT	Definite=Ind|PronType=Art	7	_	_	start_char=1725|end_char=1726
9	prediction	prediction	NOUN	NN	Number=Sing	8	_	_	start_char=1727|end_char=1737
10	function	function	NOUN	NN	Number=Sing	9	_	_	start_char=1738|end_char=1746
11	from	from	ADP	IN	_	10	_	_	start_char=1747|end_char=1751
12	a	a	DET	DT	Definite=Ind|PronType=Art	11	_	_	start_char=1752|end_char=1753
13	finite	finite	ADJ	JJ	Degree=Pos	12	_	_	start_char=1754|end_char=1760
14	set	set	NOUN	NN	Number=Sing	13	_	_	start_char=1761|end_char=1764
15	of	of	ADP	IN	_	14	_	_	start_char=1765|end_char=1767
16	training	training	NOUN	NN	Number=Sing	15	_	_	start_char=1768|end_char=1776
17	data	datum	NOUN	NNS	Number=Plur	16	_	_	SpaceAfter=No|start_char=1777|end_char=1781
18	.	.	PUNCT	.	_	17	_	_	start_char=1781|end_char=1782

# text = more formally, suppose that (x, y) ∈ x × y have some joint probability distribution.
# sent_id = 10
1	more	more	ADV	RBR	Degree=Cmp	0	_	_	start_char=1783|end_char=1787
2	formally	formally	ADV	RB	_	1	_	_	SpaceAfter=No|start_char=1788|end_char=1796
3	,	,	PUNCT	,	_	2	_	_	start_char=1796|end_char=1797
4	suppose	suppose	VERB	VB	Mood=Imp|VerbForm=Fin	3	_	_	start_char=1798|end_char=1805
5	that	that	SCONJ	IN	_	4	_	_	start_char=1806|end_char=1810
6	(	(	PUNCT	-LRB-	_	5	_	_	SpaceAfter=No|start_char=1811|end_char=1812
7	x	x	NOUN	NN	Number=Sing	6	_	_	SpaceAfter=No|start_char=1812|end_char=1813
8	,	,	PUNCT	,	_	7	_	_	start_char=1813|end_char=1814
9	y	y	X	FW	_	8	_	_	SpaceAfter=No|start_char=1815|end_char=1816
10	)	)	PUNCT	-RRB-	_	9	_	_	start_char=1816|end_char=1817
11	∈	∈	NOUN	NN	Number=Sing	10	_	_	start_char=1818|end_char=1819
12	x	x	NOUN	NN	Number=Sing	11	_	_	start_char=1820|end_char=1821
13	×	×	NOUN	NN	Number=Sing	12	_	_	start_char=1822|end_char=1823
14	y	y	NOUN	NN	Number=Sing	13	_	_	start_char=1824|end_char=1825
15	have	have	VERB	VB	Mood=Imp|VerbForm=Fin	14	_	_	start_char=1826|end_char=1830
16	some	some	DET	DT	PronType=Ind	15	_	_	start_char=1831|end_char=1835
17	joint	joint	ADJ	JJ	Degree=Pos	16	_	_	start_char=1836|end_char=1841
18	probability	probability	NOUN	NN	Number=Sing	17	_	_	start_char=1842|end_char=1853
19	distribution	distribution	NOUN	NN	Number=Sing	18	_	_	SpaceAfter=No|start_char=1854|end_char=1866
20	.	.	PUNCT	.	_	19	_	_	start_char=1866|end_char=1867

# text = we have access to a finite dataset of n training examples z i ∈ z = x × y drawn i.i.d. from the joint distribution, denoted s = {z 1 , z 2 , . . . , z n }. we are given (or specify ourselves) a cost function c(ŷ, y) : y × y → r + that quantifies the displeasure incurred when ŷ is predicted instead of y. denoting the function space from input to outputs as f = y x , we define the loss of a function on a training example z = (x, y) as l(f, z) = c(f (x), y).
# sent_id = 11
1	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	0	_	_	start_char=1868|end_char=1870
2	have	have	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	1	_	_	start_char=1871|end_char=1875
3	access	access	NOUN	NN	Number=Sing	2	_	_	start_char=1876|end_char=1882
4	to	to	ADP	IN	_	3	_	_	start_char=1883|end_char=1885
5	a	a	DET	DT	Definite=Ind|PronType=Art	4	_	_	start_char=1886|end_char=1887
6	finite	finite	ADJ	JJ	Degree=Pos	5	_	_	start_char=1888|end_char=1894
7	dataset	dataset	NOUN	NN	Number=Sing	6	_	_	start_char=1895|end_char=1902
8	of	of	ADP	IN	_	7	_	_	start_char=1903|end_char=1905
9	n	n	NOUN	NN	Number=Sing	8	_	_	start_char=1906|end_char=1907
10	training	training	NOUN	NN	Number=Sing	9	_	_	start_char=1908|end_char=1916
11	examples	example	NOUN	NNS	Number=Plur	10	_	_	start_char=1917|end_char=1925
12	z	z	X	FW	_	11	_	_	start_char=1926|end_char=1927
13	i	i	NOUN	NN	Number=Sing	12	_	_	start_char=1928|end_char=1929
14	∈	∈	NOUN	NN	Number=Sing	13	_	_	start_char=1930|end_char=1931
15	z	z	NOUN	NN	Number=Sing	14	_	_	start_char=1932|end_char=1933
16	=	=	SYM	SYM	_	15	_	_	start_char=1934|end_char=1935
17	x	x	NOUN	NN	Number=Sing	16	_	_	start_char=1936|end_char=1937
18	×	×	X	FW	_	17	_	_	start_char=1938|end_char=1939
19	y	y	X	FW	_	18	_	_	start_char=1940|end_char=1941
20	drawn	draw	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	19	_	_	start_char=1942|end_char=1947
21	i.i.d.	i.i.d.	NOUN	NN	Number=Sing	20	_	_	start_char=1948|end_char=1954
22	from	from	ADP	IN	_	21	_	_	start_char=1955|end_char=1959
23	the	the	DET	DT	Definite=Def|PronType=Art	22	_	_	start_char=1960|end_char=1963
24	joint	joint	ADJ	JJ	Degree=Pos	23	_	_	start_char=1964|end_char=1969
25	distribution	distribution	NOUN	NN	Number=Sing	24	_	_	SpaceAfter=No|start_char=1970|end_char=1982
26	,	,	PUNCT	,	_	25	_	_	start_char=1982|end_char=1983
27	denoted	denote	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	26	_	_	start_char=1984|end_char=1991
28	s	s	NOUN	NN	Number=Sing	27	_	_	start_char=1992|end_char=1993
29	=	=	SYM	SYM	_	28	_	_	start_char=1994|end_char=1995
30	{	{	SYM	SYM	_	29	_	_	SpaceAfter=No|start_char=1996|end_char=1997
31	z	z	NOUN	NN	Number=Sing	30	_	_	start_char=1997|end_char=1998
32	1	1	NUM	CD	NumForm=Digit|NumType=Card	31	_	_	start_char=1999|end_char=2000
33	,	,	PUNCT	,	_	32	_	_	start_char=2001|end_char=2002
34	z	z	NOUN	NN	Number=Sing	33	_	_	start_char=2003|end_char=2004
35	2	2	NUM	CD	NumForm=Digit|NumType=Card	34	_	_	start_char=2005|end_char=2006
36	,	,	PUNCT	,	_	35	_	_	start_char=2007|end_char=2008
37	.	.	PUNCT	.	_	36	_	_	start_char=2009|end_char=2010
38	.	.	PUNCT	.	_	37	_	_	start_char=2011|end_char=2012
39	.	.	PUNCT	.	_	38	_	_	start_char=2013|end_char=2014
40	,	,	PUNCT	,	_	39	_	_	start_char=2015|end_char=2016
41	z	z	NOUN	NN	Number=Sing	40	_	_	start_char=2017|end_char=2018
42	n	n	NOUN	NN	Number=Sing	41	_	_	start_char=2019|end_char=2020
43	}.	}.	SYM	SYM	_	42	_	_	start_char=2021|end_char=2023
44	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	43	_	_	start_char=2024|end_char=2026
45	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	44	_	_	start_char=2027|end_char=2030
46	given	give	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	45	_	_	start_char=2031|end_char=2036
47	(	(	PUNCT	-LRB-	_	46	_	_	SpaceAfter=No|start_char=2037|end_char=2038
48	or	or	CCONJ	CC	_	47	_	_	start_char=2038|end_char=2040
49	specify	specify	VERB	VB	VerbForm=Inf	48	_	_	start_char=2041|end_char=2048
50	ourselves	ourselves	PRON	PRP	Case=Acc|Number=Plur|Person=1|PronType=Prs|Reflex=Yes	49	_	_	SpaceAfter=No|start_char=2049|end_char=2058
51	)	)	PUNCT	-RRB-	_	50	_	_	start_char=2058|end_char=2059
52	a	a	DET	DT	Definite=Ind|PronType=Art	51	_	_	start_char=2060|end_char=2061
53	cost	cost	NOUN	NN	Number=Sing	52	_	_	start_char=2062|end_char=2066
54	function	function	NOUN	NN	Number=Sing	53	_	_	start_char=2067|end_char=2075
55	c(ŷ	c(ŷ	NOUN	NN	Number=Sing	54	_	_	SpaceAfter=No|start_char=2076|end_char=2079
56	,	,	PUNCT	,	_	55	_	_	start_char=2079|end_char=2080
57	y	y	NOUN	NN	Number=Sing	56	_	_	SpaceAfter=No|start_char=2081|end_char=2082
58	)	)	PUNCT	-RRB-	_	57	_	_	start_char=2082|end_char=2083
59	:	:	PUNCT	:	_	58	_	_	start_char=2084|end_char=2085
60	y	y	X	FW	_	59	_	_	start_char=2086|end_char=2087
61	×	×	X	FW	_	60	_	_	start_char=2088|end_char=2089
62	y	y	X	FW	_	61	_	_	start_char=2090|end_char=2091
63	→	→	SYM	SYM	_	62	_	_	start_char=2092|end_char=2093
64	r	be	X	FW	_	63	_	_	start_char=2094|end_char=2095
65	+	+	SYM	SYM	_	64	_	_	start_char=2096|end_char=2097
66	that	that	PRON	WDT	PronType=Rel	65	_	_	start_char=2098|end_char=2102
67	quantifies	quantify	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	66	_	_	start_char=2103|end_char=2113
68	the	the	DET	DT	Definite=Def|PronType=Art	67	_	_	start_char=2114|end_char=2117
69	displeasure	displeasure	NOUN	NN	Number=Sing	68	_	_	start_char=2118|end_char=2129
70	incurred	incur	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	69	_	_	start_char=2130|end_char=2138
71	when	when	ADV	WRB	PronType=Int	70	_	_	start_char=2139|end_char=2143
72	ŷ	ŷ	PRON	PRP	Case=Nom|Number=Sing|Person=2|PronType=Prs	71	_	_	start_char=2144|end_char=2145
73	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	72	_	_	start_char=2146|end_char=2148
74	predicted	predict	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	73	_	_	start_char=2149|end_char=2158
75	instead	instead	ADV	RB	_	74	_	_	start_char=2159|end_char=2166
76	of	of	ADP	IN	_	75	_	_	start_char=2167|end_char=2169
77	y.	y.	NOUN	NN	Number=Sing	76	_	_	start_char=2170|end_char=2172
78	denoting	denot	VERB	VBG	Tense=Pres|VerbForm=Part	77	_	_	start_char=2173|end_char=2181
79	the	the	DET	DT	Definite=Def|PronType=Art	78	_	_	start_char=2182|end_char=2185
80	function	function	NOUN	NN	Number=Sing	79	_	_	start_char=2186|end_char=2194
81	space	space	NOUN	NN	Number=Sing	80	_	_	start_char=2195|end_char=2200
82	from	from	ADP	IN	_	81	_	_	start_char=2201|end_char=2205
83	input	input	NOUN	NN	Number=Sing	82	_	_	start_char=2206|end_char=2211
84	to	to	ADP	IN	_	83	_	_	start_char=2212|end_char=2214
85	outputs	output	NOUN	NNS	Number=Plur	84	_	_	start_char=2215|end_char=2222
86	as	as	ADP	IN	_	85	_	_	start_char=2223|end_char=2225
87	f	f	NOUN	NN	Number=Sing	86	_	_	start_char=2226|end_char=2227
88	=	=	SYM	SYM	_	87	_	_	start_char=2228|end_char=2229
89	y	y	NOUN	NN	Number=Sing	88	_	_	start_char=2230|end_char=2231
90	x	x	NOUN	NN	Number=Sing	89	_	_	start_char=2232|end_char=2233
91	,	,	PUNCT	,	_	90	_	_	start_char=2234|end_char=2235
92	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	91	_	_	start_char=2236|end_char=2238
93	define	define	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	92	_	_	start_char=2239|end_char=2245
94	the	the	DET	DT	Definite=Def|PronType=Art	93	_	_	start_char=2246|end_char=2249
95	loss	loss	NOUN	NN	Number=Sing	94	_	_	start_char=2250|end_char=2254
96	of	of	ADP	IN	_	95	_	_	start_char=2255|end_char=2257
97	a	a	DET	DT	Definite=Ind|PronType=Art	96	_	_	start_char=2258|end_char=2259
98	function	function	NOUN	NN	Number=Sing	97	_	_	start_char=2260|end_char=2268
99	on	on	ADP	IN	_	98	_	_	start_char=2269|end_char=2271
100	a	a	DET	DT	Definite=Ind|PronType=Art	99	_	_	start_char=2272|end_char=2273
101	training	training	NOUN	NN	Number=Sing	100	_	_	start_char=2274|end_char=2282
102	example	example	NOUN	NN	Number=Sing	101	_	_	start_char=2283|end_char=2290
103	z	z	NOUN	NN	Number=Sing	102	_	_	start_char=2291|end_char=2292
104	=	=	SYM	SYM	_	103	_	_	start_char=2293|end_char=2294
105	(	(	PUNCT	-LRB-	_	104	_	_	SpaceAfter=No|start_char=2295|end_char=2296
106	x	x	NOUN	NN	Number=Sing	105	_	_	SpaceAfter=No|start_char=2296|end_char=2297
107	,	,	PUNCT	,	_	106	_	_	start_char=2297|end_char=2298
108	y	y	NOUN	NN	Number=Sing	107	_	_	SpaceAfter=No|start_char=2299|end_char=2300
109	)	)	PUNCT	-RRB-	_	108	_	_	start_char=2300|end_char=2301
110	as	as	ADP	IN	_	109	_	_	start_char=2302|end_char=2304
111	l	l	X	FW	_	110	_	_	SpaceAfter=No|start_char=2305|end_char=2306
112	(	(	PUNCT	-LRB-	_	111	_	_	SpaceAfter=No|start_char=2306|end_char=2307
113	f	f	NOUN	NN	Number=Sing	112	_	_	SpaceAfter=No|start_char=2307|end_char=2308
114	,	,	PUNCT	,	_	113	_	_	start_char=2308|end_char=2309
115	z	z	NOUN	NN	Number=Sing	114	_	_	SpaceAfter=No|start_char=2310|end_char=2311
116	)	)	PUNCT	-RRB-	_	115	_	_	start_char=2311|end_char=2312
117	=	=	SYM	SYM	_	116	_	_	start_char=2313|end_char=2314
118	c(	c(	NOUN	NN	Number=Sing	117	_	_	SpaceAfter=No|start_char=2315|end_char=2317
119	f	f	NOUN	NN	Number=Sing	118	_	_	start_char=2317|end_char=2318
120	(	(	PUNCT	-LRB-	_	119	_	_	SpaceAfter=No|start_char=2319|end_char=2320
121	x	x	NOUN	NN	Number=Sing	120	_	_	SpaceAfter=No|start_char=2320|end_char=2321
122	)	)	PUNCT	-RRB-	_	121	_	_	SpaceAfter=No|start_char=2321|end_char=2322
123	,	,	PUNCT	,	_	122	_	_	start_char=2322|end_char=2323
124	y	y	NOUN	NN	Number=Sing	123	_	_	SpaceAfter=No|start_char=2324|end_char=2325
125	)	)	PUNCT	-RRB-	_	124	_	_	SpaceAfter=No|start_char=2325|end_char=2326
126	.	.	PUNCT	.	_	125	_	_	start_char=2326|end_char=2327

# text = then, given a prediction function f ∈ f, we define the population risk as e z [l(f, z)], and the target function f * ∈ f as the function that minimizes the population risk.
# sent_id = 12
1	then	then	ADV	RB	PronType=Dem	0	_	_	SpaceAfter=No|start_char=2328|end_char=2332
2	,	,	PUNCT	,	_	1	_	_	start_char=2332|end_char=2333
3	given	give	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	2	_	_	start_char=2334|end_char=2339
4	a	a	DET	DT	Definite=Ind|PronType=Art	3	_	_	start_char=2340|end_char=2341
5	prediction	prediction	NOUN	NN	Number=Sing	4	_	_	start_char=2342|end_char=2352
6	function	function	NOUN	NN	Number=Sing	5	_	_	start_char=2353|end_char=2361
7	f	for	ADP	IN	_	6	_	_	start_char=2362|end_char=2363
8	∈	∈	PROPN	NNP	Number=Sing	7	_	_	start_char=2364|end_char=2365
9	f	f	NOUN	NN	Number=Sing	8	_	_	SpaceAfter=No|start_char=2366|end_char=2367
10	,	,	PUNCT	,	_	9	_	_	start_char=2367|end_char=2368
11	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	10	_	_	start_char=2369|end_char=2371
12	define	define	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	11	_	_	start_char=2372|end_char=2378
13	the	the	DET	DT	Definite=Def|PronType=Art	12	_	_	start_char=2379|end_char=2382
14	population	population	NOUN	NN	Number=Sing	13	_	_	start_char=2383|end_char=2393
15	risk	risk	NOUN	NN	Number=Sing	14	_	_	start_char=2394|end_char=2398
16	as	as	ADP	IN	_	15	_	_	start_char=2399|end_char=2401
17	e	e	X	FW	_	16	_	_	start_char=2402|end_char=2403
18	z	z	NOUN	NN	Number=Sing	17	_	_	start_char=2404|end_char=2405
19	[	[	PUNCT	-LRB-	_	18	_	_	SpaceAfter=No|start_char=2406|end_char=2407
20	l	l	PROPN	NNP	Number=Sing	19	_	_	SpaceAfter=No|start_char=2407|end_char=2408
21	(	(	PUNCT	-LRB-	_	20	_	_	SpaceAfter=No|start_char=2408|end_char=2409
22	f	f	NOUN	NN	Number=Sing	21	_	_	SpaceAfter=No|start_char=2409|end_char=2410
23	,	,	PUNCT	,	_	22	_	_	start_char=2410|end_char=2411
24	z	z	PROPN	NNP	Number=Sing	23	_	_	SpaceAfter=No|start_char=2412|end_char=2413
25	)	)	PUNCT	-RRB-	_	24	_	_	SpaceAfter=No|start_char=2413|end_char=2414
26	]	]	PUNCT	-RRB-	_	25	_	_	SpaceAfter=No|start_char=2414|end_char=2415
27	,	,	PUNCT	,	_	26	_	_	start_char=2415|end_char=2416
28	and	and	CCONJ	CC	_	27	_	_	start_char=2417|end_char=2420
29	the	the	DET	DT	Definite=Def|PronType=Art	28	_	_	start_char=2421|end_char=2424
30	target	target	NOUN	NN	Number=Sing	29	_	_	start_char=2425|end_char=2431
31	function	function	NOUN	NN	Number=Sing	30	_	_	start_char=2432|end_char=2440
32	f	f	NOUN	NN	Number=Sing	31	_	_	start_char=2441|end_char=2442
33	*	*	PUNCT	NFP	_	32	_	_	start_char=2443|end_char=2444
34	∈	∈	NOUN	NN	Number=Sing	33	_	_	start_char=2445|end_char=2446
35	f	f	NOUN	NN	Number=Sing	34	_	_	start_char=2447|end_char=2448
36	as	as	ADP	IN	_	35	_	_	start_char=2449|end_char=2451
37	the	the	DET	DT	Definite=Def|PronType=Art	36	_	_	start_char=2452|end_char=2455
38	function	function	NOUN	NN	Number=Sing	37	_	_	start_char=2456|end_char=2464
39	that	that	PRON	WDT	PronType=Rel	38	_	_	start_char=2465|end_char=2469
40	minimizes	minimize	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	39	_	_	start_char=2470|end_char=2479
41	the	the	DET	DT	Definite=Def|PronType=Art	40	_	_	start_char=2480|end_char=2483
42	population	population	NOUN	NN	Number=Sing	41	_	_	start_char=2484|end_char=2494
43	risk	risk	NOUN	NN	Number=Sing	42	_	_	SpaceAfter=No|start_char=2495|end_char=2499
44	.	.	PUNCT	.	_	43	_	_	start_char=2499|end_char=2500

# text = the population risk represents how much loss we incur, on average, on the full joint distribution, and is the quantity we would like as small as possible.
# sent_id = 13
1	the	the	DET	DT	Definite=Def|PronType=Art	0	_	_	start_char=2501|end_char=2504
2	population	population	NOUN	NN	Number=Sing	1	_	_	start_char=2505|end_char=2515
3	risk	risk	NOUN	NN	Number=Sing	2	_	_	start_char=2516|end_char=2520
4	represents	represent	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	_	_	start_char=2521|end_char=2531
5	how	how	ADV	WRB	PronType=Int	4	_	_	start_char=2532|end_char=2535
6	much	much	ADJ	JJ	Degree=Pos	5	_	_	start_char=2536|end_char=2540
7	loss	loss	NOUN	NN	Number=Sing	6	_	_	start_char=2541|end_char=2545
8	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	7	_	_	start_char=2546|end_char=2548
9	incur	incur	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	8	_	_	SpaceAfter=No|start_char=2549|end_char=2554
10	,	,	PUNCT	,	_	9	_	_	start_char=2554|end_char=2555
11	on	on	ADP	IN	_	10	_	_	start_char=2556|end_char=2558
12	average	average	NOUN	NN	Number=Sing	11	_	_	SpaceAfter=No|start_char=2559|end_char=2566
13	,	,	PUNCT	,	_	12	_	_	start_char=2566|end_char=2567
14	on	on	ADP	IN	_	13	_	_	start_char=2568|end_char=2570
15	the	the	DET	DT	Definite=Def|PronType=Art	14	_	_	start_char=2571|end_char=2574
16	full	full	ADJ	JJ	Degree=Pos	15	_	_	start_char=2575|end_char=2579
17	joint	joint	ADJ	JJ	Degree=Pos	16	_	_	start_char=2580|end_char=2585
18	distribution	distribution	NOUN	NN	Number=Sing	17	_	_	SpaceAfter=No|start_char=2586|end_char=2598
19	,	,	PUNCT	,	_	18	_	_	start_char=2598|end_char=2599
20	and	and	CCONJ	CC	_	19	_	_	start_char=2600|end_char=2603
21	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	20	_	_	start_char=2604|end_char=2606
22	the	the	DET	DT	Definite=Def|PronType=Art	21	_	_	start_char=2607|end_char=2610
23	quantity	quantity	NOUN	NN	Number=Sing	22	_	_	start_char=2611|end_char=2619
24	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	23	_	_	start_char=2620|end_char=2622
25	would	would	AUX	MD	VerbForm=Fin	24	_	_	start_char=2623|end_char=2628
26	like	like	VERB	VB	VerbForm=Inf	25	_	_	start_char=2629|end_char=2633
27	as	as	ADV	RB	_	26	_	_	start_char=2634|end_char=2636
28	small	small	ADJ	JJ	Degree=Pos	27	_	_	start_char=2637|end_char=2642
29	as	as	SCONJ	IN	_	28	_	_	start_char=2643|end_char=2645
30	possible	possible	ADJ	JJ	Degree=Pos	29	_	_	SpaceAfter=No|start_char=2646|end_char=2654
31	.	.	PUNCT	.	_	30	_	_	start_char=2654|end_char=2655

# text = in this paper, we consider parametric prediction functions, that is, f is parameterized by a vector θ, denoted f (x; θ) 1 . for example, in linear regression, x = r n , y = r, c(ŷ, y) = (ŷ -y) 2 , and f is the set of all affine functions parameterized as f (x; θ) = θ t x + θ 0 . we are then tasked with designing a learning algorithm a : z n → f, which is a function that maps a dataset s to a prediction function.
# sent_id = 14
1	in	in	ADP	IN	_	0	_	_	start_char=2656|end_char=2658
2	this	this	DET	DT	Number=Sing|PronType=Dem	1	_	_	start_char=2659|end_char=2663
3	paper	paper	NOUN	NN	Number=Sing	2	_	_	SpaceAfter=No|start_char=2664|end_char=2669
4	,	,	PUNCT	,	_	3	_	_	start_char=2669|end_char=2670
5	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	4	_	_	start_char=2671|end_char=2673
6	consider	consider	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	5	_	_	start_char=2674|end_char=2682
7	parametric	parametric	ADJ	JJ	Degree=Pos	6	_	_	start_char=2683|end_char=2693
8	prediction	prediction	NOUN	NN	Number=Sing	7	_	_	start_char=2694|end_char=2704
9	functions	function	NOUN	NNS	Number=Plur	8	_	_	SpaceAfter=No|start_char=2705|end_char=2714
10	,	,	PUNCT	,	_	9	_	_	start_char=2714|end_char=2715
11	that	that	PRON	DT	Number=Sing|PronType=Dem	10	_	_	start_char=2716|end_char=2720
12	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	11	_	_	SpaceAfter=No|start_char=2721|end_char=2723
13	,	,	PUNCT	,	_	12	_	_	start_char=2723|end_char=2724
14	f	for	PROPN	NNP	Number=Sing	13	_	_	start_char=2725|end_char=2726
15	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	_	_	start_char=2727|end_char=2729
16	parameterized	parameterize	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	15	_	_	start_char=2730|end_char=2743
17	by	by	ADP	IN	_	16	_	_	start_char=2744|end_char=2746
18	a	a	DET	DT	Definite=Ind|PronType=Art	17	_	_	start_char=2747|end_char=2748
19	vector	vector	NOUN	NN	Number=Sing	18	_	_	start_char=2749|end_char=2755
20	θ	θ	NOUN	NN	Number=Sing	19	_	_	SpaceAfter=No|start_char=2756|end_char=2757
21	,	,	PUNCT	,	_	20	_	_	start_char=2757|end_char=2758
22	denoted	denote	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	21	_	_	start_char=2759|end_char=2766
23	f	f	NOUN	NN	Number=Sing	22	_	_	start_char=2767|end_char=2768
24	(	(	PUNCT	-LRB-	_	23	_	_	SpaceAfter=No|start_char=2769|end_char=2770
25	x	x	NOUN	NN	Number=Sing	24	_	_	SpaceAfter=No|start_char=2770|end_char=2771
26	;	;	PUNCT	:	_	25	_	_	start_char=2771|end_char=2772
27	θ	θ	NOUN	NN	Number=Sing	26	_	_	SpaceAfter=No|start_char=2773|end_char=2774
28	)	)	PUNCT	-RRB-	_	27	_	_	start_char=2774|end_char=2775
29	1	1	NUM	LS	NumForm=Digit|NumType=Card	28	_	_	start_char=2776|end_char=2777
30	.	.	PUNCT	.	_	29	_	_	start_char=2778|end_char=2779
31	for	for	ADP	IN	_	30	_	_	start_char=2780|end_char=2783
32	example	example	NOUN	NN	Number=Sing	31	_	_	SpaceAfter=No|start_char=2784|end_char=2791
33	,	,	PUNCT	,	_	32	_	_	start_char=2791|end_char=2792
34	in	in	ADP	IN	_	33	_	_	start_char=2793|end_char=2795
35	linear	linear	ADJ	JJ	Degree=Pos	34	_	_	start_char=2796|end_char=2802
36	regression	regression	NOUN	NN	Number=Sing	35	_	_	SpaceAfter=No|start_char=2803|end_char=2813
37	,	,	PUNCT	,	_	36	_	_	start_char=2813|end_char=2814
38	x	x	NOUN	NN	Number=Sing	37	_	_	start_char=2815|end_char=2816
39	=	=	SYM	SYM	_	38	_	_	start_char=2817|end_char=2818
40	r	be	X	FW	_	39	_	_	start_char=2819|end_char=2820
41	n	and	X	FW	_	40	_	_	start_char=2821|end_char=2822
42	,	,	PUNCT	,	_	41	_	_	start_char=2823|end_char=2824
43	y	y	X	FW	Foreign=Yes	42	_	_	start_char=2825|end_char=2826
44	=	=	SYM	SYM	_	43	_	_	start_char=2827|end_char=2828
45	r	be	X	FW	_	44	_	_	SpaceAfter=No|start_char=2829|end_char=2830
46	,	,	PUNCT	,	_	45	_	_	start_char=2830|end_char=2831
47	c(ŷ	c(ŷ	X	FW	_	46	_	_	SpaceAfter=No|start_char=2832|end_char=2835
48	,	,	PUNCT	,	_	47	_	_	start_char=2835|end_char=2836
49	y	y	X	FW	_	48	_	_	SpaceAfter=No|start_char=2837|end_char=2838
50	)	)	PUNCT	-RRB-	_	49	_	_	start_char=2838|end_char=2839
51	=	=	SYM	SYM	_	50	_	_	start_char=2840|end_char=2841
52	(	(	PUNCT	-LRB-	_	51	_	_	SpaceAfter=No|start_char=2842|end_char=2843
53	ŷ	ŷ	X	FW	_	52	_	_	start_char=2843|end_char=2844
54	-y	-y	NOUN	NN	Number=Sing	53	_	_	SpaceAfter=No|start_char=2845|end_char=2847
55	)	)	PUNCT	-RRB-	_	54	_	_	start_char=2847|end_char=2848
56	2	2	NUM	CD	NumForm=Digit|NumType=Card	55	_	_	start_char=2849|end_char=2850
57	,	,	PUNCT	,	_	56	_	_	start_char=2851|end_char=2852
58	and	and	CCONJ	CC	_	57	_	_	start_char=2853|end_char=2856
59	f	f	NOUN	NN	Number=Sing	58	_	_	start_char=2857|end_char=2858
60	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	59	_	_	start_char=2859|end_char=2861
61	the	the	DET	DT	Definite=Def|PronType=Art	60	_	_	start_char=2862|end_char=2865
62	set	set	NOUN	NN	Number=Sing	61	_	_	start_char=2866|end_char=2869
63	of	of	ADP	IN	_	62	_	_	start_char=2870|end_char=2872
64	all	all	DET	DT	PronType=Tot	63	_	_	start_char=2873|end_char=2876
65	affine	affine	ADJ	JJ	Degree=Pos	64	_	_	start_char=2877|end_char=2883
66	functions	function	NOUN	NNS	Number=Plur	65	_	_	start_char=2884|end_char=2893
67	parameterized	parameterize	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	66	_	_	start_char=2894|end_char=2907
68	as	as	ADP	IN	_	67	_	_	start_char=2908|end_char=2910
69	f	f	NOUN	NN	Number=Sing	68	_	_	start_char=2911|end_char=2912
70	(	(	PUNCT	-LRB-	_	69	_	_	SpaceAfter=No|start_char=2913|end_char=2914
71	x	x	NOUN	NN	Number=Sing	70	_	_	SpaceAfter=No|start_char=2914|end_char=2915
72	;	;	PUNCT	:	_	71	_	_	start_char=2915|end_char=2916
73	θ	θ	NOUN	NN	Number=Sing	72	_	_	SpaceAfter=No|start_char=2917|end_char=2918
74	)	)	PUNCT	-RRB-	_	73	_	_	start_char=2918|end_char=2919
75	=	=	SYM	SYM	_	74	_	_	start_char=2920|end_char=2921
76	θ	θ	NOUN	NN	Number=Sing	75	_	_	start_char=2922|end_char=2923
77	t	t	NOUN	NN	Number=Sing	76	_	_	start_char=2924|end_char=2925
78	x	x	NOUN	NN	Number=Sing	77	_	_	start_char=2926|end_char=2927
79	+	+	SYM	SYM	_	78	_	_	start_char=2928|end_char=2929
80	θ	θ	NOUN	NN	Number=Sing	79	_	_	start_char=2930|end_char=2931
81	0	0	NUM	CD	NumForm=Digit|NumType=Card	80	_	_	start_char=2932|end_char=2933
82	.	.	PUNCT	.	_	81	_	_	start_char=2934|end_char=2935
83	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	82	_	_	start_char=2936|end_char=2938
84	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	83	_	_	start_char=2939|end_char=2942
85	then	then	ADV	RB	PronType=Dem	84	_	_	start_char=2943|end_char=2947
86	tasked	task	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	85	_	_	start_char=2948|end_char=2954
87	with	with	SCONJ	IN	_	86	_	_	start_char=2955|end_char=2959
88	designing	design	VERB	VBG	Tense=Pres|VerbForm=Part	87	_	_	start_char=2960|end_char=2969
89	a	a	DET	DT	Definite=Ind|PronType=Art	88	_	_	start_char=2970|end_char=2971
90	learning	learning	NOUN	NN	Number=Sing	89	_	_	start_char=2972|end_char=2980
91	algorithm	algorithm	NOUN	NN	Number=Sing	90	_	_	start_char=2981|end_char=2990
92	a	of	ADP	IN	_	91	_	_	start_char=2991|end_char=2992
93	:	:	PUNCT	:	_	92	_	_	start_char=2993|end_char=2994
94	z	z	NOUN	NN	Number=Sing	93	_	_	start_char=2995|end_char=2996
95	n	n	NOUN	NN	Number=Sing	94	_	_	start_char=2997|end_char=2998
96	→	→	SYM	SYM	_	95	_	_	start_char=2999|end_char=3000
97	f	f	NOUN	NN	Number=Sing	96	_	_	SpaceAfter=No|start_char=3001|end_char=3002
98	,	,	PUNCT	,	_	97	_	_	start_char=3002|end_char=3003
99	which	which	PRON	WDT	PronType=Rel	98	_	_	start_char=3004|end_char=3009
100	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	99	_	_	start_char=3010|end_char=3012
101	a	a	DET	DT	Definite=Ind|PronType=Art	100	_	_	start_char=3013|end_char=3014
102	function	function	NOUN	NN	Number=Sing	101	_	_	start_char=3015|end_char=3023
103	that	that	PRON	WDT	PronType=Rel	102	_	_	start_char=3024|end_char=3028
104	maps	map	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	103	_	_	start_char=3029|end_char=3033
105	a	a	DET	DT	Definite=Ind|PronType=Art	104	_	_	start_char=3034|end_char=3035
106	dataset	dataset	NOUN	NN	Number=Sing	105	_	_	start_char=3036|end_char=3043
107	s	's	PART	POS	Typo=Yes	106	_	_	start_char=3044|end_char=3045
108	to	to	ADP	IN	_	107	_	_	start_char=3046|end_char=3048
109	a	a	DET	DT	Definite=Ind|PronType=Art	108	_	_	start_char=3049|end_char=3050
110	prediction	prediction	NOUN	NN	Number=Sing	109	_	_	start_char=3051|end_char=3061
111	function	function	NOUN	NN	Number=Sing	110	_	_	SpaceAfter=No|start_char=3062|end_char=3070
112	.	.	PUNCT	.	_	111	_	_	start_char=3070|end_char=3071

# text = without substantial knowledge of the actual joint distribution, or assumptions about the target function f * , it is extremely unlikely that a will ever reproduce the exact target function.
# sent_id = 15
1	without	without	ADP	IN	_	0	_	_	start_char=3072|end_char=3079
2	substantial	substantial	ADJ	JJ	Degree=Pos	1	_	_	start_char=3080|end_char=3091
3	knowledge	knowledge	NOUN	NN	Number=Sing	2	_	_	start_char=3092|end_char=3101
4	of	of	ADP	IN	_	3	_	_	start_char=3102|end_char=3104
5	the	the	DET	DT	Definite=Def|PronType=Art	4	_	_	start_char=3105|end_char=3108
6	actual	actual	ADJ	JJ	Degree=Pos	5	_	_	start_char=3109|end_char=3115
7	joint	joint	ADJ	JJ	Degree=Pos	6	_	_	start_char=3116|end_char=3121
8	distribution	distribution	NOUN	NN	Number=Sing	7	_	_	SpaceAfter=No|start_char=3122|end_char=3134
9	,	,	PUNCT	,	_	8	_	_	start_char=3134|end_char=3135
10	or	or	CCONJ	CC	_	9	_	_	start_char=3136|end_char=3138
11	assumptions	assumption	NOUN	NNS	Number=Plur	10	_	_	start_char=3139|end_char=3150
12	about	about	ADP	IN	_	11	_	_	start_char=3151|end_char=3156
13	the	the	DET	DT	Definite=Def|PronType=Art	12	_	_	start_char=3157|end_char=3160
14	target	target	NOUN	NN	Number=Sing	13	_	_	start_char=3161|end_char=3167
15	function	function	NOUN	NN	Number=Sing	14	_	_	start_char=3168|end_char=3176
16	f	f	NOUN	NN	Number=Sing	15	_	_	start_char=3177|end_char=3178
17	*	*	PUNCT	NFP	_	16	_	_	start_char=3179|end_char=3180
18	,	,	PUNCT	,	_	17	_	_	start_char=3181|end_char=3182
19	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	18	_	_	start_char=3183|end_char=3185
20	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	19	_	_	start_char=3186|end_char=3188
21	extremely	extremely	ADV	RB	_	20	_	_	start_char=3189|end_char=3198
22	unlikely	unlikely	ADJ	JJ	Degree=Pos	21	_	_	start_char=3199|end_char=3207
23	that	that	SCONJ	IN	_	22	_	_	start_char=3208|end_char=3212
24	a	a	DET	DT	Definite=Ind|PronType=Art	23	_	_	start_char=3213|end_char=3214
25	will	will	AUX	MD	VerbForm=Fin	24	_	_	start_char=3215|end_char=3219
26	ever	ever	ADV	RB	PronType=Ind	25	_	_	start_char=3220|end_char=3224
27	reproduce	reproduce	VERB	VB	VerbForm=Inf	26	_	_	start_char=3225|end_char=3234
28	the	the	DET	DT	Definite=Def|PronType=Art	27	_	_	start_char=3235|end_char=3238
29	exact	exact	ADJ	JJ	Degree=Pos	28	_	_	start_char=3239|end_char=3244
30	target	target	NOUN	NN	Number=Sing	29	_	_	start_char=3245|end_char=3251
31	function	function	NOUN	NN	Number=Sing	30	_	_	SpaceAfter=No|start_char=3252|end_char=3260
32	.	.	PUNCT	.	_	31	_	_	start_char=3260|end_char=3261

# text = however, our goal is to minimize the population risk of the learning algorithm r(a, s) = e z [l(a(s), z)] (1) which is a random variable that depends on s, our dataset.
# sent_id = 16
1	however	however	ADV	RB	_	0	_	_	SpaceAfter=No|start_char=3262|end_char=3269
2	,	,	PUNCT	,	_	1	_	_	start_char=3269|end_char=3270
3	our	our	PRON	PRP$	Case=Gen|Number=Plur|Person=1|Poss=Yes|PronType=Prs	2	_	_	start_char=3271|end_char=3274
4	goal	goal	NOUN	NN	Number=Sing	3	_	_	start_char=3275|end_char=3279
5	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	_	_	start_char=3280|end_char=3282
6	to	to	PART	TO	_	5	_	_	start_char=3283|end_char=3285
7	minimize	minimize	VERB	VB	VerbForm=Inf	6	_	_	start_char=3286|end_char=3294
8	the	the	DET	DT	Definite=Def|PronType=Art	7	_	_	start_char=3295|end_char=3298
9	population	population	NOUN	NN	Number=Sing	8	_	_	start_char=3299|end_char=3309
10	risk	risk	NOUN	NN	Number=Sing	9	_	_	start_char=3310|end_char=3314
11	of	of	ADP	IN	_	10	_	_	start_char=3315|end_char=3317
12	the	the	DET	DT	Definite=Def|PronType=Art	11	_	_	start_char=3318|end_char=3321
13	learning	learning	NOUN	NN	Number=Sing	12	_	_	start_char=3322|end_char=3330
14	algorithm	algorithm	NOUN	NN	Number=Sing	13	_	_	start_char=3331|end_char=3340
15	r(	r(	X	FW	_	14	_	_	SpaceAfter=No|start_char=3341|end_char=3343
16	a	a	DET	DT	Definite=Ind|PronType=Art	15	_	_	SpaceAfter=No|start_char=3343|end_char=3344
17	,	,	PUNCT	,	_	16	_	_	start_char=3344|end_char=3345
18	s	s	X	AFX	_	17	_	_	SpaceAfter=No|start_char=3346|end_char=3347
19	)	)	PUNCT	-RRB-	_	18	_	_	start_char=3347|end_char=3348
20	=	=	SYM	SYM	_	19	_	_	start_char=3349|end_char=3350
21	e	e	X	FW	_	20	_	_	start_char=3351|end_char=3352
22	z	z	NOUN	NN	Number=Sing	21	_	_	start_char=3353|end_char=3354
23	[	[	PUNCT	-LRB-	_	22	_	_	SpaceAfter=No|start_char=3355|end_char=3356
24	l	l	PROPN	NNP	Number=Sing	23	_	_	SpaceAfter=No|start_char=3356|end_char=3357
25	(	(	PUNCT	-LRB-	_	24	_	_	SpaceAfter=No|start_char=3357|end_char=3358
26	a(	a(	PUNCT	-LRB-	_	25	_	_	SpaceAfter=No|start_char=3358|end_char=3360
27	s	s	X	AFX	_	26	_	_	SpaceAfter=No|start_char=3360|end_char=3361
28	)	)	PUNCT	-RRB-	_	27	_	_	SpaceAfter=No|start_char=3361|end_char=3362
29	,	,	PUNCT	,	_	28	_	_	start_char=3362|end_char=3363
30	z	z	NOUN	NN	Number=Sing	29	_	_	SpaceAfter=No|start_char=3364|end_char=3365
31	)	)	PUNCT	-RRB-	_	30	_	_	SpaceAfter=No|start_char=3365|end_char=3366
32	]	]	PUNCT	-RRB-	_	31	_	_	start_char=3366|end_char=3367
33	(	(	PUNCT	-LRB-	_	32	_	_	SpaceAfter=No|start_char=3368|end_char=3369
34	1	1	NUM	CD	NumForm=Digit|NumType=Card	33	_	_	SpaceAfter=No|start_char=3369|end_char=3370
35	)	)	PUNCT	-RRB-	_	34	_	_	start_char=3370|end_char=3371
36	which	which	PRON	WDT	PronType=Rel	35	_	_	start_char=3372|end_char=3377
37	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	36	_	_	start_char=3378|end_char=3380
38	a	a	DET	DT	Definite=Ind|PronType=Art	37	_	_	start_char=3381|end_char=3382
39	random	random	ADJ	JJ	Degree=Pos	38	_	_	start_char=3383|end_char=3389
40	variable	variable	NOUN	NN	Number=Sing	39	_	_	start_char=3390|end_char=3398
41	that	that	PRON	WDT	PronType=Rel	40	_	_	start_char=3399|end_char=3403
42	depends	depend	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	41	_	_	start_char=3404|end_char=3411
43	on	on	ADP	IN	_	42	_	_	start_char=3412|end_char=3414
44	s	's	PART	POS	Typo=Yes	43	_	_	SpaceAfter=No|start_char=3415|end_char=3416
45	,	,	PUNCT	,	_	44	_	_	start_char=3416|end_char=3417
46	our	our	PRON	PRP$	Case=Gen|Number=Plur|Person=1|Poss=Yes|PronType=Prs	45	_	_	start_char=3418|end_char=3421
47	dataset	dataset	NOUN	NN	Number=Sing	46	_	_	SpaceAfter=No|start_char=3422|end_char=3429
48	.	.	PUNCT	.	_	47	_	_	start_char=3429|end_char=3430

# text = to make this problem of searching for learning algorithms tractable, we similarly parameterize our learning algorithm a by a vector α ∈ r d , denoted a α . these are known as the "hyperparameters" or "meta-parameters" of the learning algorithm, and can play many important roles: they can perform regularization, enforce sparsity, or even guide feature selection [1] . the quantity we would then like to optimize is the expected population risk, or l(α) = e s [r(a α , s)] . (2) it is impossible to exactly calculate (2) with a finite dataset s, as there are two expectations that both involve an unknown probability distribution.
# sent_id = 17
1	to	to	PART	TO	_	0	_	_	start_char=3431|end_char=3433
2	make	make	VERB	VB	VerbForm=Inf	1	_	_	start_char=3434|end_char=3438
3	this	this	DET	DT	Number=Sing|PronType=Dem	2	_	_	start_char=3439|end_char=3443
4	problem	problem	NOUN	NN	Number=Sing	3	_	_	start_char=3444|end_char=3451
5	of	of	SCONJ	IN	_	4	_	_	start_char=3452|end_char=3454
6	searching	searching	NOUN	NN	Number=Sing	5	_	_	start_char=3455|end_char=3464
7	for	for	ADP	IN	_	6	_	_	start_char=3465|end_char=3468
8	learning	learning	NOUN	NN	Number=Sing	7	_	_	start_char=3469|end_char=3477
9	algorithms	algorithm	NOUN	NNS	Number=Plur	8	_	_	start_char=3478|end_char=3488
10	tractable	tractable	ADJ	JJ	Degree=Pos	9	_	_	SpaceAfter=No|start_char=3489|end_char=3498
11	,	,	PUNCT	,	_	10	_	_	start_char=3498|end_char=3499
12	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	11	_	_	start_char=3500|end_char=3502
13	similarly	similarly	ADV	RB	_	12	_	_	start_char=3503|end_char=3512
14	parameterize	parameterize	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	13	_	_	start_char=3513|end_char=3525
15	our	our	PRON	PRP$	Case=Gen|Number=Plur|Person=1|Poss=Yes|PronType=Prs	14	_	_	start_char=3526|end_char=3529
16	learning	learning	NOUN	NN	Number=Sing	15	_	_	start_char=3530|end_char=3538
17	algorithm	algorithm	NOUN	NN	Number=Sing	16	_	_	start_char=3539|end_char=3548
18	a	a	DET	DT	Definite=Ind|PronType=Art	17	_	_	start_char=3549|end_char=3550
19	by	by	ADP	IN	_	18	_	_	start_char=3551|end_char=3553
20	a	a	DET	DT	Definite=Ind|PronType=Art	19	_	_	start_char=3554|end_char=3555
21	vector	vector	NOUN	NN	Number=Sing	20	_	_	start_char=3556|end_char=3562
22	α	α	NOUN	NN	Number=Sing	21	_	_	start_char=3563|end_char=3564
23	∈	∈	NOUN	NN	Number=Sing	22	_	_	start_char=3565|end_char=3566
24	r	be	X	FW	_	23	_	_	start_char=3567|end_char=3568
25	d	would	X	FW	Foreign=Yes	24	_	_	start_char=3569|end_char=3570
26	,	,	PUNCT	,	_	25	_	_	start_char=3571|end_char=3572
27	denoted	denote	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	26	_	_	start_char=3573|end_char=3580
28	a	a	DET	DT	Definite=Ind|PronType=Art	27	_	_	start_char=3581|end_char=3582
29	α	α	NOUN	NN	Number=Sing	28	_	_	start_char=3583|end_char=3584
30	.	.	PUNCT	.	_	29	_	_	start_char=3585|end_char=3586
31	these	this	PRON	DT	Number=Plur|PronType=Dem	30	_	_	start_char=3587|end_char=3592
32	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	31	_	_	start_char=3593|end_char=3596
33	known	know	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	32	_	_	start_char=3597|end_char=3602
34	as	as	ADP	IN	_	33	_	_	start_char=3603|end_char=3605
35	the	the	DET	DT	Definite=Def|PronType=Art	34	_	_	start_char=3606|end_char=3609
36	"	"	PUNCT	``	_	35	_	_	SpaceAfter=No|start_char=3610|end_char=3611
37	hyperparameters	hyperparameter	NOUN	NNS	Number=Plur	36	_	_	SpaceAfter=No|start_char=3611|end_char=3626
38	"	"	PUNCT	''	_	37	_	_	start_char=3626|end_char=3627
39	or	or	CCONJ	CC	_	38	_	_	start_char=3628|end_char=3630
40	"	"	PUNCT	``	_	39	_	_	SpaceAfter=No|start_char=3631|end_char=3632
41	meta	meta	NOUN	NN	Number=Sing	40	_	_	SpaceAfter=No|start_char=3632|end_char=3636
42	-	-	PUNCT	HYPH	_	41	_	_	SpaceAfter=No|start_char=3636|end_char=3637
43	parameters	parameter	NOUN	NNS	Number=Plur	42	_	_	SpaceAfter=No|start_char=3637|end_char=3647
44	"	"	PUNCT	''	_	43	_	_	start_char=3647|end_char=3648
45	of	of	ADP	IN	_	44	_	_	start_char=3649|end_char=3651
46	the	the	DET	DT	Definite=Def|PronType=Art	45	_	_	start_char=3652|end_char=3655
47	learning	learning	NOUN	NN	Number=Sing	46	_	_	start_char=3656|end_char=3664
48	algorithm	algorithm	NOUN	NN	Number=Sing	47	_	_	SpaceAfter=No|start_char=3665|end_char=3674
49	,	,	PUNCT	,	_	48	_	_	start_char=3674|end_char=3675
50	and	and	CCONJ	CC	_	49	_	_	start_char=3676|end_char=3679
51	can	can	AUX	MD	VerbForm=Fin	50	_	_	start_char=3680|end_char=3683
52	play	play	VERB	VB	VerbForm=Inf	51	_	_	start_char=3684|end_char=3688
53	many	many	ADJ	JJ	Degree=Pos	52	_	_	start_char=3689|end_char=3693
54	important	important	ADJ	JJ	Degree=Pos	53	_	_	start_char=3694|end_char=3703
55	roles	role	NOUN	NNS	Number=Plur	54	_	_	SpaceAfter=No|start_char=3704|end_char=3709
56	:	:	PUNCT	:	_	55	_	_	start_char=3709|end_char=3710
57	they	they	PRON	PRP	Case=Nom|Number=Plur|Person=3|PronType=Prs	56	_	_	start_char=3711|end_char=3715
58	can	can	AUX	MD	VerbForm=Fin	57	_	_	start_char=3716|end_char=3719
59	perform	perform	VERB	VB	VerbForm=Inf	58	_	_	start_char=3720|end_char=3727
60	regularization	regularization	NOUN	NN	Number=Sing	59	_	_	SpaceAfter=No|start_char=3728|end_char=3742
61	,	,	PUNCT	,	_	60	_	_	start_char=3742|end_char=3743
62	enforce	enforce	VERB	VB	VerbForm=Inf	61	_	_	start_char=3744|end_char=3751
63	sparsity	sparsity	NOUN	NN	Number=Sing	62	_	_	SpaceAfter=No|start_char=3752|end_char=3760
64	,	,	PUNCT	,	_	63	_	_	start_char=3760|end_char=3761
65	or	or	CCONJ	CC	_	64	_	_	start_char=3762|end_char=3764
66	even	even	ADV	RB	_	65	_	_	start_char=3765|end_char=3769
67	guide	guide	VERB	VB	VerbForm=Inf	66	_	_	start_char=3770|end_char=3775
68	feature	feature	NOUN	NN	Number=Sing	67	_	_	start_char=3776|end_char=3783
69	selection	selection	NOUN	NN	Number=Sing	68	_	_	start_char=3784|end_char=3793
70	[	[	PUNCT	-LRB-	_	69	_	_	SpaceAfter=No|start_char=3794|end_char=3795
71	1	1	NUM	CD	NumForm=Digit|NumType=Card	70	_	_	SpaceAfter=No|start_char=3795|end_char=3796
72	]	]	PUNCT	-RRB-	_	71	_	_	start_char=3796|end_char=3797
73	.	.	PUNCT	.	_	72	_	_	start_char=3798|end_char=3799
74	the	the	DET	DT	Definite=Def|PronType=Art	73	_	_	start_char=3800|end_char=3803
75	quantity	quantity	NOUN	NN	Number=Sing	74	_	_	start_char=3804|end_char=3812
76	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	75	_	_	start_char=3813|end_char=3815
77	would	would	AUX	MD	VerbForm=Fin	76	_	_	start_char=3816|end_char=3821
78	then	then	ADV	RB	PronType=Dem	77	_	_	start_char=3822|end_char=3826
79	like	like	VERB	VB	VerbForm=Inf	78	_	_	start_char=3827|end_char=3831
80	to	to	PART	TO	_	79	_	_	start_char=3832|end_char=3834
81	optimize	optimize	VERB	VB	VerbForm=Inf	80	_	_	start_char=3835|end_char=3843
82	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	81	_	_	start_char=3844|end_char=3846
83	the	the	DET	DT	Definite=Def|PronType=Art	82	_	_	start_char=3847|end_char=3850
84	expected	expect	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	83	_	_	start_char=3851|end_char=3859
85	population	population	NOUN	NN	Number=Sing	84	_	_	start_char=3860|end_char=3870
86	risk	risk	NOUN	NN	Number=Sing	85	_	_	SpaceAfter=No|start_char=3871|end_char=3875
87	,	,	PUNCT	,	_	86	_	_	start_char=3875|end_char=3876
88	or	or	CCONJ	CC	_	87	_	_	start_char=3877|end_char=3879
89	l	l	PROPN	NNP	Number=Sing	88	_	_	SpaceAfter=No|start_char=3880|end_char=3881
90	(	(	PUNCT	-LRB-	_	89	_	_	SpaceAfter=No|start_char=3881|end_char=3882
91	α	α	NOUN	NN	Number=Sing	90	_	_	SpaceAfter=No|start_char=3882|end_char=3883
92	)	)	PUNCT	-RRB-	_	91	_	_	start_char=3883|end_char=3884
93	=	=	SYM	SYM	_	92	_	_	start_char=3885|end_char=3886
94	e	e	NOUN	NN	Number=Sing	93	_	_	start_char=3887|end_char=3888
95	s	s	X	AFX	_	94	_	_	start_char=3889|end_char=3890
96	[	[	PUNCT	-LRB-	_	95	_	_	SpaceAfter=No|start_char=3891|end_char=3892
97	r(	r(	NOUN	NN	Number=Sing	96	_	_	SpaceAfter=No|start_char=3892|end_char=3894
98	a	a	DET	DT	Definite=Ind|PronType=Art	97	_	_	start_char=3894|end_char=3895
99	α	α	NOUN	NN	Number=Sing	98	_	_	start_char=3896|end_char=3897
100	,	,	PUNCT	,	_	99	_	_	start_char=3898|end_char=3899
101	s	s	X	AFX	_	100	_	_	SpaceAfter=No|start_char=3900|end_char=3901
102	)	)	PUNCT	-RRB-	_	101	_	_	SpaceAfter=No|start_char=3901|end_char=3902
103	]	]	PUNCT	-RRB-	_	102	_	_	start_char=3902|end_char=3903
104	.	.	PUNCT	.	_	103	_	_	start_char=3904|end_char=3905
105	(	(	PUNCT	-LRB-	_	104	_	_	SpaceAfter=No|start_char=3906|end_char=3907
106	2	2	NUM	LS	NumForm=Digit|NumType=Card	105	_	_	SpaceAfter=No|start_char=3907|end_char=3908
107	)	)	PUNCT	-RRB-	_	106	_	_	start_char=3908|end_char=3909
108	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	107	_	_	start_char=3910|end_char=3912
109	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	108	_	_	start_char=3913|end_char=3915
110	impossible	impossible	ADJ	JJ	Degree=Pos	109	_	_	start_char=3916|end_char=3926
111	to	to	PART	TO	_	110	_	_	start_char=3927|end_char=3929
112	exactly	exactly	ADV	RB	_	111	_	_	start_char=3930|end_char=3937
113	calculate	calculate	VERB	VB	VerbForm=Inf	112	_	_	start_char=3938|end_char=3947
114	(	(	PUNCT	-LRB-	_	113	_	_	SpaceAfter=No|start_char=3948|end_char=3949
115	2	2	NUM	LS	NumForm=Digit|NumType=Card	114	_	_	SpaceAfter=No|start_char=3949|end_char=3950
116	)	)	PUNCT	-RRB-	_	115	_	_	start_char=3950|end_char=3951
117	with	with	ADP	IN	_	116	_	_	start_char=3952|end_char=3956
118	a	a	DET	DT	Definite=Ind|PronType=Art	117	_	_	start_char=3957|end_char=3958
119	finite	finite	ADJ	JJ	Degree=Pos	118	_	_	start_char=3959|end_char=3965
120	dataset	dataset	NOUN	NN	Number=Sing	119	_	_	start_char=3966|end_char=3973
121	s	's	PART	POS	Typo=Yes	120	_	_	SpaceAfter=No|start_char=3974|end_char=3975
122	,	,	PUNCT	,	_	121	_	_	start_char=3975|end_char=3976
123	as	as	SCONJ	IN	_	122	_	_	start_char=3977|end_char=3979
124	there	there	PRON	EX	_	123	_	_	start_char=3980|end_char=3985
125	are	be	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	124	_	_	start_char=3986|end_char=3989
126	two	two	NUM	CD	NumForm=Word|NumType=Card	125	_	_	start_char=3990|end_char=3993
127	expectations	expectation	NOUN	NNS	Number=Plur	126	_	_	start_char=3994|end_char=4006
128	that	that	PRON	WDT	PronType=Rel	127	_	_	start_char=4007|end_char=4011
129	both	both	DET	DT	PronType=Tot	128	_	_	start_char=4012|end_char=4016
130	involve	involve	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	129	_	_	start_char=4017|end_char=4024
131	an	a	DET	DT	Definite=Ind|PronType=Art	130	_	_	start_char=4025|end_char=4027
132	unknown	unknown	ADJ	JJ	Degree=Pos	131	_	_	start_char=4028|end_char=4035
133	probability	probability	NOUN	NN	Number=Sing	132	_	_	start_char=4036|end_char=4047
134	distribution	distribution	NOUN	NN	Number=Sing	133	_	_	SpaceAfter=No|start_char=4048|end_char=4060
135	.	.	PUNCT	.	_	134	_	_	start_char=4060|end_char=4061

# text = what we can do is construct a monte carlo estimate of the an algorithm's expected population risk using a technique known as cross-validation.
# sent_id = 18
1	what	what	PRON	WP	PronType=Int	0	_	_	start_char=4062|end_char=4066
2	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	1	_	_	start_char=4067|end_char=4069
3	can	can	AUX	MD	VerbForm=Fin	2	_	_	start_char=4070|end_char=4073
4	do	do	VERB	VB	VerbForm=Inf	3	_	_	start_char=4074|end_char=4076
5	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	_	_	start_char=4077|end_char=4079
6	construct	construct	VERB	VB	VerbForm=Inf	5	_	_	start_char=4080|end_char=4089
7	a	a	DET	DT	Definite=Ind|PronType=Art	6	_	_	start_char=4090|end_char=4091
8	monte	monte	NOUN	NN	Number=Sing	7	_	_	start_char=4092|end_char=4097
9	carlo	carlo	NOUN	NN	Number=Sing	8	_	_	start_char=4098|end_char=4103
10	estimate	estimate	NOUN	NN	Number=Sing	9	_	_	start_char=4104|end_char=4112
11	of	of	ADP	IN	_	10	_	_	start_char=4113|end_char=4115
12	the	the	DET	DT	Definite=Def|PronType=Art	11	_	_	start_char=4116|end_char=4119
13	an	a	DET	DT	Definite=Ind|PronType=Art	12	_	_	start_char=4120|end_char=4122
14-15	algorithm's	_	_	_	_	_	_	_	start_char=4123|end_char=4134
14	algorithm	algorithm	NOUN	NN	Number=Sing	13	_	_	start_char=4123|end_char=4132
15	's	's	PART	POS	_	14	_	_	start_char=4132|end_char=4134
16	expected	expect	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	15	_	_	start_char=4135|end_char=4143
17	population	population	NOUN	NN	Number=Sing	16	_	_	start_char=4144|end_char=4154
18	risk	risk	NOUN	NN	Number=Sing	17	_	_	start_char=4155|end_char=4159
19	using	use	VERB	VBG	VerbForm=Ger	18	_	_	start_char=4160|end_char=4165
20	a	a	DET	DT	Definite=Ind|PronType=Art	19	_	_	start_char=4166|end_char=4167
21	technique	technique	NOUN	NN	Number=Sing	20	_	_	start_char=4168|end_char=4177
22	known	know	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	21	_	_	start_char=4178|end_char=4183
23	as	as	ADP	IN	_	22	_	_	start_char=4184|end_char=4186
24	cross-validation	cross-validation	NOUN	NN	Number=Sing	23	_	_	SpaceAfter=No|start_char=4187|end_char=4203
25	.	.	PUNCT	.	_	24	_	_	start_char=4203|end_char=4204

# text = we first partition s into k partitions t j , v j , j = 1, . . . , k (that is, t j ∩ v j = ∅ and t j ∪ v j = [n]).
# sent_id = 19
1	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	0	_	_	start_char=4205|end_char=4207
2	first	first	ADJ	JJ	Degree=Pos|NumForm=Word|NumType=Ord	1	_	_	start_char=4208|end_char=4213
3	partition	partition	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	2	_	_	start_char=4214|end_char=4223
4	s	's	PART	POS	Typo=Yes	3	_	_	start_char=4224|end_char=4225
5	into	into	ADP	IN	_	4	_	_	start_char=4226|end_char=4230
6	k	thousand	X	FW	_	5	_	_	start_char=4231|end_char=4232
7	partitions	partition	NOUN	NNS	Number=Plur	6	_	_	start_char=4233|end_char=4243
8	t	t	X	FW	_	7	_	_	start_char=4244|end_char=4245
9	j	j	X	FW	_	8	_	_	start_char=4246|end_char=4247
10	,	,	PUNCT	,	_	9	_	_	start_char=4248|end_char=4249
11	v	v	X	FW	_	10	_	_	start_char=4250|end_char=4251
12	j	j	X	FW	_	11	_	_	start_char=4252|end_char=4253
13	,	,	PUNCT	,	_	12	_	_	start_char=4254|end_char=4255
14	j	j	X	FW	_	13	_	_	start_char=4256|end_char=4257
15	=	=	SYM	SYM	_	14	_	_	start_char=4258|end_char=4259
16	1	1	NUM	CD	NumForm=Digit|NumType=Card	15	_	_	SpaceAfter=No|start_char=4260|end_char=4261
17	,	,	PUNCT	,	_	16	_	_	start_char=4261|end_char=4262
18	.	.	PUNCT	.	_	17	_	_	start_char=4263|end_char=4264
19	.	.	PUNCT	,	_	18	_	_	start_char=4265|end_char=4266
20	.	.	PUNCT	,	_	19	_	_	start_char=4267|end_char=4268
21	,	,	PUNCT	,	_	20	_	_	start_char=4269|end_char=4270
22	k	k	NOUN	NN	Number=Sing	21	_	_	start_char=4271|end_char=4272
23	(	(	PUNCT	-LRB-	_	22	_	_	SpaceAfter=No|start_char=4273|end_char=4274
24	that	that	PROPN	NNP	Number=Sing	23	_	_	start_char=4274|end_char=4278
25	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	24	_	_	SpaceAfter=No|start_char=4279|end_char=4281
26	,	,	PUNCT	,	_	25	_	_	start_char=4281|end_char=4282
27	t	t	X	FW	Foreign=Yes	26	_	_	start_char=4283|end_char=4284
28	j	j	X	FW	_	27	_	_	start_char=4285|end_char=4286
29	∩	∩	X	FW	Foreign=Yes	28	_	_	start_char=4287|end_char=4288
30	v	v	X	FW	Foreign=Yes	29	_	_	start_char=4289|end_char=4290
31	j	j	X	FW	Foreign=Yes	30	_	_	start_char=4291|end_char=4292
32	=	=	SYM	SYM	_	31	_	_	start_char=4293|end_char=4294
33	∅	∅	X	FW	_	32	_	_	start_char=4295|end_char=4296
34	and	and	X	FW	_	33	_	_	start_char=4297|end_char=4300
35	t	t	X	FW	Foreign=Yes	34	_	_	start_char=4301|end_char=4302
36	j	j	X	FW	Foreign=Yes	35	_	_	start_char=4303|end_char=4304
37	∪	∪	X	FW	Foreign=Yes	36	_	_	start_char=4305|end_char=4306
38	v	v	X	FW	_	37	_	_	start_char=4307|end_char=4308
39	j	j	X	FW	_	38	_	_	start_char=4309|end_char=4310
40	=	=	SYM	SYM	_	39	_	_	start_char=4311|end_char=4312
41	[	[	PUNCT	-LRB-	_	40	_	_	SpaceAfter=No|start_char=4313|end_char=4314
42	n	and	PROPN	NNP	Number=Sing	41	_	_	SpaceAfter=No|start_char=4314|end_char=4315
43	]	]	PUNCT	-RRB-	_	42	_	_	SpaceAfter=No|start_char=4315|end_char=4316
44	)	)	PUNCT	-RRB-	_	43	_	_	SpaceAfter=No|start_char=4316|end_char=4317
45	.	.	PUNCT	.	_	44	_	_	start_char=4317|end_char=4318

# text = then our cross-validation risk, as a function of α, is l cv (α) = 1 k k j=1 1 |v j | i∈vj l(a α (t j ), z i ) (3) and is readily calculated.
# sent_id = 20
1	then	then	ADV	RB	PronType=Dem	0	_	_	start_char=4319|end_char=4323
2	our	our	PRON	PRP$	Case=Gen|Number=Plur|Person=1|Poss=Yes|PronType=Prs	1	_	_	start_char=4324|end_char=4327
3	cross	cross	NOUN	NN	Number=Sing	2	_	_	SpaceAfter=No|start_char=4328|end_char=4333
4	-validation	-validation	NOUN	NN	Number=Sing	3	_	_	start_char=4333|end_char=4344
5	risk	risk	NOUN	NN	Number=Sing	4	_	_	SpaceAfter=No|start_char=4345|end_char=4349
6	,	,	PUNCT	,	_	5	_	_	start_char=4349|end_char=4350
7	as	as	ADP	IN	_	6	_	_	start_char=4351|end_char=4353
8	a	a	DET	DT	Definite=Ind|PronType=Art	7	_	_	start_char=4354|end_char=4355
9	function	function	NOUN	NN	Number=Sing	8	_	_	start_char=4356|end_char=4364
10	of	of	ADP	IN	_	9	_	_	start_char=4365|end_char=4367
11	α	α	NOUN	NN	Number=Sing	10	_	_	SpaceAfter=No|start_char=4368|end_char=4369
12	,	,	PUNCT	,	_	11	_	_	start_char=4369|end_char=4370
13	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	12	_	_	start_char=4371|end_char=4373
14	l	l	X	FW	_	13	_	_	start_char=4374|end_char=4375
15	cv	cv	NOUN	NN	Number=Sing	14	_	_	start_char=4376|end_char=4378
16	(	(	PUNCT	-LRB-	_	15	_	_	SpaceAfter=No|start_char=4379|end_char=4380
17	α	α	NOUN	NN	Number=Sing	16	_	_	SpaceAfter=No|start_char=4380|end_char=4381
18	)	)	PUNCT	-RRB-	_	17	_	_	start_char=4381|end_char=4382
19	=	=	SYM	SYM	_	18	_	_	start_char=4383|end_char=4384
20	1	1	NUM	CD	NumForm=Digit|NumType=Card	19	_	_	start_char=4385|end_char=4386
21	k	thousand	NUM	CD	Abbr=Yes|NumForm=Word|NumType=Card	20	_	_	start_char=4387|end_char=4388
22	k	thousand	NUM	CD	Abbr=Yes|NumForm=Word|NumType=Card	21	_	_	start_char=4389|end_char=4390
23	j=1	j=1	NOUN	NN	Number=Sing	22	_	_	start_char=4391|end_char=4394
24	1	1	NUM	CD	NumForm=Digit|NumType=Card	23	_	_	start_char=4395|end_char=4396
25	|v	|v	NOUN	NN	Number=Sing	24	_	_	start_char=4397|end_char=4399
26	j	j	NOUN	NN	Number=Sing	25	_	_	start_char=4400|end_char=4401
27	|	|	PUNCT	NFP	_	26	_	_	start_char=4402|end_char=4403
28	i∈vj	i∈vj	NOUN	NN	Number=Sing	27	_	_	start_char=4404|end_char=4408
29	l(	l(	PUNCT	-LRB-	_	28	_	_	SpaceAfter=No|start_char=4409|end_char=4411
30	a	a	X	FW	_	29	_	_	start_char=4411|end_char=4412
31	α	α	NOUN	NN	Number=Sing	30	_	_	start_char=4413|end_char=4414
32	(	(	PUNCT	-LRB-	_	31	_	_	SpaceAfter=No|start_char=4415|end_char=4416
33	t	t	X	FW	Foreign=Yes	32	_	_	start_char=4416|end_char=4417
34	j	j	NOUN	NN	Number=Sing	33	_	_	start_char=4418|end_char=4419
35	)	)	PUNCT	-RRB-	_	34	_	_	SpaceAfter=No|start_char=4420|end_char=4421
36	,	,	PUNCT	,	_	35	_	_	start_char=4421|end_char=4422
37	z	z	NOUN	NN	Number=Sing	36	_	_	start_char=4423|end_char=4424
38	i	i	NOUN	NN	Number=Sing	37	_	_	start_char=4425|end_char=4426
39	)	)	PUNCT	-RRB-	_	38	_	_	start_char=4427|end_char=4428
40	(	(	PUNCT	-LRB-	_	39	_	_	SpaceAfter=No|start_char=4429|end_char=4430
41	3	3	NUM	CD	NumForm=Digit|NumType=Card	40	_	_	SpaceAfter=No|start_char=4430|end_char=4431
42	)	)	PUNCT	-RRB-	_	41	_	_	start_char=4431|end_char=4432
43	and	and	CCONJ	CC	_	42	_	_	start_char=4433|end_char=4436
44	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	43	_	_	start_char=4437|end_char=4439
45	readily	readily	ADV	RB	_	44	_	_	start_char=4440|end_char=4447
46	calculated	calculate	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	45	_	_	SpaceAfter=No|start_char=4448|end_char=4458
47	.	.	PUNCT	.	_	46	_	_	start_char=4458|end_char=4459

# text = we first apply the algorithm to each training set and then average the loss on each corresponding validation set.
# sent_id = 21
1	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	0	_	_	start_char=4460|end_char=4462
2	first	first	ADV	RB	Degree=Pos|NumForm=Word|NumType=Ord	1	_	_	start_char=4463|end_char=4468
3	apply	apply	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	2	_	_	start_char=4469|end_char=4474
4	the	the	DET	DT	Definite=Def|PronType=Art	3	_	_	start_char=4475|end_char=4478
5	algorithm	algorithm	NOUN	NN	Number=Sing	4	_	_	start_char=4479|end_char=4488
6	to	to	ADP	IN	_	5	_	_	start_char=4489|end_char=4491
7	each	each	DET	DT	PronType=Tot	6	_	_	start_char=4492|end_char=4496
8	training	training	NOUN	NN	Number=Sing	7	_	_	start_char=4497|end_char=4505
9	set	set	NOUN	NN	Number=Sing	8	_	_	start_char=4506|end_char=4509
10	and	and	CCONJ	CC	_	9	_	_	start_char=4510|end_char=4513
11	then	then	ADV	RB	PronType=Dem	10	_	_	start_char=4514|end_char=4518
12	average	average	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	11	_	_	start_char=4519|end_char=4526
13	the	the	DET	DT	Definite=Def|PronType=Art	12	_	_	start_char=4527|end_char=4530
14	loss	loss	NOUN	NN	Number=Sing	13	_	_	start_char=4531|end_char=4535
15	on	on	ADP	IN	_	14	_	_	start_char=4536|end_char=4538
16	each	each	DET	DT	PronType=Tot	15	_	_	start_char=4539|end_char=4543
17	corresponding	corresponding	VERB	VBG	VerbForm=Ger	16	_	_	start_char=4544|end_char=4557
18	validation	validation	NOUN	NN	Number=Sing	17	_	_	start_char=4558|end_char=4568
19	set	set	NOUN	NN	Number=Sing	18	_	_	SpaceAfter=No|start_char=4569|end_char=4572
20	.	.	PUNCT	.	_	19	_	_	start_char=4572|end_char=4573

# text = the first sum in (3) corresponds to the expectation in (2) , and the second sum corresponds to the expectation in (1) . setting k = 1 reduces to simple out-of-sample validation and an arbitrary k reduces to the common k-fold cross-validation estimate (provided t j form a partition of {1, . . . , n } and |t j | = n -n k ). thus, this formulation can be viewed as a generalization of cross-validation.
# sent_id = 22
1	the	the	DET	DT	Definite=Def|PronType=Art	0	_	_	start_char=4574|end_char=4577
2	first	first	ADJ	JJ	Degree=Pos|NumForm=Word|NumType=Ord	1	_	_	start_char=4578|end_char=4583
3	sum	sum	NOUN	NN	Number=Sing	2	_	_	start_char=4584|end_char=4587
4	in	in	ADP	IN	_	3	_	_	start_char=4588|end_char=4590
5	(	(	PUNCT	-LRB-	_	4	_	_	SpaceAfter=No|start_char=4591|end_char=4592
6	3	3	NUM	CD	NumForm=Digit|NumType=Card	5	_	_	SpaceAfter=No|start_char=4592|end_char=4593
7	)	)	PUNCT	-RRB-	_	6	_	_	start_char=4593|end_char=4594
8	corresponds	correspond	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	_	_	start_char=4595|end_char=4606
9	to	to	ADP	IN	_	8	_	_	start_char=4607|end_char=4609
10	the	the	DET	DT	Definite=Def|PronType=Art	9	_	_	start_char=4610|end_char=4613
11	expectation	expectation	NOUN	NN	Number=Sing	10	_	_	start_char=4614|end_char=4625
12	in	in	ADP	IN	_	11	_	_	start_char=4626|end_char=4628
13	(	(	PUNCT	-LRB-	_	12	_	_	SpaceAfter=No|start_char=4629|end_char=4630
14	2	2	NUM	CD	NumForm=Digit|NumType=Card	13	_	_	SpaceAfter=No|start_char=4630|end_char=4631
15	)	)	PUNCT	-RRB-	_	14	_	_	start_char=4631|end_char=4632
16	,	,	PUNCT	,	_	15	_	_	start_char=4633|end_char=4634
17	and	and	CCONJ	CC	_	16	_	_	start_char=4635|end_char=4638
18	the	the	DET	DT	Definite=Def|PronType=Art	17	_	_	start_char=4639|end_char=4642
19	second	second	ADJ	JJ	Degree=Pos|NumForm=Word|NumType=Ord	18	_	_	start_char=4643|end_char=4649
20	sum	sum	NOUN	NN	Number=Sing	19	_	_	start_char=4650|end_char=4653
21	corresponds	correspond	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	20	_	_	start_char=4654|end_char=4665
22	to	to	ADP	IN	_	21	_	_	start_char=4666|end_char=4668
23	the	the	DET	DT	Definite=Def|PronType=Art	22	_	_	start_char=4669|end_char=4672
24	expectation	expectation	NOUN	NN	Number=Sing	23	_	_	start_char=4673|end_char=4684
25	in	in	ADP	IN	_	24	_	_	start_char=4685|end_char=4687
26	(	(	PUNCT	-LRB-	_	25	_	_	SpaceAfter=No|start_char=4688|end_char=4689
27	1	1	NUM	LS	NumForm=Digit|NumType=Card	26	_	_	SpaceAfter=No|start_char=4689|end_char=4690
28	)	)	PUNCT	-RRB-	_	27	_	_	start_char=4690|end_char=4691
29	.	.	PUNCT	.	_	28	_	_	start_char=4692|end_char=4693
30	setting	setting	NOUN	NN	Number=Sing	29	_	_	start_char=4694|end_char=4701
31	k	k	NOUN	NN	Number=Sing	30	_	_	start_char=4702|end_char=4703
32	=	=	SYM	SYM	_	31	_	_	start_char=4704|end_char=4705
33	1	1	NUM	CD	NumForm=Digit|NumType=Card	32	_	_	start_char=4706|end_char=4707
34	reduces	reduce	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	33	_	_	start_char=4708|end_char=4715
35	to	to	ADP	IN	_	34	_	_	start_char=4716|end_char=4718
36	simple	simple	ADJ	JJ	Degree=Pos	35	_	_	start_char=4719|end_char=4725
37	out	out	ADP	IN	_	36	_	_	SpaceAfter=No|start_char=4726|end_char=4729
38	-	-	PUNCT	HYPH	_	37	_	_	SpaceAfter=No|start_char=4729|end_char=4730
39	of	of	ADP	IN	_	38	_	_	SpaceAfter=No|start_char=4730|end_char=4732
40	-	-	PUNCT	HYPH	_	39	_	_	SpaceAfter=No|start_char=4732|end_char=4733
41	sample	sample	NOUN	NN	Number=Sing	40	_	_	start_char=4733|end_char=4739
42	validation	validation	NOUN	NN	Number=Sing	41	_	_	start_char=4740|end_char=4750
43	and	and	CCONJ	CC	_	42	_	_	start_char=4751|end_char=4754
44	an	a	DET	DT	Definite=Ind|PronType=Art	43	_	_	start_char=4755|end_char=4757
45	arbitrary	arbitrary	ADJ	JJ	Degree=Pos	44	_	_	start_char=4758|end_char=4767
46	k	k	NOUN	NN	Number=Sing	45	_	_	start_char=4768|end_char=4769
47	reduces	reduce	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	46	_	_	start_char=4770|end_char=4777
48	to	to	ADP	IN	_	47	_	_	start_char=4778|end_char=4780
49	the	the	DET	DT	Definite=Def|PronType=Art	48	_	_	start_char=4781|end_char=4784
50	common	common	ADJ	JJ	Degree=Pos	49	_	_	start_char=4785|end_char=4791
51	k-	k-	NOUN	NN	Number=Sing	50	_	_	SpaceAfter=No|start_char=4792|end_char=4794
52	fold	fold	NOUN	NN	Number=Sing	51	_	_	start_char=4794|end_char=4798
53	cross-validation	cross-validation	NOUN	NN	Number=Sing	52	_	_	start_char=4799|end_char=4815
54	estimate	estimate	NOUN	NN	Number=Sing	53	_	_	start_char=4816|end_char=4824
55	(	(	PUNCT	-LRB-	_	54	_	_	SpaceAfter=No|start_char=4825|end_char=4826
56	provided	provide	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	55	_	_	start_char=4826|end_char=4834
57	t	t	NOUN	NN	Number=Sing	56	_	_	start_char=4835|end_char=4836
58	j	j	NOUN	NN	Number=Sing	57	_	_	start_char=4837|end_char=4838
59	form	form	VERB	VB	Mood=Imp|VerbForm=Inf	58	_	_	start_char=4839|end_char=4843
60	a	a	DET	DT	Definite=Ind|PronType=Art	59	_	_	start_char=4844|end_char=4845
61	partition	partition	NOUN	NN	Number=Sing	60	_	_	start_char=4846|end_char=4855
62	of	of	ADP	IN	_	61	_	_	start_char=4856|end_char=4858
63	{	{	SYM	SYM	_	62	_	_	SpaceAfter=No|start_char=4859|end_char=4860
64	1	1	NUM	CD	NumForm=Digit|NumType=Card	63	_	_	SpaceAfter=No|start_char=4860|end_char=4861
65	,	,	PUNCT	,	_	64	_	_	start_char=4861|end_char=4862
66	.	.	PUNCT	.	_	65	_	_	start_char=4863|end_char=4864
67	.	.	PUNCT	,	_	66	_	_	start_char=4865|end_char=4866
68	.	.	PUNCT	,	_	67	_	_	start_char=4867|end_char=4868
69	,	,	PUNCT	,	_	68	_	_	start_char=4869|end_char=4870
70	n	n	NOUN	NN	Number=Sing	69	_	_	start_char=4871|end_char=4872
71	}	}	NOUN	NN	Number=Sing	70	_	_	start_char=4873|end_char=4874
72	and	and	CCONJ	CC	_	71	_	_	start_char=4875|end_char=4878
73	|t	|t	NOUN	NN	Number=Sing	72	_	_	start_char=4879|end_char=4881
74	j	j	NOUN	NN	Number=Sing	73	_	_	start_char=4882|end_char=4883
75	|	|	PUNCT	NFP	_	74	_	_	start_char=4884|end_char=4885
76	=	=	SYM	SYM	_	75	_	_	start_char=4886|end_char=4887
77	n	n	NOUN	NN	Number=Sing	76	_	_	start_char=4888|end_char=4889
78	-n	-n	SYM	SYM	_	77	_	_	start_char=4890|end_char=4892
79	k	thousand	NUM	CD	Abbr=Yes|NumForm=Word|NumType=Card	78	_	_	start_char=4893|end_char=4894
80	)	)	PUNCT	-RRB-	_	79	_	_	SpaceAfter=No|start_char=4895|end_char=4896
81	.	.	PUNCT	.	_	80	_	_	start_char=4896|end_char=4897
82	thus	thus	ADV	RB	_	81	_	_	SpaceAfter=No|start_char=4898|end_char=4902
83	,	,	PUNCT	,	_	82	_	_	start_char=4902|end_char=4903
84	this	this	DET	DT	Number=Sing|PronType=Dem	83	_	_	start_char=4904|end_char=4908
85	formulation	formulation	NOUN	NN	Number=Sing	84	_	_	start_char=4909|end_char=4920
86	can	can	AUX	MD	VerbForm=Fin	85	_	_	start_char=4921|end_char=4924
87	be	be	AUX	VB	VerbForm=Inf	86	_	_	start_char=4925|end_char=4927
88	viewed	view	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	87	_	_	start_char=4928|end_char=4934
89	as	as	ADP	IN	_	88	_	_	start_char=4935|end_char=4937
90	a	a	DET	DT	Definite=Ind|PronType=Art	89	_	_	start_char=4938|end_char=4939
91	generalization	generalization	NOUN	NN	Number=Sing	90	_	_	start_char=4940|end_char=4954
92	of	of	ADP	IN	_	91	_	_	start_char=4955|end_char=4957
93	cross-validation	cross-validation	NOUN	NN	Number=Sing	92	_	_	SpaceAfter=No|start_char=4958|end_char=4974
94	.	.	PUNCT	.	_	93	_	_	start_char=4974|end_char=4975

# text = (see [2] for a longer discussion about this general framework.) in cases where the class of models to be used for learning are known, we have reduced the predictive learning problem to the problem of selecting of a hyperparameter vector α to minimize the cross-validation loss.
# sent_id = 23
1	(	(	PUNCT	-LRB-	_	0	_	_	SpaceAfter=No|start_char=4976|end_char=4977
2	see	see	VERB	VB	Mood=Imp|VerbForm=Fin	1	_	_	start_char=4977|end_char=4980
3	[	[	PUNCT	-LRB-	_	2	_	_	SpaceAfter=No|start_char=4981|end_char=4982
4	2	2	NUM	CD	NumForm=Digit|NumType=Card	3	_	_	SpaceAfter=No|start_char=4982|end_char=4983
5	]	]	PUNCT	-RRB-	_	4	_	_	start_char=4983|end_char=4984
6	for	for	ADP	IN	_	5	_	_	start_char=4985|end_char=4988
7	a	a	DET	DT	Definite=Ind|PronType=Art	6	_	_	start_char=4989|end_char=4990
8	longer	long	ADJ	JJR	Degree=Cmp	7	_	_	start_char=4991|end_char=4997
9	discussion	discussion	NOUN	NN	Number=Sing	8	_	_	start_char=4998|end_char=5008
10	about	about	ADP	IN	_	9	_	_	start_char=5009|end_char=5014
11	this	this	DET	DT	Number=Sing|PronType=Dem	10	_	_	start_char=5015|end_char=5019
12	general	general	ADJ	JJ	Degree=Pos	11	_	_	start_char=5020|end_char=5027
13	framework	framework	NOUN	NN	Number=Sing	12	_	_	SpaceAfter=No|start_char=5028|end_char=5037
14	.	.	PUNCT	.	_	13	_	_	SpaceAfter=No|start_char=5037|end_char=5038
15	)	)	PUNCT	-RRB-	_	14	_	_	start_char=5038|end_char=5039
16	in	in	ADP	IN	_	15	_	_	start_char=5040|end_char=5042
17	cases	case	NOUN	NNS	Number=Plur	16	_	_	start_char=5043|end_char=5048
18	where	where	ADV	WRB	PronType=Rel	17	_	_	start_char=5049|end_char=5054
19	the	the	DET	DT	Definite=Def|PronType=Art	18	_	_	start_char=5055|end_char=5058
20	class	class	NOUN	NN	Number=Sing	19	_	_	start_char=5059|end_char=5064
21	of	of	ADP	IN	_	20	_	_	start_char=5065|end_char=5067
22	models	model	NOUN	NNS	Number=Plur	21	_	_	start_char=5068|end_char=5074
23	to	to	PART	TO	_	22	_	_	start_char=5075|end_char=5077
24	be	be	AUX	VB	VerbForm=Inf	23	_	_	start_char=5078|end_char=5080
25	used	use	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	24	_	_	start_char=5081|end_char=5085
26	for	for	ADP	IN	_	25	_	_	start_char=5086|end_char=5089
27	learning	learning	NOUN	NN	Number=Sing	26	_	_	start_char=5090|end_char=5098
28	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	27	_	_	start_char=5099|end_char=5102
29	known	know	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	28	_	_	SpaceAfter=No|start_char=5103|end_char=5108
30	,	,	PUNCT	,	_	29	_	_	start_char=5108|end_char=5109
31	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	30	_	_	start_char=5110|end_char=5112
32	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	31	_	_	start_char=5113|end_char=5117
33	reduced	reduce	VERB	VBN	Tense=Past|VerbForm=Part	32	_	_	start_char=5118|end_char=5125
34	the	the	DET	DT	Definite=Def|PronType=Art	33	_	_	start_char=5126|end_char=5129
35	predictive	predictive	ADJ	JJ	Degree=Pos	34	_	_	start_char=5130|end_char=5140
36	learning	learning	NOUN	NN	Number=Sing	35	_	_	start_char=5141|end_char=5149
37	problem	problem	NOUN	NN	Number=Sing	36	_	_	start_char=5150|end_char=5157
38	to	to	ADP	IN	_	37	_	_	start_char=5158|end_char=5160
39	the	the	DET	DT	Definite=Def|PronType=Art	38	_	_	start_char=5161|end_char=5164
40	problem	problem	NOUN	NN	Number=Sing	39	_	_	start_char=5165|end_char=5172
41	of	of	SCONJ	IN	_	40	_	_	start_char=5173|end_char=5175
42	selecting	select	NOUN	NN	Number=Sing	41	_	_	start_char=5176|end_char=5185
43	of	of	ADP	IN	_	42	_	_	start_char=5186|end_char=5188
44	a	a	DET	DT	Definite=Ind|PronType=Art	43	_	_	start_char=5189|end_char=5190
45	hyperparameter	hyperparameter	NOUN	NN	Number=Sing	44	_	_	start_char=5191|end_char=5205
46	vector	vector	NOUN	NN	Number=Sing	45	_	_	start_char=5206|end_char=5212
47	α	α	NOUN	NN	Number=Sing	46	_	_	start_char=5213|end_char=5214
48	to	to	PART	TO	_	47	_	_	start_char=5215|end_char=5217
49	minimize	minimize	VERB	VB	VerbForm=Inf	48	_	_	start_char=5218|end_char=5226
50	the	the	DET	DT	Definite=Def|PronType=Art	49	_	_	start_char=5227|end_char=5230
51	cross-validation	cross-validation	NOUN	NN	Number=Sing	50	_	_	start_char=5231|end_char=5247
52	loss	loss	NOUN	NN	Number=Sing	51	_	_	SpaceAfter=No|start_char=5248|end_char=5252
53	.	.	PUNCT	.	_	52	_	_	start_char=5252|end_char=5253

# text = even in the simplest cases, however, the objective in (3) is nonconvex in α, and in many cases not even continuous (e.g., the 0 -1 classification loss), which can make optimization of this quantity tricky.
# sent_id = 24
1	even	even	ADV	RB	_	0	_	_	start_char=5254|end_char=5258
2	in	in	ADP	IN	_	1	_	_	start_char=5259|end_char=5261
3	the	the	DET	DT	Definite=Def|PronType=Art	2	_	_	start_char=5262|end_char=5265
4	simplest	simple	ADJ	JJS	Degree=Sup	3	_	_	start_char=5266|end_char=5274
5	cases	case	NOUN	NNS	Number=Plur	4	_	_	SpaceAfter=No|start_char=5275|end_char=5280
6	,	,	PUNCT	,	_	5	_	_	start_char=5280|end_char=5281
7	however	however	ADV	RB	_	6	_	_	SpaceAfter=No|start_char=5282|end_char=5289
8	,	,	PUNCT	,	_	7	_	_	start_char=5289|end_char=5290
9	the	the	DET	DT	Definite=Def|PronType=Art	8	_	_	start_char=5291|end_char=5294
10	objective	objective	NOUN	NN	Number=Sing	9	_	_	start_char=5295|end_char=5304
11	in	in	ADP	IN	_	10	_	_	start_char=5305|end_char=5307
12	(	(	PUNCT	-LRB-	_	11	_	_	SpaceAfter=No|start_char=5308|end_char=5309
13	3	3	NUM	LS	NumForm=Digit|NumType=Card	12	_	_	SpaceAfter=No|start_char=5309|end_char=5310
14	)	)	PUNCT	-RRB-	_	13	_	_	start_char=5310|end_char=5311
15	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	_	_	start_char=5312|end_char=5314
16	nonconvex	nonconvex	NOUN	NN	Number=Sing	15	_	_	start_char=5315|end_char=5324
17	in	in	ADP	IN	_	16	_	_	start_char=5325|end_char=5327
18	α	α	NOUN	NN	Number=Sing	17	_	_	SpaceAfter=No|start_char=5328|end_char=5329
19	,	,	PUNCT	,	_	18	_	_	start_char=5329|end_char=5330
20	and	and	CCONJ	CC	_	19	_	_	start_char=5331|end_char=5334
21	in	in	ADP	IN	_	20	_	_	start_char=5335|end_char=5337
22	many	many	ADJ	JJ	Degree=Pos	21	_	_	start_char=5338|end_char=5342
23	cases	case	NOUN	NNS	Number=Plur	22	_	_	start_char=5343|end_char=5348
24	not	not	PART	RB	Polarity=Neg	23	_	_	start_char=5349|end_char=5352
25	even	even	ADV	RB	_	24	_	_	start_char=5353|end_char=5357
26	continuous	continuous	ADJ	JJ	Degree=Pos	25	_	_	start_char=5358|end_char=5368
27	(	(	PUNCT	-LRB-	_	26	_	_	SpaceAfter=No|start_char=5369|end_char=5370
28	e.g.	e.g.	ADV	FW	Abbr=Yes	27	_	_	SpaceAfter=No|start_char=5370|end_char=5374
29	,	,	PUNCT	,	_	28	_	_	start_char=5374|end_char=5375
30	the	the	DET	DT	Definite=Def|PronType=Art	29	_	_	start_char=5376|end_char=5379
31	0	0	NUM	CD	NumForm=Digit|NumType=Card	30	_	_	start_char=5380|end_char=5381
32	-	-	SYM	SYM	_	31	_	_	SpaceAfter=No|start_char=5382|end_char=5383
33	1	1	NUM	CD	NumForm=Digit|NumType=Card	32	_	_	start_char=5383|end_char=5384
34	classification	classification	NOUN	NN	Number=Sing	33	_	_	start_char=5385|end_char=5399
35	loss	loss	NOUN	NN	Number=Sing	34	_	_	SpaceAfter=No|start_char=5400|end_char=5404
36	)	)	PUNCT	-RRB-	_	35	_	_	SpaceAfter=No|start_char=5404|end_char=5405
37	,	,	PUNCT	,	_	36	_	_	start_char=5405|end_char=5406
38	which	which	PRON	WDT	PronType=Rel	37	_	_	start_char=5407|end_char=5412
39	can	can	AUX	MD	VerbForm=Fin	38	_	_	start_char=5413|end_char=5416
40	make	make	VERB	VB	VerbForm=Inf	39	_	_	start_char=5417|end_char=5421
41	optimization	optimization	NOUN	NN	Number=Sing	40	_	_	start_char=5422|end_char=5434
42	of	of	ADP	IN	_	41	_	_	start_char=5435|end_char=5437
43	this	this	DET	DT	Number=Sing|PronType=Dem	42	_	_	start_char=5438|end_char=5442
44	quantity	quantity	NOUN	NN	Number=Sing	43	_	_	start_char=5443|end_char=5451
45	tricky	tricky	ADJ	JJ	Degree=Pos	44	_	_	SpaceAfter=No|start_char=5452|end_char=5458
46	.	.	PUNCT	.	_	45	_	_	SpaceAfter=No|start_char=5458|end_char=5459

