# text = an introduction to mm algorithms for machine learning and statistical estimation mm (majorization-minimization) algorithms are an increasingly popular tool for solving optimization problems in machine learning and statistical estimation.
# sent_id = 0
1	an	a	DET	DT	Definite=Ind|PronType=Art	0	_	_	start_char=0|end_char=2
2	introduction	introduction	NOUN	NN	Number=Sing	1	_	_	start_char=3|end_char=15
3	to	to	ADP	IN	_	2	_	_	start_char=16|end_char=18
4	mm	mm	NOUN	NN	Number=Sing	3	_	_	start_char=19|end_char=21
5	algorithms	algorithm	NOUN	NNS	Number=Plur	4	_	_	start_char=22|end_char=32
6	for	for	ADP	IN	_	5	_	_	start_char=33|end_char=36
7	machine	machine	NOUN	NN	Number=Sing	6	_	_	start_char=37|end_char=44
8	learning	learning	NOUN	NN	Number=Sing	7	_	_	start_char=45|end_char=53
9	and	and	CCONJ	CC	_	8	_	_	start_char=54|end_char=57
10	statistical	statistical	ADJ	JJ	Degree=Pos	9	_	_	start_char=58|end_char=69
11	estimation	estimation	NOUN	NN	Number=Sing	10	_	_	start_char=70|end_char=80
12	mm	mm	NOUN	NN	Number=Sing	11	_	_	start_char=81|end_char=83
13	(	(	PUNCT	-LRB-	_	12	_	_	SpaceAfter=No|start_char=84|end_char=85
14	majorization	majorization	NOUN	NN	Number=Sing	13	_	_	SpaceAfter=No|start_char=85|end_char=97
15	-	-	PUNCT	HYPH	_	14	_	_	SpaceAfter=No|start_char=97|end_char=98
16	minimization	minimization	NOUN	NN	Number=Sing	15	_	_	SpaceAfter=No|start_char=98|end_char=110
17	)	)	PUNCT	-RRB-	_	16	_	_	start_char=110|end_char=111
18	algorithms	algorithm	NOUN	NNS	Number=Plur	17	_	_	start_char=112|end_char=122
19	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	18	_	_	start_char=123|end_char=126
20	an	a	DET	DT	Definite=Ind|PronType=Art	19	_	_	start_char=127|end_char=129
21	increasingly	increasingly	ADV	RB	_	20	_	_	start_char=130|end_char=142
22	popular	popular	ADJ	JJ	Degree=Pos	21	_	_	start_char=143|end_char=150
23	tool	tool	NOUN	NN	Number=Sing	22	_	_	start_char=151|end_char=155
24	for	for	SCONJ	IN	_	23	_	_	start_char=156|end_char=159
25	solving	solve	VERB	VBG	VerbForm=Ger	24	_	_	start_char=160|end_char=167
26	optimization	optimization	NOUN	NN	Number=Sing	25	_	_	start_char=168|end_char=180
27	problems	problem	NOUN	NNS	Number=Plur	26	_	_	start_char=181|end_char=189
28	in	in	ADP	IN	_	27	_	_	start_char=190|end_char=192
29	machine	machine	NOUN	NN	Number=Sing	28	_	_	start_char=193|end_char=200
30	learning	learning	NOUN	NN	Number=Sing	29	_	_	start_char=201|end_char=209
31	and	and	CCONJ	CC	_	30	_	_	start_char=210|end_char=213
32	statistical	statistical	ADJ	JJ	Degree=Pos	31	_	_	start_char=214|end_char=225
33	estimation	estimation	NOUN	NN	Number=Sing	32	_	_	SpaceAfter=No|start_char=226|end_char=236
34	.	.	PUNCT	.	_	33	_	_	start_char=236|end_char=237

# text = this article introduces the mm algorithm framework in general and via three popular example applications: gaussian mixture regressions, multinomial logistic regressions, and support vector machines.
# sent_id = 1
1	this	this	DET	DT	Number=Sing|PronType=Dem	0	_	_	start_char=238|end_char=242
2	article	article	NOUN	NN	Number=Sing	1	_	_	start_char=243|end_char=250
3	introduces	introduce	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	_	_	start_char=251|end_char=261
4	the	the	DET	DT	Definite=Def|PronType=Art	3	_	_	start_char=262|end_char=265
5	mm	mm	NOUN	NN	Number=Sing	4	_	_	start_char=266|end_char=268
6	algorithm	algorithm	NOUN	NN	Number=Sing	5	_	_	start_char=269|end_char=278
7	framework	framework	NOUN	NN	Number=Sing	6	_	_	start_char=279|end_char=288
8	in	in	ADP	IN	_	7	_	_	start_char=289|end_char=291
9	general	general	ADJ	JJ	Degree=Pos	8	_	_	start_char=292|end_char=299
10	and	and	CCONJ	CC	_	9	_	_	start_char=300|end_char=303
11	via	via	ADP	IN	_	10	_	_	start_char=304|end_char=307
12	three	three	NUM	CD	NumForm=Word|NumType=Card	11	_	_	start_char=308|end_char=313
13	popular	popular	ADJ	JJ	Degree=Pos	12	_	_	start_char=314|end_char=321
14	example	example	NOUN	NN	Number=Sing	13	_	_	start_char=322|end_char=329
15	applications	application	NOUN	NNS	Number=Plur	14	_	_	SpaceAfter=No|start_char=330|end_char=342
16	:	:	PUNCT	:	_	15	_	_	start_char=342|end_char=343
17	gaussian	gaussian	ADJ	JJ	Degree=Pos	16	_	_	start_char=344|end_char=352
18	mixture	mixture	NOUN	NN	Number=Sing	17	_	_	start_char=353|end_char=360
19	regressions	regression	NOUN	NNS	Number=Plur	18	_	_	SpaceAfter=No|start_char=361|end_char=372
20	,	,	PUNCT	,	_	19	_	_	start_char=372|end_char=373
21	multinomial	multinomial	ADJ	JJ	Degree=Pos	20	_	_	start_char=374|end_char=385
22	logistic	logistic	ADJ	JJ	Degree=Pos	21	_	_	start_char=386|end_char=394
23	regressions	regression	NOUN	NNS	Number=Plur	22	_	_	SpaceAfter=No|start_char=395|end_char=406
24	,	,	PUNCT	,	_	23	_	_	start_char=406|end_char=407
25	and	and	CCONJ	CC	_	24	_	_	start_char=408|end_char=411
26	support	support	NOUN	NN	Number=Sing	25	_	_	start_char=412|end_char=419
27	vector	vector	NOUN	NN	Number=Sing	26	_	_	start_char=420|end_char=426
28	machines	machine	NOUN	NNS	Number=Plur	27	_	_	SpaceAfter=No|start_char=427|end_char=435
29	.	.	PUNCT	.	_	28	_	_	start_char=435|end_char=436

# text = specific algorithms for the three examples are derived and numerical demonstrations are presented.
# sent_id = 2
1	specific	specific	ADJ	JJ	Degree=Pos	0	_	_	start_char=437|end_char=445
2	algorithms	algorithm	NOUN	NNS	Number=Plur	1	_	_	start_char=446|end_char=456
3	for	for	ADP	IN	_	2	_	_	start_char=457|end_char=460
4	the	the	DET	DT	Definite=Def|PronType=Art	3	_	_	start_char=461|end_char=464
5	three	three	NUM	CD	NumForm=Word|NumType=Card	4	_	_	start_char=465|end_char=470
6	examples	example	NOUN	NNS	Number=Plur	5	_	_	start_char=471|end_char=479
7	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	6	_	_	start_char=480|end_char=483
8	derived	derive	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	7	_	_	start_char=484|end_char=491
9	and	and	CCONJ	CC	_	8	_	_	start_char=492|end_char=495
10	numerical	numerical	ADJ	JJ	Degree=Pos	9	_	_	start_char=496|end_char=505
11	demonstrations	demonstration	NOUN	NNS	Number=Plur	10	_	_	start_char=506|end_char=520
12	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	11	_	_	start_char=521|end_char=524
13	presented	present	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	12	_	_	SpaceAfter=No|start_char=525|end_char=534
14	.	.	PUNCT	.	_	13	_	_	start_char=534|end_char=535

# text = theoretical and practical aspects of mm algorithm design are discussed.
# sent_id = 3
1	theoretical	theoretical	ADJ	JJ	Degree=Pos	0	_	_	start_char=536|end_char=547
2	and	and	CCONJ	CC	_	1	_	_	start_char=548|end_char=551
3	practical	practical	ADJ	JJ	Degree=Pos	2	_	_	start_char=552|end_char=561
4	aspects	aspect	NOUN	NNS	Number=Plur	3	_	_	start_char=562|end_char=569
5	of	of	ADP	IN	_	4	_	_	start_char=570|end_char=572
6	mm	mm	NOUN	NN	Number=Sing	5	_	_	start_char=573|end_char=575
7	algorithm	algorithm	NOUN	NN	Number=Sing	6	_	_	start_char=576|end_char=585
8	design	design	NOUN	NN	Number=Sing	7	_	_	start_char=586|end_char=592
9	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	8	_	_	start_char=593|end_char=596
10	discussed	discuss	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	9	_	_	SpaceAfter=No|start_char=597|end_char=606
11	.	.	PUNCT	.	_	10	_	_	start_char=606|end_char=607

# text = introduction let x ∈ x ⊂ r p and y ∈ y ⊂ r q be random variables, which we shall refer to as the input and target variables, respectively.
# sent_id = 4
1	introduction	introduction	NOUN	NN	Number=Sing	0	_	_	start_char=608|end_char=620
2	let	let	VERB	VB	Mood=Imp|VerbForm=Fin	1	_	_	start_char=621|end_char=624
3	x	x	X	GW	_	2	_	_	start_char=625|end_char=626
4	∈	∈	X	GW	_	3	_	_	start_char=627|end_char=628
5	x	x	X	GW	_	4	_	_	start_char=629|end_char=630
6	⊂	⊂	X	GW	_	5	_	_	start_char=631|end_char=632
7	r	be	X	GW	_	6	_	_	start_char=633|end_char=634
8	p	p	X	GW	_	7	_	_	start_char=635|end_char=636
9	and	and	X	GW	_	8	_	_	start_char=637|end_char=640
10	y	y	X	GW	_	9	_	_	start_char=641|end_char=642
11	∈	∈	X	GW	_	10	_	_	start_char=643|end_char=644
12	y	y	X	GW	_	11	_	_	start_char=645|end_char=646
13	⊂	⊂	X	FW	_	12	_	_	start_char=647|end_char=648
14	r	be	X	GW	_	13	_	_	start_char=649|end_char=650
15	q	q	NOUN	NN	Number=Sing	14	_	_	start_char=651|end_char=652
16	be	be	AUX	VB	VerbForm=Fin	15	_	_	start_char=653|end_char=655
17	random	random	ADJ	JJ	Degree=Pos	16	_	_	start_char=656|end_char=662
18	variables	variable	NOUN	NNS	Number=Plur	17	_	_	SpaceAfter=No|start_char=663|end_char=672
19	,	,	PUNCT	,	_	18	_	_	start_char=672|end_char=673
20	which	which	PRON	WDT	PronType=Rel	19	_	_	start_char=674|end_char=679
21	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	20	_	_	start_char=680|end_char=682
22	shall	shall	AUX	MD	VerbForm=Fin	21	_	_	start_char=683|end_char=688
23	refer	refer	VERB	VB	VerbForm=Inf	22	_	_	start_char=689|end_char=694
24	to	to	ADP	IN	_	23	_	_	start_char=695|end_char=697
25	as	as	ADP	IN	_	24	_	_	start_char=698|end_char=700
26	the	the	DET	DT	Definite=Def|PronType=Art	25	_	_	start_char=701|end_char=704
27	input	input	NOUN	NN	Number=Sing	26	_	_	start_char=705|end_char=710
28	and	and	CCONJ	CC	_	27	_	_	start_char=711|end_char=714
29	target	target	NOUN	NN	Number=Sing	28	_	_	start_char=715|end_char=721
30	variables	variable	NOUN	NNS	Number=Plur	29	_	_	SpaceAfter=No|start_char=722|end_char=731
31	,	,	PUNCT	,	_	30	_	_	start_char=731|end_char=732
32	respectively	respectively	ADV	RB	_	31	_	_	SpaceAfter=No|start_char=733|end_char=745
33	.	.	PUNCT	.	_	32	_	_	start_char=745|end_char=746

# text = we shall denote a sample of n independent and identically distributed (iid) pairs of variables d = {(x i , y i )} n i=1 1 arxiv:1611.03969v1 [stat.co] 12 nov 2016 as the data, and d = {(x i , y i )} n i=1 as an observed realization of the data.
# sent_id = 5
1	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	0	_	_	start_char=747|end_char=749
2	shall	shall	AUX	MD	VerbForm=Fin	1	_	_	start_char=750|end_char=755
3	denote	denote	VERB	VB	VerbForm=Inf	2	_	_	start_char=756|end_char=762
4	a	a	DET	DT	Definite=Ind|PronType=Art	3	_	_	start_char=763|end_char=764
5	sample	sample	NOUN	NN	Number=Sing	4	_	_	start_char=765|end_char=771
6	of	of	ADP	IN	_	5	_	_	start_char=772|end_char=774
7	n	and	ADJ	JJ	Degree=Pos	6	_	_	start_char=775|end_char=776
8	independent	independent	ADJ	JJ	Degree=Pos	7	_	_	start_char=777|end_char=788
9	and	and	CCONJ	CC	_	8	_	_	start_char=789|end_char=792
10	identically	identically	ADV	RB	_	9	_	_	start_char=793|end_char=804
11	distributed	distribute	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	10	_	_	start_char=805|end_char=816
12	(	(	PUNCT	-LRB-	_	11	_	_	SpaceAfter=No|start_char=817|end_char=818
13	iid	iid	NOUN	NN	Number=Sing	12	_	_	SpaceAfter=No|start_char=818|end_char=821
14	)	)	PUNCT	-RRB-	_	13	_	_	start_char=821|end_char=822
15	pairs	pair	NOUN	NNS	Number=Plur	14	_	_	start_char=823|end_char=828
16	of	of	ADP	IN	_	15	_	_	start_char=829|end_char=831
17	variables	variable	NOUN	NNS	Number=Plur	16	_	_	start_char=832|end_char=841
18	d	would	NOUN	NN	Number=Sing	17	_	_	start_char=842|end_char=843
19	=	=	SYM	SYM	_	18	_	_	start_char=844|end_char=845
20	{	{	NOUN	NN	Number=Sing	19	_	_	SpaceAfter=No|start_char=846|end_char=847
21	(	(	PUNCT	-LRB-	_	20	_	_	SpaceAfter=No|start_char=847|end_char=848
22	x	x	NOUN	NN	Number=Sing	21	_	_	start_char=848|end_char=849
23	i	i	NOUN	NN	Number=Sing	22	_	_	start_char=850|end_char=851
24	,	,	PUNCT	,	_	23	_	_	start_char=852|end_char=853
25	y	y	NOUN	NN	Number=Sing	24	_	_	start_char=854|end_char=855
26	i	i	NUM	LS	NumForm=Roman|NumType=Card	25	_	_	start_char=856|end_char=857
27	)	)	PUNCT	-RRB-	_	26	_	_	SpaceAfter=No|start_char=858|end_char=859
28	}	}	NOUN	NN	Number=Sing	27	_	_	start_char=859|end_char=860
29	n	n	NOUN	NN	Number=Sing	28	_	_	start_char=861|end_char=862
30	i=	i=	NOUN	NN	Number=Sing	29	_	_	SpaceAfter=No|start_char=863|end_char=865
31	1	1	NUM	CD	NumForm=Digit|NumType=Card	30	_	_	start_char=865|end_char=866
32	1	1	NUM	CD	NumForm=Digit|NumType=Card	31	_	_	start_char=867|end_char=868
33	arxiv:1611.03969v1	arxiv:1611.03969v1	PROPN	NNP	Number=Sing	32	_	_	start_char=869|end_char=887
34	[	[	PUNCT	-LRB-	_	33	_	_	SpaceAfter=No|start_char=888|end_char=889
35	stat.co	stat.co	PROPN	NNP	Number=Sing	34	_	_	SpaceAfter=No|start_char=889|end_char=896
36	]	]	PUNCT	-RRB-	_	35	_	_	start_char=896|end_char=897
37	12	12	NUM	CD	NumForm=Digit|NumType=Card	36	_	_	start_char=898|end_char=900
38	nov	nov	PROPN	NNP	Number=Sing	37	_	_	start_char=901|end_char=904
39	2016	2016	NUM	CD	NumForm=Digit|NumType=Card	38	_	_	start_char=905|end_char=909
40	as	as	ADP	IN	_	39	_	_	start_char=910|end_char=912
41	the	the	DET	DT	Definite=Def|PronType=Art	40	_	_	start_char=913|end_char=916
42	data	datum	NOUN	NNS	Number=Plur	41	_	_	SpaceAfter=No|start_char=917|end_char=921
43	,	,	PUNCT	,	_	42	_	_	start_char=921|end_char=922
44	and	and	CCONJ	CC	_	43	_	_	start_char=923|end_char=926
45	d	would	NOUN	NN	Number=Sing	44	_	_	start_char=927|end_char=928
46	=	=	SYM	SYM	_	45	_	_	start_char=929|end_char=930
47	{	{	SYM	SYM	_	46	_	_	SpaceAfter=No|start_char=931|end_char=932
48	(	(	PUNCT	-LRB-	_	47	_	_	SpaceAfter=No|start_char=932|end_char=933
49	x	x	NOUN	NN	Number=Sing	48	_	_	start_char=933|end_char=934
50	i	i	NOUN	NN	Number=Sing	49	_	_	start_char=935|end_char=936
51	,	,	PUNCT	,	_	50	_	_	start_char=937|end_char=938
52	y	y	NOUN	NN	Number=Sing	51	_	_	start_char=939|end_char=940
53	i	i	NUM	LS	NumForm=Roman|NumType=Card	52	_	_	start_char=941|end_char=942
54	)	)	PUNCT	-RRB-	_	53	_	_	SpaceAfter=No|start_char=943|end_char=944
55	}	}	NOUN	NN	Number=Sing	54	_	_	start_char=944|end_char=945
56	n	and	CCONJ	CC	_	55	_	_	start_char=946|end_char=947
57	i=	i=	SYM	SYM	_	56	_	_	SpaceAfter=No|start_char=948|end_char=950
58	1	1	NUM	CD	NumForm=Digit|NumType=Card	57	_	_	start_char=950|end_char=951
59	as	as	ADP	IN	_	58	_	_	start_char=952|end_char=954
60	an	a	DET	DT	Definite=Ind|PronType=Art	59	_	_	start_char=955|end_char=957
61	observed	observe	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	60	_	_	start_char=958|end_char=966
62	realization	realization	NOUN	NN	Number=Sing	61	_	_	start_char=967|end_char=978
63	of	of	ADP	IN	_	62	_	_	start_char=979|end_char=981
64	the	the	DET	DT	Definite=Def|PronType=Art	63	_	_	start_char=982|end_char=985
65	data	datum	NOUN	NNS	Number=Plur	64	_	_	SpaceAfter=No|start_char=986|end_char=990
66	.	.	PUNCT	.	_	65	_	_	start_char=990|end_char=991

# text = under the empirical risk minimization (erm) framework of vapnik (1998, ch. 1) or the extremum estimation (ee) framework of amemiya (1985, ch. 4 ), a large number of machine learning and statistical estimation problems can be phrased as the computation of min θ∈θ r θ; d or θ = arg min θ∈θ r θ; d , (1) where r θ; d is a risk function defined over the observed data d and is dependent on some parameter θ ∈ θ. common risk functions that are used in practice are the negative log-likelihood functions, which can be expressed as when y = {-1, 1}, a common problem in machine learning is to construct a classification function f (x i ; θ) that minimizes the classification (0-1) risk r θ; d = - 1 n n i=1 log f (x i , y i ; θ) , r θ; d = 1 n n i=1 i {y i = f (x i ; θ)} , where f : x → y and i {a} = 1 if proposition a is true and 0 otherwise.
# sent_id = 6
1	under	under	ADP	IN	_	0	_	_	start_char=992|end_char=997
2	the	the	DET	DT	Definite=Def|PronType=Art	1	_	_	start_char=998|end_char=1001
3	empirical	empirical	ADJ	JJ	Degree=Pos	2	_	_	start_char=1002|end_char=1011
4	risk	risk	NOUN	NN	Number=Sing	3	_	_	start_char=1012|end_char=1016
5	minimization	minimization	NOUN	NN	Number=Sing	4	_	_	start_char=1017|end_char=1029
6	(	(	PUNCT	-LRB-	_	5	_	_	SpaceAfter=No|start_char=1030|end_char=1031
7	erm	erm	NOUN	NN	Number=Sing	6	_	_	SpaceAfter=No|start_char=1031|end_char=1034
8	)	)	PUNCT	-RRB-	_	7	_	_	start_char=1034|end_char=1035
9	framework	framework	NOUN	NN	Number=Sing	8	_	_	start_char=1036|end_char=1045
10	of	of	ADP	IN	_	9	_	_	start_char=1046|end_char=1048
11	vapnik	vapnik	NOUN	NN	Number=Sing	10	_	_	start_char=1049|end_char=1055
12	(	(	PUNCT	-LRB-	_	11	_	_	SpaceAfter=No|start_char=1056|end_char=1057
13	1998	1998	NUM	CD	NumForm=Digit|NumType=Card	12	_	_	SpaceAfter=No|start_char=1057|end_char=1061
14	,	,	PUNCT	,	_	13	_	_	start_char=1061|end_char=1062
15	ch.	ch.	NOUN	NN	Abbr=Yes|Number=Sing	14	_	_	start_char=1063|end_char=1066
16	1	1	NUM	CD	NumForm=Digit|NumType=Card	15	_	_	SpaceAfter=No|start_char=1067|end_char=1068
17	)	)	PUNCT	-RRB-	_	16	_	_	start_char=1068|end_char=1069
18	or	or	CCONJ	CC	_	17	_	_	start_char=1070|end_char=1072
19	the	the	DET	DT	Definite=Def|PronType=Art	18	_	_	start_char=1073|end_char=1076
20	extremum	extremum	NOUN	NN	Number=Sing	19	_	_	start_char=1077|end_char=1085
21	estimation	estimation	NOUN	NN	Number=Sing	20	_	_	start_char=1086|end_char=1096
22	(	(	PUNCT	-LRB-	_	21	_	_	SpaceAfter=No|start_char=1097|end_char=1098
23	ee	ee	NOUN	NN	Number=Sing	22	_	_	SpaceAfter=No|start_char=1098|end_char=1100
24	)	)	PUNCT	-RRB-	_	23	_	_	start_char=1100|end_char=1101
25	framework	framework	NOUN	NN	Number=Sing	24	_	_	start_char=1102|end_char=1111
26	of	of	ADP	IN	_	25	_	_	start_char=1112|end_char=1114
27	amemiya	amemiya	PROPN	NNP	Number=Sing	26	_	_	start_char=1115|end_char=1122
28	(	(	PUNCT	-LRB-	_	27	_	_	SpaceAfter=No|start_char=1123|end_char=1124
29	1985	1985	NUM	CD	NumForm=Digit|NumType=Card	28	_	_	SpaceAfter=No|start_char=1124|end_char=1128
30	,	,	PUNCT	,	_	29	_	_	start_char=1128|end_char=1129
31	ch.	ch.	NOUN	NN	Abbr=Yes|Number=Sing	30	_	_	start_char=1130|end_char=1133
32	4	4	NUM	CD	NumForm=Digit|NumType=Card	31	_	_	start_char=1134|end_char=1135
33	)	)	PUNCT	-RRB-	_	32	_	_	SpaceAfter=No|start_char=1136|end_char=1137
34	,	,	PUNCT	,	_	33	_	_	start_char=1137|end_char=1138
35	a	a	DET	DT	Definite=Ind|PronType=Art	34	_	_	start_char=1139|end_char=1140
36	large	large	ADJ	JJ	Degree=Pos	35	_	_	start_char=1141|end_char=1146
37	number	number	NOUN	NN	Number=Sing	36	_	_	start_char=1147|end_char=1153
38	of	of	ADP	IN	_	37	_	_	start_char=1154|end_char=1156
39	machine	machine	NOUN	NN	Number=Sing	38	_	_	start_char=1157|end_char=1164
40	learning	learning	NOUN	NN	Number=Sing	39	_	_	start_char=1165|end_char=1173
41	and	and	CCONJ	CC	_	40	_	_	start_char=1174|end_char=1177
42	statistical	statistical	ADJ	JJ	Degree=Pos	41	_	_	start_char=1178|end_char=1189
43	estimation	estimation	NOUN	NN	Number=Sing	42	_	_	start_char=1190|end_char=1200
44	problems	problem	NOUN	NNS	Number=Plur	43	_	_	start_char=1201|end_char=1209
45	can	can	AUX	MD	VerbForm=Fin	44	_	_	start_char=1210|end_char=1213
46	be	be	AUX	VB	VerbForm=Inf	45	_	_	start_char=1214|end_char=1216
47	phrased	phrase	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	46	_	_	start_char=1217|end_char=1224
48	as	as	ADP	IN	_	47	_	_	start_char=1225|end_char=1227
49	the	the	DET	DT	Definite=Def|PronType=Art	48	_	_	start_char=1228|end_char=1231
50	computation	computation	NOUN	NN	Number=Sing	49	_	_	start_char=1232|end_char=1243
51	of	of	ADP	IN	_	50	_	_	start_char=1244|end_char=1246
52	min	minute	NOUN	NN	Number=Sing	51	_	_	start_char=1247|end_char=1250
53	θ∈θ	θ∈θ	X	FW	_	52	_	_	start_char=1251|end_char=1254
54	r	be	X	FW	_	53	_	_	start_char=1255|end_char=1256
55	θ	θ	NOUN	NN	Number=Sing	54	_	_	SpaceAfter=No|start_char=1257|end_char=1258
56	;	;	PUNCT	,	_	55	_	_	start_char=1258|end_char=1259
57	d	would	X	FW	_	56	_	_	start_char=1260|end_char=1261
58	or	or	CCONJ	CC	_	57	_	_	start_char=1262|end_char=1264
59	θ	θ	NOUN	NN	Number=Sing	58	_	_	start_char=1265|end_char=1266
60	=	=	SYM	SYM	_	59	_	_	start_char=1267|end_char=1268
61	arg	arg	NOUN	NN	Number=Sing	60	_	_	start_char=1269|end_char=1272
62	min	minute	NOUN	NN	Number=Sing	61	_	_	start_char=1273|end_char=1276
63	θ∈θ	θ∈θ	NOUN	NN	Number=Sing	62	_	_	start_char=1277|end_char=1280
64	r	be	AUX	VBP	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	63	_	_	start_char=1281|end_char=1282
65	θ	θ	NOUN	NN	Number=Sing	64	_	_	SpaceAfter=No|start_char=1283|end_char=1284
66	;	;	PUNCT	,	_	65	_	_	start_char=1284|end_char=1285
67	d	d	PROPN	NNP	Number=Sing	66	_	_	start_char=1286|end_char=1287
68	,	,	PUNCT	,	_	67	_	_	start_char=1288|end_char=1289
69	(	(	PUNCT	-LRB-	_	68	_	_	SpaceAfter=No|start_char=1290|end_char=1291
70	1	1	NUM	LS	NumForm=Digit|NumType=Card	69	_	_	SpaceAfter=No|start_char=1291|end_char=1292
71	)	)	PUNCT	-RRB-	_	70	_	_	start_char=1292|end_char=1293
72	where	where	ADV	WRB	PronType=Int	71	_	_	start_char=1294|end_char=1299
73	r	be	AUX	VBP	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	72	_	_	start_char=1300|end_char=1301
74	θ	θ	NOUN	NN	Number=Sing	73	_	_	SpaceAfter=No|start_char=1302|end_char=1303
75	;	;	PUNCT	:	_	74	_	_	start_char=1303|end_char=1304
76	d	would	NOUN	NN	Number=Sing	75	_	_	start_char=1305|end_char=1306
77	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	76	_	_	start_char=1307|end_char=1309
78	a	a	DET	DT	Definite=Ind|PronType=Art	77	_	_	start_char=1310|end_char=1311
79	risk	risk	NOUN	NN	Number=Sing	78	_	_	start_char=1312|end_char=1316
80	function	function	NOUN	NN	Number=Sing	79	_	_	start_char=1317|end_char=1325
81	defined	define	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	80	_	_	start_char=1326|end_char=1333
82	over	over	ADP	IN	_	81	_	_	start_char=1334|end_char=1338
83	the	the	DET	DT	Definite=Def|PronType=Art	82	_	_	start_char=1339|end_char=1342
84	observed	observe	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	83	_	_	start_char=1343|end_char=1351
85	data	datum	NOUN	NNS	Number=Plur	84	_	_	start_char=1352|end_char=1356
86	d	would	NOUN	NN	Number=Sing	85	_	_	start_char=1357|end_char=1358
87	and	and	CCONJ	CC	_	86	_	_	start_char=1359|end_char=1362
88	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	87	_	_	start_char=1363|end_char=1365
89	dependent	dependent	ADJ	JJ	Degree=Pos	88	_	_	start_char=1366|end_char=1375
90	on	on	ADP	IN	_	89	_	_	start_char=1376|end_char=1378
91	some	some	DET	DT	PronType=Ind	90	_	_	start_char=1379|end_char=1383
92	parameter	parameter	NOUN	NN	Number=Sing	91	_	_	start_char=1384|end_char=1393
93	θ	θ	NOUN	NN	Number=Sing	92	_	_	start_char=1394|end_char=1395
94	∈	∈	NOUN	NN	Number=Sing	93	_	_	start_char=1396|end_char=1397
95	θ.	θ.	PUNCT	,	_	94	_	_	start_char=1398|end_char=1400
96	common	common	ADJ	JJ	Degree=Pos	95	_	_	start_char=1401|end_char=1407
97	risk	risk	NOUN	NN	Number=Sing	96	_	_	start_char=1408|end_char=1412
98	functions	function	NOUN	NNS	Number=Plur	97	_	_	start_char=1413|end_char=1422
99	that	that	PRON	WDT	PronType=Rel	98	_	_	start_char=1423|end_char=1427
100	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	99	_	_	start_char=1428|end_char=1431
101	used	use	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	100	_	_	start_char=1432|end_char=1436
102	in	in	ADP	IN	_	101	_	_	start_char=1437|end_char=1439
103	practice	practice	NOUN	NN	Number=Sing	102	_	_	start_char=1440|end_char=1448
104	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	103	_	_	start_char=1449|end_char=1452
105	the	the	DET	DT	Definite=Def|PronType=Art	104	_	_	start_char=1453|end_char=1456
106	negative	negative	ADJ	JJ	Degree=Pos	105	_	_	start_char=1457|end_char=1465
107	log	log	NOUN	NN	Number=Sing	106	_	_	SpaceAfter=No|start_char=1466|end_char=1469
108	-	-	PUNCT	HYPH	_	107	_	_	SpaceAfter=No|start_char=1469|end_char=1470
109	likelihood	likelihood	NOUN	NN	Number=Sing	108	_	_	start_char=1470|end_char=1480
110	functions	function	NOUN	NNS	Number=Plur	109	_	_	SpaceAfter=No|start_char=1481|end_char=1490
111	,	,	PUNCT	,	_	110	_	_	start_char=1490|end_char=1491
112	which	which	PRON	WDT	PronType=Rel	111	_	_	start_char=1492|end_char=1497
113	can	can	AUX	MD	VerbForm=Fin	112	_	_	start_char=1498|end_char=1501
114	be	be	AUX	VB	VerbForm=Inf	113	_	_	start_char=1502|end_char=1504
115	expressed	express	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	114	_	_	start_char=1505|end_char=1514
116	as	as	ADP	IN	_	115	_	_	start_char=1515|end_char=1517
117	when	when	ADV	WRB	PronType=Int	116	_	_	start_char=1518|end_char=1522
118	y	y	NOUN	NN	Number=Sing	117	_	_	start_char=1523|end_char=1524
119	=	=	SYM	SYM	_	118	_	_	start_char=1525|end_char=1526
120	{	{	NOUN	NN	Number=Sing	119	_	_	SpaceAfter=No|start_char=1527|end_char=1528
121	-	-	PUNCT	HYPH	_	120	_	_	SpaceAfter=No|start_char=1528|end_char=1529
122	1	1	NUM	CD	NumForm=Digit|NumType=Card	121	_	_	SpaceAfter=No|start_char=1529|end_char=1530
123	,	,	PUNCT	,	_	122	_	_	start_char=1530|end_char=1531
124	1	1	NUM	CD	NumForm=Digit|NumType=Card	123	_	_	SpaceAfter=No|start_char=1532|end_char=1533
125	}	}	NOUN	NN	Number=Sing	124	_	_	SpaceAfter=No|start_char=1533|end_char=1534
126	,	,	PUNCT	,	_	125	_	_	start_char=1534|end_char=1535
127	a	a	DET	DT	Definite=Ind|PronType=Art	126	_	_	start_char=1536|end_char=1537
128	common	common	ADJ	JJ	Degree=Pos	127	_	_	start_char=1538|end_char=1544
129	problem	problem	NOUN	NN	Number=Sing	128	_	_	start_char=1545|end_char=1552
130	in	in	ADP	IN	_	129	_	_	start_char=1553|end_char=1555
131	machine	machine	NOUN	NN	Number=Sing	130	_	_	start_char=1556|end_char=1563
132	learning	learning	NOUN	NN	Number=Sing	131	_	_	start_char=1564|end_char=1572
133	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	132	_	_	start_char=1573|end_char=1575
134	to	to	PART	TO	_	133	_	_	start_char=1576|end_char=1578
135	construct	construct	VERB	VB	VerbForm=Inf	134	_	_	start_char=1579|end_char=1588
136	a	a	DET	DT	Definite=Ind|PronType=Art	135	_	_	start_char=1589|end_char=1590
137	classification	classification	NOUN	NN	Number=Sing	136	_	_	start_char=1591|end_char=1605
138	function	function	NOUN	NN	Number=Sing	137	_	_	start_char=1606|end_char=1614
139	f	f	NOUN	NN	Number=Sing	138	_	_	start_char=1615|end_char=1616
140	(	(	PUNCT	-LRB-	_	139	_	_	SpaceAfter=No|start_char=1617|end_char=1618
141	x	x	NOUN	NN	Number=Sing	140	_	_	start_char=1618|end_char=1619
142	i	i	NOUN	NN	Number=Sing	141	_	_	start_char=1620|end_char=1621
143	;	;	PUNCT	:	_	142	_	_	start_char=1622|end_char=1623
144	θ	θ	NOUN	NN	Number=Sing	143	_	_	SpaceAfter=No|start_char=1624|end_char=1625
145	)	)	PUNCT	-RRB-	_	144	_	_	start_char=1625|end_char=1626
146	that	that	PRON	WDT	PronType=Rel	145	_	_	start_char=1627|end_char=1631
147	minimizes	minimize	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	146	_	_	start_char=1632|end_char=1641
148	the	the	DET	DT	Definite=Def|PronType=Art	147	_	_	start_char=1642|end_char=1645
149	classification	classification	NOUN	NN	Number=Sing	148	_	_	start_char=1646|end_char=1660
150	(	(	PUNCT	-LRB-	_	149	_	_	SpaceAfter=No|start_char=1661|end_char=1662
151	0	0	NUM	CD	NumForm=Digit|NumType=Card	150	_	_	SpaceAfter=No|start_char=1662|end_char=1663
152	-	-	SYM	SYM	_	151	_	_	SpaceAfter=No|start_char=1663|end_char=1664
153	1	1	NUM	CD	NumForm=Digit|NumType=Card	152	_	_	SpaceAfter=No|start_char=1664|end_char=1665
154	)	)	PUNCT	-RRB-	_	153	_	_	start_char=1665|end_char=1666
155	risk	risk	NOUN	NN	Number=Sing	154	_	_	start_char=1667|end_char=1671
156	r	be	X	AFX	_	155	_	_	start_char=1672|end_char=1673
157	θ	θ	NOUN	NN	Number=Sing	156	_	_	SpaceAfter=No|start_char=1674|end_char=1675
158	;	;	PUNCT	,	_	157	_	_	start_char=1675|end_char=1676
159	d	would	NOUN	NN	Number=Sing	158	_	_	start_char=1677|end_char=1678
160	=	=	SYM	SYM	_	159	_	_	start_char=1679|end_char=1680
161	-	-	PUNCT	HYPH	_	160	_	_	start_char=1681|end_char=1682
162	1	1	NUM	CD	NumForm=Digit|NumType=Card	161	_	_	start_char=1683|end_char=1684
163	n	n	NOUN	NN	Number=Sing	162	_	_	start_char=1685|end_char=1686
164	n	n	NOUN	NN	Number=Sing	163	_	_	start_char=1687|end_char=1688
165	i=	i=	NOUN	NN	Number=Sing	164	_	_	SpaceAfter=No|start_char=1689|end_char=1691
166	1	1	NUM	CD	NumForm=Digit|NumType=Card	165	_	_	start_char=1691|end_char=1692
167	log	log	NOUN	NN	Number=Sing	166	_	_	start_char=1693|end_char=1696
168	f	f	NOUN	NN	Number=Sing	167	_	_	start_char=1697|end_char=1698
169	(	(	PUNCT	-LRB-	_	168	_	_	SpaceAfter=No|start_char=1699|end_char=1700
170	x	x	NOUN	NN	Number=Sing	169	_	_	start_char=1700|end_char=1701
171	i	i	NOUN	NN	Number=Sing	170	_	_	start_char=1702|end_char=1703
172	,	,	PUNCT	,	_	171	_	_	start_char=1704|end_char=1705
173	y	y	NOUN	NN	Number=Sing	172	_	_	start_char=1706|end_char=1707
174	i	i	NOUN	NN	Number=Sing	173	_	_	start_char=1708|end_char=1709
175	;	;	PUNCT	:	_	174	_	_	start_char=1710|end_char=1711
176	θ	θ	NOUN	NN	Number=Sing	175	_	_	SpaceAfter=No|start_char=1712|end_char=1713
177	)	)	PUNCT	-RRB-	_	176	_	_	start_char=1713|end_char=1714
178	,	,	PUNCT	,	_	177	_	_	start_char=1715|end_char=1716
179	r	be	X	FW	_	178	_	_	start_char=1717|end_char=1718
180	θ	θ	NOUN	NN	Number=Sing	179	_	_	SpaceAfter=No|start_char=1719|end_char=1720
181	;	;	PUNCT	,	_	180	_	_	start_char=1720|end_char=1721
182	d	would	NOUN	NN	Number=Sing	181	_	_	start_char=1722|end_char=1723
183	=	=	SYM	SYM	_	182	_	_	start_char=1724|end_char=1725
184	1	1	NUM	CD	NumForm=Digit|NumType=Card	183	_	_	start_char=1726|end_char=1727
185	n	n	NOUN	NN	Number=Sing	184	_	_	start_char=1728|end_char=1729
186	n	n	NOUN	NN	Number=Sing	185	_	_	start_char=1730|end_char=1731
187	i=	i=	NOUN	NN	Number=Sing	186	_	_	SpaceAfter=No|start_char=1732|end_char=1734
188	1	1	NUM	CD	NumForm=Digit|NumType=Card	187	_	_	start_char=1734|end_char=1735
189	i	i	NOUN	NN	Number=Sing	188	_	_	start_char=1736|end_char=1737
190	{y	{y	NOUN	NN	Number=Sing	189	_	_	start_char=1738|end_char=1740
191	i	i	NOUN	NN	Number=Sing	190	_	_	start_char=1741|end_char=1742
192	=	=	SYM	SYM	_	191	_	_	start_char=1743|end_char=1744
193	f	f	NOUN	NN	Number=Sing	192	_	_	start_char=1745|end_char=1746
194	(	(	PUNCT	-LRB-	_	193	_	_	SpaceAfter=No|start_char=1747|end_char=1748
195	x	x	NOUN	NN	Number=Sing	194	_	_	start_char=1748|end_char=1749
196	i	i	NOUN	NN	Number=Sing	195	_	_	start_char=1750|end_char=1751
197	;	;	PUNCT	:	_	196	_	_	start_char=1752|end_char=1753
198	θ	θ	NOUN	NN	Number=Sing	197	_	_	SpaceAfter=No|start_char=1754|end_char=1755
199	)	)	PUNCT	-RRB-	_	198	_	_	SpaceAfter=No|start_char=1755|end_char=1756
200	}	}	NOUN	NN	Number=Sing	199	_	_	start_char=1756|end_char=1757
201	,	,	PUNCT	,	_	200	_	_	start_char=1758|end_char=1759
202	where	where	ADV	WRB	PronType=Int	201	_	_	start_char=1760|end_char=1765
203	f	f	NOUN	NN	Number=Sing	202	_	_	start_char=1766|end_char=1767
204	:	:	PUNCT	:	_	203	_	_	start_char=1768|end_char=1769
205	x	x	NOUN	NN	Number=Sing	204	_	_	start_char=1770|end_char=1771
206	→	→	SYM	SYM	_	205	_	_	start_char=1772|end_char=1773
207	y	y	NOUN	NN	Number=Sing	206	_	_	start_char=1774|end_char=1775
208	and	and	CCONJ	CC	_	207	_	_	start_char=1776|end_char=1779
209	i	I	PRON	PRP	Case=Nom|Number=Sing|Person=1|PronType=Prs	208	_	_	start_char=1780|end_char=1781
210	{a}	{a}	NOUN	NN	Number=Sing	209	_	_	start_char=1782|end_char=1785
211	=	=	SYM	SYM	_	210	_	_	start_char=1786|end_char=1787
212	1	1	NUM	CD	NumForm=Digit|NumType=Card	211	_	_	start_char=1788|end_char=1789
213	if	if	SCONJ	IN	_	212	_	_	start_char=1790|end_char=1792
214	proposition	proposition	NOUN	NN	Number=Sing	213	_	_	start_char=1793|end_char=1804
215	a	a	DET	DT	Definite=Ind|PronType=Art	214	_	_	start_char=1805|end_char=1806
216	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	215	_	_	start_char=1807|end_char=1809
217	true	true	ADJ	JJ	Degree=Pos	216	_	_	start_char=1810|end_char=1814
218	and	and	CCONJ	CC	_	217	_	_	start_char=1815|end_char=1818
219	0	0	NUM	CD	NumForm=Digit|NumType=Card	218	_	_	start_char=1819|end_char=1820
220	otherwise	otherwise	ADV	RB	_	219	_	_	SpaceAfter=No|start_char=1821|end_char=1830
221	.	.	PUNCT	.	_	220	_	_	start_char=1830|end_char=1831

# text = unfortunately, the form of the classification risk is combinatorial and thus necessitates the use of surrogate classification risks of the form r θ; d = 1 n n i=1 ψ (x i , y i , f (x i ; θ)) , where ψ : r p ×{-1, 1} 2 → [0, ∞) and ψ (x, y, y) = 0 for all x and y [cf. scholkopf & smola (2002, def. 3.1) ]. an example of a machine learning algorithm that minimizes a surrogate classification risk is the support vector machine (svm) of cortes & vapnik (1995) . the linear-basis svm utilizes a surrogate risk function, where ψ (x, y, f (x; θ)) = max {0, 1yf (x; θ)}is the hinge loss function, f (x; θ) = α + β x, and θ = α, β ∈ θ ⊂ r p+1 . the task of computing (1) may be complicated by various factors that fall outside the scope of the traditional calculus formulation for optimization [cf. khuri (2003, ch. 7) ]. such factors include the lack of differentiability of r or difficulty in obtaining closed-form solutions to the first-order condition (foc) equation ∇ θ r = 0, where ∇ θ is the gradient operator with respect to θ, and 0 is a zero vector.
# sent_id = 7
1	unfortunately	unfortunately	ADV	RB	_	0	_	_	SpaceAfter=No|start_char=1832|end_char=1845
2	,	,	PUNCT	,	_	1	_	_	start_char=1845|end_char=1846
3	the	the	DET	DT	Definite=Def|PronType=Art	2	_	_	start_char=1847|end_char=1850
4	form	form	NOUN	NN	Number=Sing	3	_	_	start_char=1851|end_char=1855
5	of	of	ADP	IN	_	4	_	_	start_char=1856|end_char=1858
6	the	the	DET	DT	Definite=Def|PronType=Art	5	_	_	start_char=1859|end_char=1862
7	classification	classification	NOUN	NN	Number=Sing	6	_	_	start_char=1863|end_char=1877
8	risk	risk	NOUN	NN	Number=Sing	7	_	_	start_char=1878|end_char=1882
9	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	_	_	start_char=1883|end_char=1885
10	combinatorial	combinatorial	ADJ	JJ	Degree=Pos	9	_	_	start_char=1886|end_char=1899
11	and	and	CCONJ	CC	_	10	_	_	start_char=1900|end_char=1903
12	thus	thus	ADV	RB	_	11	_	_	start_char=1904|end_char=1908
13	necessitates	necessitate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	12	_	_	start_char=1909|end_char=1921
14	the	the	DET	DT	Definite=Def|PronType=Art	13	_	_	start_char=1922|end_char=1925
15	use	use	NOUN	NN	Number=Sing	14	_	_	start_char=1926|end_char=1929
16	of	of	ADP	IN	_	15	_	_	start_char=1930|end_char=1932
17	surrogate	surrogate	ADJ	JJ	Degree=Pos	16	_	_	start_char=1933|end_char=1942
18	classification	classification	NOUN	NN	Number=Sing	17	_	_	start_char=1943|end_char=1957
19	risks	risk	NOUN	NNS	Number=Plur	18	_	_	start_char=1958|end_char=1963
20	of	of	ADP	IN	_	19	_	_	start_char=1964|end_char=1966
21	the	the	DET	DT	Definite=Def|PronType=Art	20	_	_	start_char=1967|end_char=1970
22	form	form	NOUN	NN	Number=Sing	21	_	_	start_char=1971|end_char=1975
23	r	be	X	FW	_	22	_	_	start_char=1976|end_char=1977
24	θ	θ	NOUN	NN	Number=Sing	23	_	_	SpaceAfter=No|start_char=1978|end_char=1979
25	;	;	PUNCT	,	_	24	_	_	start_char=1979|end_char=1980
26	d	would	NOUN	NN	Number=Sing	25	_	_	start_char=1981|end_char=1982
27	=	=	SYM	SYM	_	26	_	_	start_char=1983|end_char=1984
28	1	1	NUM	CD	NumForm=Digit|NumType=Card	27	_	_	start_char=1985|end_char=1986
29	n	n	NOUN	NN	Number=Sing	28	_	_	start_char=1987|end_char=1988
30	n	n	NOUN	NN	Number=Sing	29	_	_	start_char=1989|end_char=1990
31	i=	i=	SYM	SYM	_	30	_	_	SpaceAfter=No|start_char=1991|end_char=1993
32	1	1	NUM	CD	NumForm=Digit|NumType=Card	31	_	_	start_char=1993|end_char=1994
33	ψ	ψ	NOUN	NN	Number=Sing	32	_	_	start_char=1995|end_char=1996
34	(	(	PUNCT	-LRB-	_	33	_	_	SpaceAfter=No|start_char=1997|end_char=1998
35	x	x	NOUN	NN	Number=Sing	34	_	_	start_char=1998|end_char=1999
36	i	i	NOUN	NN	Number=Sing	35	_	_	start_char=2000|end_char=2001
37	,	,	PUNCT	,	_	36	_	_	start_char=2002|end_char=2003
38	y	y	X	FW	_	37	_	_	start_char=2004|end_char=2005
39	i	i	NOUN	NN	Number=Sing	38	_	_	start_char=2006|end_char=2007
40	,	,	PUNCT	,	_	39	_	_	start_char=2008|end_char=2009
41	f	f	NOUN	NN	Number=Sing	40	_	_	start_char=2010|end_char=2011
42	(	(	PUNCT	-LRB-	_	41	_	_	SpaceAfter=No|start_char=2012|end_char=2013
43	x	x	NOUN	NN	Number=Sing	42	_	_	start_char=2013|end_char=2014
44	i	i	NOUN	NN	Number=Sing	43	_	_	start_char=2015|end_char=2016
45	;	;	PUNCT	:	_	44	_	_	start_char=2017|end_char=2018
46	θ	θ	NOUN	NN	Number=Sing	45	_	_	SpaceAfter=No|start_char=2019|end_char=2020
47	)	)	PUNCT	-RRB-	_	46	_	_	SpaceAfter=No|start_char=2020|end_char=2021
48	)	)	PUNCT	-RRB-	_	47	_	_	start_char=2021|end_char=2022
49	,	,	PUNCT	,	_	48	_	_	start_char=2023|end_char=2024
50	where	where	ADV	WRB	PronType=Int	49	_	_	start_char=2025|end_char=2030
51	ψ	ψ	NOUN	NN	Number=Sing	50	_	_	start_char=2031|end_char=2032
52	:	:	PUNCT	:	_	51	_	_	start_char=2033|end_char=2034
53	r	be	AUX	VBP	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	52	_	_	start_char=2035|end_char=2036
54	p	p	NOUN	NN	Number=Sing	53	_	_	start_char=2037|end_char=2038
55	×	×	NOUN	NN	Number=Sing	54	_	_	SpaceAfter=No|start_char=2039|end_char=2040
56	{-	{-	SYM	SYM	_	55	_	_	SpaceAfter=No|start_char=2040|end_char=2042
57	1	1	NUM	CD	NumForm=Digit|NumType=Card	56	_	_	SpaceAfter=No|start_char=2042|end_char=2043
58	,	,	PUNCT	,	_	57	_	_	start_char=2043|end_char=2044
59	1	1	NUM	CD	NumForm=Digit|NumType=Card	58	_	_	SpaceAfter=No|start_char=2045|end_char=2046
60	}	}	NOUN	NNS	Number=Sing	59	_	_	start_char=2046|end_char=2047
61	2	2	NUM	CD	NumForm=Digit|NumType=Card	60	_	_	start_char=2048|end_char=2049
62	→	→	SYM	SYM	_	61	_	_	start_char=2050|end_char=2051
63	[	[	PUNCT	-LRB-	_	62	_	_	SpaceAfter=No|start_char=2052|end_char=2053
64	0	0	NUM	CD	NumForm=Digit|NumType=Card	63	_	_	SpaceAfter=No|start_char=2053|end_char=2054
65	,	,	PUNCT	,	_	64	_	_	start_char=2054|end_char=2055
66	∞	∞	NOUN	NN	Number=Sing	65	_	_	SpaceAfter=No|start_char=2056|end_char=2057
67	)	)	PUNCT	-RRB-	_	66	_	_	start_char=2057|end_char=2058
68	and	and	CCONJ	CC	_	67	_	_	start_char=2059|end_char=2062
69	ψ	ψ	NOUN	NN	Number=Sing	68	_	_	start_char=2063|end_char=2064
70	(	(	PUNCT	-LRB-	_	69	_	_	SpaceAfter=No|start_char=2065|end_char=2066
71	x	x	NOUN	NN	Number=Sing	70	_	_	SpaceAfter=No|start_char=2066|end_char=2067
72	,	,	PUNCT	,	_	71	_	_	start_char=2067|end_char=2068
73	y	y	NOUN	NN	Number=Sing	72	_	_	SpaceAfter=No|start_char=2069|end_char=2070
74	,	,	PUNCT	,	_	73	_	_	start_char=2070|end_char=2071
75	y	y	NOUN	NN	Number=Sing	74	_	_	SpaceAfter=No|start_char=2072|end_char=2073
76	)	)	PUNCT	-RRB-	_	75	_	_	start_char=2073|end_char=2074
77	=	=	SYM	SYM	_	76	_	_	start_char=2075|end_char=2076
78	0	0	NUM	CD	NumForm=Digit|NumType=Card	77	_	_	start_char=2077|end_char=2078
79	for	for	ADP	IN	_	78	_	_	start_char=2079|end_char=2082
80	all	all	DET	DT	PronType=Tot	79	_	_	start_char=2083|end_char=2086
81	x	x	NOUN	NN	Number=Sing	80	_	_	start_char=2087|end_char=2088
82	and	and	CCONJ	CC	_	81	_	_	start_char=2089|end_char=2092
83	y	y	X	FW	_	82	_	_	start_char=2093|end_char=2094
84	[	[	PUNCT	-LRB-	_	83	_	_	SpaceAfter=No|start_char=2095|end_char=2096
85	cf.	cf.	X	FW	_	84	_	_	start_char=2096|end_char=2099
86	scholkopf	scholkopf	PROPN	NNP	Number=Sing	85	_	_	start_char=2100|end_char=2109
87	&	&	CCONJ	CC	_	86	_	_	start_char=2110|end_char=2111
88	smola	smola	PROPN	NNP	Number=Sing	87	_	_	start_char=2112|end_char=2117
89	(	(	PUNCT	-LRB-	_	88	_	_	SpaceAfter=No|start_char=2118|end_char=2119
90	2002	2002	NUM	CD	NumForm=Digit|NumType=Card	89	_	_	SpaceAfter=No|start_char=2119|end_char=2123
91	,	,	PUNCT	,	_	90	_	_	start_char=2123|end_char=2124
92	def.	def.	NOUN	NN	Number=Sing	91	_	_	start_char=2125|end_char=2129
93	3.1	3.1	NUM	CD	NumForm=Digit|NumType=Frac	92	_	_	SpaceAfter=No|start_char=2130|end_char=2133
94	)	)	PUNCT	-RRB-	_	93	_	_	start_char=2133|end_char=2134
95	]	]	PUNCT	-RRB-	_	94	_	_	SpaceAfter=No|start_char=2135|end_char=2136
96	.	.	PUNCT	.	_	95	_	_	start_char=2136|end_char=2137
97	an	a	DET	DT	Definite=Ind|PronType=Art	96	_	_	start_char=2138|end_char=2140
98	example	example	NOUN	NN	Number=Sing	97	_	_	start_char=2141|end_char=2148
99	of	of	ADP	IN	_	98	_	_	start_char=2149|end_char=2151
100	a	a	DET	DT	Definite=Ind|PronType=Art	99	_	_	start_char=2152|end_char=2153
101	machine	machine	NOUN	NN	Number=Sing	100	_	_	start_char=2154|end_char=2161
102	learning	learning	NOUN	NN	Number=Sing	101	_	_	start_char=2162|end_char=2170
103	algorithm	algorithm	NOUN	NN	Number=Sing	102	_	_	start_char=2171|end_char=2180
104	that	that	PRON	WDT	PronType=Rel	103	_	_	start_char=2181|end_char=2185
105	minimizes	minimize	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	104	_	_	start_char=2186|end_char=2195
106	a	a	DET	DT	Definite=Ind|PronType=Art	105	_	_	start_char=2196|end_char=2197
107	surrogate	surrogate	NOUN	NN	Number=Sing	106	_	_	start_char=2198|end_char=2207
108	classification	classification	NOUN	NN	Number=Sing	107	_	_	start_char=2208|end_char=2222
109	risk	risk	NOUN	NN	Number=Sing	108	_	_	start_char=2223|end_char=2227
110	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	109	_	_	start_char=2228|end_char=2230
111	the	the	DET	DT	Definite=Def|PronType=Art	110	_	_	start_char=2231|end_char=2234
112	support	support	NOUN	NN	Number=Sing	111	_	_	start_char=2235|end_char=2242
113	vector	vector	NOUN	NN	Number=Sing	112	_	_	start_char=2243|end_char=2249
114	machine	machine	NOUN	NN	Number=Sing	113	_	_	start_char=2250|end_char=2257
115	(	(	PUNCT	-LRB-	_	114	_	_	SpaceAfter=No|start_char=2258|end_char=2259
116	svm	svm	NOUN	NN	Number=Sing	115	_	_	SpaceAfter=No|start_char=2259|end_char=2262
117	)	)	PUNCT	-RRB-	_	116	_	_	start_char=2262|end_char=2263
118	of	of	ADP	IN	_	117	_	_	start_char=2264|end_char=2266
119	cortes	corte	NOUN	NN	Number=Sing	118	_	_	start_char=2267|end_char=2273
120	&	&	CCONJ	CC	_	119	_	_	start_char=2274|end_char=2275
121	vapnik	vapnik	NOUN	NN	Number=Sing	120	_	_	start_char=2276|end_char=2282
122	(	(	PUNCT	-LRB-	_	121	_	_	SpaceAfter=No|start_char=2283|end_char=2284
123	1995	1995	NUM	CD	NumForm=Digit|NumType=Card	122	_	_	SpaceAfter=No|start_char=2284|end_char=2288
124	)	)	PUNCT	-RRB-	_	123	_	_	start_char=2288|end_char=2289
125	.	.	PUNCT	.	_	124	_	_	start_char=2290|end_char=2291
126	the	the	DET	DT	Definite=Def|PronType=Art	125	_	_	start_char=2292|end_char=2295
127	linear	linear	ADJ	JJ	Degree=Pos	126	_	_	SpaceAfter=No|start_char=2296|end_char=2302
128	-	-	PUNCT	HYPH	_	127	_	_	SpaceAfter=No|start_char=2302|end_char=2303
129	basis	basis	NOUN	NN	Number=Sing	128	_	_	start_char=2303|end_char=2308
130	svm	svm	NOUN	NN	Number=Sing	129	_	_	start_char=2309|end_char=2312
131	utilizes	utilize	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	130	_	_	start_char=2313|end_char=2321
132	a	a	DET	DT	Definite=Ind|PronType=Art	131	_	_	start_char=2322|end_char=2323
133	surrogate	surrogate	ADJ	JJ	Degree=Pos	132	_	_	start_char=2324|end_char=2333
134	risk	risk	NOUN	NN	Number=Sing	133	_	_	start_char=2334|end_char=2338
135	function	function	NOUN	NN	Number=Sing	134	_	_	SpaceAfter=No|start_char=2339|end_char=2347
136	,	,	PUNCT	,	_	135	_	_	start_char=2347|end_char=2348
137	where	where	ADV	WRB	PronType=Rel	136	_	_	start_char=2349|end_char=2354
138	ψ	ψ	NOUN	NN	Number=Sing	137	_	_	start_char=2355|end_char=2356
139	(	(	PUNCT	-LRB-	_	138	_	_	SpaceAfter=No|start_char=2357|end_char=2358
140	x	x	NOUN	NN	Number=Sing	139	_	_	SpaceAfter=No|start_char=2358|end_char=2359
141	,	,	PUNCT	,	_	140	_	_	start_char=2359|end_char=2360
142	y	y	NOUN	NN	Number=Sing	141	_	_	SpaceAfter=No|start_char=2361|end_char=2362
143	,	,	PUNCT	,	_	142	_	_	start_char=2362|end_char=2363
144	f	f	NOUN	NN	Number=Sing	143	_	_	start_char=2364|end_char=2365
145	(	(	PUNCT	-LRB-	_	144	_	_	SpaceAfter=No|start_char=2366|end_char=2367
146	x	x	NOUN	NN	Number=Sing	145	_	_	SpaceAfter=No|start_char=2367|end_char=2368
147	;	;	PUNCT	:	_	146	_	_	start_char=2368|end_char=2369
148	θ	θ	NOUN	NN	Number=Sing	147	_	_	SpaceAfter=No|start_char=2370|end_char=2371
149	)	)	PUNCT	-RRB-	_	148	_	_	SpaceAfter=No|start_char=2371|end_char=2372
150	)	)	PUNCT	-RRB-	_	149	_	_	start_char=2372|end_char=2373
151	=	=	SYM	SYM	_	150	_	_	start_char=2374|end_char=2375
152	max	max	NOUN	NN	Number=Sing	151	_	_	start_char=2376|end_char=2379
153	{	{	SYM	SYM	_	152	_	_	SpaceAfter=No|start_char=2380|end_char=2381
154	0	0	NUM	CD	NumForm=Digit|NumType=Card	153	_	_	SpaceAfter=No|start_char=2381|end_char=2382
155	,	,	PUNCT	,	_	154	_	_	start_char=2382|end_char=2383
156	1yf	1yf	NOUN	NN	Number=Sing	155	_	_	start_char=2384|end_char=2387
157	(	(	PUNCT	-LRB-	_	156	_	_	SpaceAfter=No|start_char=2388|end_char=2389
158	x	x	NOUN	NN	Number=Sing	157	_	_	SpaceAfter=No|start_char=2389|end_char=2390
159	;	;	PUNCT	:	_	158	_	_	start_char=2390|end_char=2391
160	θ	θ	NOUN	NN	Number=Sing	159	_	_	SpaceAfter=No|start_char=2392|end_char=2393
161	)	)	PUNCT	-RRB-	_	160	_	_	SpaceAfter=No|start_char=2393|end_char=2394
162	}is	}is	ADP	IN	_	161	_	_	start_char=2394|end_char=2397
163	the	the	DET	DT	Definite=Def|PronType=Art	162	_	_	start_char=2398|end_char=2401
164	hinge	hinge	NOUN	NN	Number=Sing	163	_	_	start_char=2402|end_char=2407
165	loss	loss	NOUN	NN	Number=Sing	164	_	_	start_char=2408|end_char=2412
166	function	function	NOUN	NN	Number=Sing	165	_	_	SpaceAfter=No|start_char=2413|end_char=2421
167	,	,	PUNCT	,	_	166	_	_	start_char=2421|end_char=2422
168	f	f	NOUN	NN	Number=Sing	167	_	_	start_char=2423|end_char=2424
169	(	(	PUNCT	-LRB-	_	168	_	_	SpaceAfter=No|start_char=2425|end_char=2426
170	x	x	NOUN	NN	Number=Sing	169	_	_	SpaceAfter=No|start_char=2426|end_char=2427
171	;	;	PUNCT	:	_	170	_	_	start_char=2427|end_char=2428
172	θ	θ	NOUN	NN	Number=Sing	171	_	_	SpaceAfter=No|start_char=2429|end_char=2430
173	)	)	PUNCT	-RRB-	_	172	_	_	start_char=2430|end_char=2431
174	=	=	SYM	SYM	_	173	_	_	start_char=2432|end_char=2433
175	α	α	NOUN	NN	Number=Sing	174	_	_	start_char=2434|end_char=2435
176	+	+	SYM	SYM	_	175	_	_	start_char=2436|end_char=2437
177	β	β	NOUN	NN	Number=Sing	176	_	_	start_char=2438|end_char=2439
178	x	x	NOUN	NN	Number=Sing	177	_	_	SpaceAfter=No|start_char=2440|end_char=2441
179	,	,	PUNCT	,	_	178	_	_	start_char=2441|end_char=2442
180	and	and	CCONJ	CC	_	179	_	_	start_char=2443|end_char=2446
181	θ	θ	NOUN	NN	Number=Sing	180	_	_	start_char=2447|end_char=2448
182	=	=	SYM	SYM	_	181	_	_	start_char=2449|end_char=2450
183	α	α	NOUN	NN	Number=Sing	182	_	_	SpaceAfter=No|start_char=2451|end_char=2452
184	,	,	PUNCT	,	_	183	_	_	start_char=2452|end_char=2453
185	β	β	NOUN	NN	Number=Sing	184	_	_	start_char=2454|end_char=2455
186	∈	∈	NOUN	NN	Number=Sing	185	_	_	start_char=2456|end_char=2457
187	θ	θ	NOUN	NN	Number=Sing	186	_	_	start_char=2458|end_char=2459
188	⊂	⊂	NOUN	NN	Number=Sing	187	_	_	start_char=2460|end_char=2461
189	r	be	X	AFX	_	188	_	_	start_char=2462|end_char=2463
190	p+1	p+1	NOUN	NN	Number=Sing	189	_	_	start_char=2464|end_char=2467
191	.	.	PUNCT	.	_	190	_	_	start_char=2468|end_char=2469
192	the	the	DET	DT	Definite=Def|PronType=Art	191	_	_	start_char=2470|end_char=2473
193	task	task	NOUN	NN	Number=Sing	192	_	_	start_char=2474|end_char=2478
194	of	of	ADP	IN	_	193	_	_	start_char=2479|end_char=2481
195	computing	computing	NOUN	NN	Number=Sing	194	_	_	start_char=2482|end_char=2491
196	(	(	PUNCT	-LRB-	_	195	_	_	SpaceAfter=No|start_char=2492|end_char=2493
197	1	1	NUM	LS	NumForm=Digit|NumType=Card	196	_	_	SpaceAfter=No|start_char=2493|end_char=2494
198	)	)	PUNCT	-RRB-	_	197	_	_	start_char=2494|end_char=2495
199	may	may	AUX	MD	VerbForm=Fin	198	_	_	start_char=2496|end_char=2499
200	be	be	AUX	VB	VerbForm=Inf	199	_	_	start_char=2500|end_char=2502
201	complicated	complicated	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	200	_	_	start_char=2503|end_char=2514
202	by	by	ADP	IN	_	201	_	_	start_char=2515|end_char=2517
203	various	various	ADJ	JJ	Degree=Pos	202	_	_	start_char=2518|end_char=2525
204	factors	factor	NOUN	NNS	Number=Plur	203	_	_	start_char=2526|end_char=2533
205	that	that	PRON	WDT	PronType=Rel	204	_	_	start_char=2534|end_char=2538
206	fall	fall	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	205	_	_	start_char=2539|end_char=2543
207	outside	outside	ADP	IN	_	206	_	_	start_char=2544|end_char=2551
208	the	the	DET	DT	Definite=Def|PronType=Art	207	_	_	start_char=2552|end_char=2555
209	scope	scope	NOUN	NN	Number=Sing	208	_	_	start_char=2556|end_char=2561
210	of	of	ADP	IN	_	209	_	_	start_char=2562|end_char=2564
211	the	the	DET	DT	Definite=Def|PronType=Art	210	_	_	start_char=2565|end_char=2568
212	traditional	traditional	ADJ	JJ	Degree=Pos	211	_	_	start_char=2569|end_char=2580
213	calculus	calculus	NOUN	NN	Number=Sing	212	_	_	start_char=2581|end_char=2589
214	formulation	formulation	NOUN	NN	Number=Sing	213	_	_	start_char=2590|end_char=2601
215	for	for	ADP	IN	_	214	_	_	start_char=2602|end_char=2605
216	optimization	optimization	NOUN	NN	Number=Sing	215	_	_	start_char=2606|end_char=2618
217	[	[	PUNCT	-LRB-	_	216	_	_	SpaceAfter=No|start_char=2619|end_char=2620
218	cf.	cf.	NOUN	NN	Abbr=Yes|Number=Sing	217	_	_	start_char=2620|end_char=2623
219	khuri	khuri	PROPN	NNP	Number=Sing	218	_	_	start_char=2624|end_char=2629
220	(	(	PUNCT	-LRB-	_	219	_	_	SpaceAfter=No|start_char=2630|end_char=2631
221	2003	2003	NUM	CD	NumForm=Digit|NumType=Card	220	_	_	SpaceAfter=No|start_char=2631|end_char=2635
222	,	,	PUNCT	,	_	221	_	_	start_char=2635|end_char=2636
223	ch.	ch.	NOUN	NN	Abbr=Yes|Number=Sing	222	_	_	start_char=2637|end_char=2640
224	7	7	NUM	CD	NumForm=Digit|NumType=Card	223	_	_	SpaceAfter=No|start_char=2641|end_char=2642
225	)	)	PUNCT	-RRB-	_	224	_	_	start_char=2642|end_char=2643
226	]	]	PUNCT	-RRB-	_	225	_	_	SpaceAfter=No|start_char=2644|end_char=2645
227	.	.	PUNCT	.	_	226	_	_	start_char=2645|end_char=2646
228	such	such	ADJ	JJ	Degree=Pos	227	_	_	start_char=2647|end_char=2651
229	factors	factor	NOUN	NNS	Number=Plur	228	_	_	start_char=2652|end_char=2659
230	include	include	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	229	_	_	start_char=2660|end_char=2667
231	the	the	DET	DT	Definite=Def|PronType=Art	230	_	_	start_char=2668|end_char=2671
232	lack	lack	NOUN	NN	Number=Sing	231	_	_	start_char=2672|end_char=2676
233	of	of	ADP	IN	_	232	_	_	start_char=2677|end_char=2679
234	differentiability	differentiability	NOUN	NN	Number=Sing	233	_	_	start_char=2680|end_char=2697
235	of	of	ADP	IN	_	234	_	_	start_char=2698|end_char=2700
236	r	be	NOUN	NN	Number=Sing	235	_	_	start_char=2701|end_char=2702
237	or	or	CCONJ	CC	_	236	_	_	start_char=2703|end_char=2705
238	difficulty	difficulty	NOUN	NN	Number=Sing	237	_	_	start_char=2706|end_char=2716
239	in	in	SCONJ	IN	_	238	_	_	start_char=2717|end_char=2719
240	obtaining	obtain	VERB	VBG	VerbForm=Ger	239	_	_	start_char=2720|end_char=2729
241	closed	close	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	240	_	_	SpaceAfter=No|start_char=2730|end_char=2736
242	-	-	PUNCT	HYPH	_	241	_	_	SpaceAfter=No|start_char=2736|end_char=2737
243	form	form	NOUN	NN	Number=Sing	242	_	_	start_char=2737|end_char=2741
244	solutions	solution	NOUN	NNS	Number=Plur	243	_	_	start_char=2742|end_char=2751
245	to	to	ADP	IN	_	244	_	_	start_char=2752|end_char=2754
246	the	the	DET	DT	Definite=Def|PronType=Art	245	_	_	start_char=2755|end_char=2758
247	first	first	ADJ	JJ	Degree=Pos|NumForm=Word|NumType=Ord	246	_	_	SpaceAfter=No|start_char=2759|end_char=2764
248	-	-	PUNCT	HYPH	_	247	_	_	SpaceAfter=No|start_char=2764|end_char=2765
249	order	order	NOUN	NN	Number=Sing	248	_	_	start_char=2765|end_char=2770
250	condition	condition	NOUN	NN	Number=Sing	249	_	_	start_char=2771|end_char=2780
251	(	(	PUNCT	-LRB-	_	250	_	_	SpaceAfter=No|start_char=2781|end_char=2782
252	foc	foc	NOUN	NN	Number=Sing	251	_	_	SpaceAfter=No|start_char=2782|end_char=2785
253	)	)	PUNCT	-RRB-	_	252	_	_	start_char=2785|end_char=2786
254	equation	equation	NOUN	NN	Number=Sing	253	_	_	start_char=2787|end_char=2795
255	∇	∇	PUNCT	:	_	254	_	_	start_char=2796|end_char=2797
256	θ	θ	NOUN	NN	Number=Sing	255	_	_	start_char=2798|end_char=2799
257	r	be	NOUN	NN	Number=Sing	256	_	_	start_char=2800|end_char=2801
258	=	=	SYM	SYM	_	257	_	_	start_char=2802|end_char=2803
259	0	0	NUM	CD	NumForm=Digit|NumType=Card	258	_	_	SpaceAfter=No|start_char=2804|end_char=2805
260	,	,	PUNCT	,	_	259	_	_	start_char=2805|end_char=2806
261	where	where	ADV	WRB	PronType=Int	260	_	_	start_char=2807|end_char=2812
262	∇	∇	PUNCT	``	_	261	_	_	start_char=2813|end_char=2814
263	θ	θ	NOUN	NN	Number=Sing	262	_	_	start_char=2815|end_char=2816
264	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	263	_	_	start_char=2817|end_char=2819
265	the	the	DET	DT	Definite=Def|PronType=Art	264	_	_	start_char=2820|end_char=2823
266	gradient	gradient	NOUN	NN	Number=Sing	265	_	_	start_char=2824|end_char=2832
267	operator	operator	NOUN	NN	Number=Sing	266	_	_	start_char=2833|end_char=2841
268	with	with	ADP	IN	_	267	_	_	start_char=2842|end_char=2846
269	respect	respect	NOUN	NN	Number=Sing	268	_	_	start_char=2847|end_char=2854
270	to	to	ADP	IN	_	269	_	_	start_char=2855|end_char=2857
271	θ	θ	NOUN	NN	Number=Sing	270	_	_	SpaceAfter=No|start_char=2858|end_char=2859
272	,	,	PUNCT	,	_	271	_	_	start_char=2859|end_char=2860
273	and	and	CCONJ	CC	_	272	_	_	start_char=2861|end_char=2864
274	0	0	NUM	CD	NumForm=Digit|NumType=Card	273	_	_	start_char=2865|end_char=2866
275	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	274	_	_	start_char=2867|end_char=2869
276	a	a	DET	DT	Definite=Ind|PronType=Art	275	_	_	start_char=2870|end_char=2871
277	zero	zero	NUM	CD	NumForm=Word|NumType=Card	276	_	_	start_char=2872|end_char=2876
278	vector	vector	NOUN	NN	Number=Sing	277	_	_	SpaceAfter=No|start_char=2877|end_char=2883
279	.	.	PUNCT	.	_	278	_	_	start_char=2883|end_char=2884

# text = the mm (majorization-minimization) algorithm framework is a unifying paradigm for simplifying the computation of (1) when difficulties arise, via iterative minimization of surrogate functions.
# sent_id = 8
1	the	the	DET	DT	Definite=Def|PronType=Art	0	_	_	start_char=2885|end_char=2888
2	mm	mm	NOUN	NN	Number=Sing	1	_	_	start_char=2889|end_char=2891
3	(	(	PUNCT	-LRB-	_	2	_	_	SpaceAfter=No|start_char=2892|end_char=2893
4	majorization	majorization	NOUN	NN	Number=Sing	3	_	_	SpaceAfter=No|start_char=2893|end_char=2905
5	-	-	PUNCT	HYPH	_	4	_	_	SpaceAfter=No|start_char=2905|end_char=2906
6	minimization	minimization	NOUN	NN	Number=Sing	5	_	_	SpaceAfter=No|start_char=2906|end_char=2918
7	)	)	PUNCT	-RRB-	_	6	_	_	start_char=2918|end_char=2919
8	algorithm	algorithm	NOUN	NN	Number=Sing	7	_	_	start_char=2920|end_char=2929
9	framework	framework	NOUN	NN	Number=Sing	8	_	_	start_char=2930|end_char=2939
10	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	_	_	start_char=2940|end_char=2942
11	a	a	DET	DT	Definite=Ind|PronType=Art	10	_	_	start_char=2943|end_char=2944
12	unifying	unify	VERB	VBG	VerbForm=Ger	11	_	_	start_char=2945|end_char=2953
13	paradigm	paradigm	NOUN	NN	Number=Sing	12	_	_	start_char=2954|end_char=2962
14	for	for	SCONJ	IN	_	13	_	_	start_char=2963|end_char=2966
15	simplifying	simplify	VERB	VBG	VerbForm=Ger	14	_	_	start_char=2967|end_char=2978
16	the	the	DET	DT	Definite=Def|PronType=Art	15	_	_	start_char=2979|end_char=2982
17	computation	computation	NOUN	NN	Number=Sing	16	_	_	start_char=2983|end_char=2994
18	of	of	ADP	IN	_	17	_	_	start_char=2995|end_char=2997
19	(	(	PUNCT	-LRB-	_	18	_	_	SpaceAfter=No|start_char=2998|end_char=2999
20	1	1	NUM	LS	NumForm=Digit|NumType=Card	19	_	_	SpaceAfter=No|start_char=2999|end_char=3000
21	)	)	PUNCT	-RRB-	_	20	_	_	start_char=3000|end_char=3001
22	when	when	ADV	WRB	PronType=Int	21	_	_	start_char=3002|end_char=3006
23	difficulties	difficulty	NOUN	NNS	Number=Plur	22	_	_	start_char=3007|end_char=3019
24	arise	arise	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	23	_	_	SpaceAfter=No|start_char=3020|end_char=3025
25	,	,	PUNCT	,	_	24	_	_	start_char=3025|end_char=3026
26	via	via	ADP	IN	_	25	_	_	start_char=3027|end_char=3030
27	iterative	iterative	ADJ	JJ	Degree=Pos	26	_	_	start_char=3031|end_char=3040
28	minimization	minimization	NOUN	NN	Number=Sing	27	_	_	start_char=3041|end_char=3053
29	of	of	ADP	IN	_	28	_	_	start_char=3054|end_char=3056
30	surrogate	surrogate	ADJ	JJ	Degree=Pos	29	_	_	start_char=3057|end_char=3066
31	functions	function	NOUN	NNS	Number=Plur	30	_	_	SpaceAfter=No|start_char=3067|end_char=3076
32	.	.	PUNCT	.	_	31	_	_	start_char=3076|end_char=3077

# text = mm algorithms are particularly attractive due to the monotonicity and thus stability of their objective sequences as well as global convergence of their limits, in general settings.
# sent_id = 9
1	mm	mm	INTJ	UH	_	0	_	_	start_char=3078|end_char=3080
2	algorithms	algorithm	NOUN	NNS	Number=Plur	1	_	_	start_char=3081|end_char=3091
3	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	2	_	_	start_char=3092|end_char=3095
4	particularly	particularly	ADV	RB	_	3	_	_	start_char=3096|end_char=3108
5	attractive	attractive	ADJ	JJ	Degree=Pos	4	_	_	start_char=3109|end_char=3119
6	due	due	ADJ	JJ	Degree=Pos|ExtPos=ADP	5	_	_	start_char=3120|end_char=3123
7	to	to	ADP	IN	_	6	_	_	start_char=3124|end_char=3126
8	the	the	DET	DT	Definite=Def|PronType=Art	7	_	_	start_char=3127|end_char=3130
9	monotonicity	monotonicity	NOUN	NN	Number=Sing	8	_	_	start_char=3131|end_char=3143
10	and	and	CCONJ	CC	_	9	_	_	start_char=3144|end_char=3147
11	thus	thus	ADV	RB	_	10	_	_	start_char=3148|end_char=3152
12	stability	stability	NOUN	NN	Number=Sing	11	_	_	start_char=3153|end_char=3162
13	of	of	ADP	IN	_	12	_	_	start_char=3163|end_char=3165
14	their	their	PRON	PRP$	Case=Gen|Number=Plur|Person=3|Poss=Yes|PronType=Prs	13	_	_	start_char=3166|end_char=3171
15	objective	objective	ADJ	JJ	Degree=Pos	14	_	_	start_char=3172|end_char=3181
16	sequences	sequence	NOUN	NNS	Number=Plur	15	_	_	start_char=3182|end_char=3191
17	as	as	ADV	RB	ExtPos=CCONJ	16	_	_	start_char=3192|end_char=3194
18	well	well	ADV	RB	Degree=Pos	17	_	_	start_char=3195|end_char=3199
19	as	as	ADP	IN	_	18	_	_	start_char=3200|end_char=3202
20	global	global	ADJ	JJ	Degree=Pos	19	_	_	start_char=3203|end_char=3209
21	convergence	convergence	NOUN	NN	Number=Sing	20	_	_	start_char=3210|end_char=3221
22	of	of	ADP	IN	_	21	_	_	start_char=3222|end_char=3224
23	their	their	PRON	PRP$	Case=Gen|Number=Plur|Person=3|Poss=Yes|PronType=Prs	22	_	_	start_char=3225|end_char=3230
24	limits	limit	NOUN	NNS	Number=Plur	23	_	_	SpaceAfter=No|start_char=3231|end_char=3237
25	,	,	PUNCT	,	_	24	_	_	start_char=3237|end_char=3238
26	in	in	ADP	IN	_	25	_	_	start_char=3239|end_char=3241
27	general	general	ADJ	JJ	Degree=Pos	26	_	_	start_char=3242|end_char=3249
28	settings	setting	NOUN	NNS	Number=Plur	27	_	_	SpaceAfter=No|start_char=3250|end_char=3258
29	.	.	PUNCT	.	_	28	_	_	start_char=3258|end_char=3259

# text = a comprehensive treatment on the theory and implementation of mm algorithms can be found in lange (2016) . summaries and tutorials on mm algorithms for various problems can be found in becker et al. (1997) , hunter & lange (2004) , lange (2013, ch. 8) , lange et al. (2000) , lange et al. (2014) , mclachlan & krishnan (2008, sec. 7 .7), wu & lange (2010), and zhou et al. (2010) . some theoretical analyses of mm algorithms can be found in de leeuw & lange (2009) , lange (2013, sec. 12.4) , mairal (2015), and vaida (2005) . it is known that mm algorithms are generalizations of the em (expectationmaximization) algorithms of dempster et al. (1977) [cf. lange (2013, ch. 9) ]. the recently established connection between mm algorithms and the successive upper-bound maximization (sum) algorithms of razaviyayn et al. (2013) further shows that the mm algorithm framework also covers the concave-convex procedures [yuille & rangarajan (2003) ; cccp], proximal algorithms (parikh & boyd, 2013) , forward-backward splitting algorithms [combettes & pesquet (2011) ; fbs], as well as various incarnations of iteratively-reweighed leastsquares algorithms (irls) such as those of becker et al. (1997) and lange et al. (2000) ; see hong et al. (2016) for details.
# sent_id = 10
1	a	a	DET	DT	Definite=Ind|PronType=Art	0	_	_	start_char=3260|end_char=3261
2	comprehensive	comprehensive	ADJ	JJ	Degree=Pos	1	_	_	start_char=3262|end_char=3275
3	treatment	treatment	NOUN	NN	Number=Sing	2	_	_	start_char=3276|end_char=3285
4	on	on	ADP	IN	_	3	_	_	start_char=3286|end_char=3288
5	the	the	DET	DT	Definite=Def|PronType=Art	4	_	_	start_char=3289|end_char=3292
6	theory	theory	NOUN	NN	Number=Sing	5	_	_	start_char=3293|end_char=3299
7	and	and	CCONJ	CC	_	6	_	_	start_char=3300|end_char=3303
8	implementation	implementation	NOUN	NN	Number=Sing	7	_	_	start_char=3304|end_char=3318
9	of	of	ADP	IN	_	8	_	_	start_char=3319|end_char=3321
10	mm	mm	NOUN	NN	Number=Sing	9	_	_	start_char=3322|end_char=3324
11	algorithms	algorithm	NOUN	NNS	Number=Plur	10	_	_	start_char=3325|end_char=3335
12	can	can	AUX	MD	VerbForm=Fin	11	_	_	start_char=3336|end_char=3339
13	be	be	AUX	VB	VerbForm=Inf	12	_	_	start_char=3340|end_char=3342
14	found	find	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	13	_	_	start_char=3343|end_char=3348
15	in	in	ADP	IN	_	14	_	_	start_char=3349|end_char=3351
16	lange	lange	NOUN	NN	Number=Sing	15	_	_	start_char=3352|end_char=3357
17	(	(	PUNCT	-LRB-	_	16	_	_	SpaceAfter=No|start_char=3358|end_char=3359
18	2016	2016	NUM	CD	NumForm=Digit|NumType=Card	17	_	_	SpaceAfter=No|start_char=3359|end_char=3363
19	)	)	PUNCT	-RRB-	_	18	_	_	start_char=3363|end_char=3364
20	.	.	PUNCT	.	_	19	_	_	start_char=3365|end_char=3366
21	summaries	summary	NOUN	NNS	Number=Plur	20	_	_	start_char=3367|end_char=3376
22	and	and	CCONJ	CC	_	21	_	_	start_char=3377|end_char=3380
23	tutorials	tutorial	NOUN	NNS	Number=Plur	22	_	_	start_char=3381|end_char=3390
24	on	on	ADP	IN	_	23	_	_	start_char=3391|end_char=3393
25	mm	mm	NOUN	NN	Number=Sing	24	_	_	start_char=3394|end_char=3396
26	algorithms	algorithm	NOUN	NNS	Number=Plur	25	_	_	start_char=3397|end_char=3407
27	for	for	ADP	IN	_	26	_	_	start_char=3408|end_char=3411
28	various	various	ADJ	JJ	Degree=Pos	27	_	_	start_char=3412|end_char=3419
29	problems	problem	NOUN	NNS	Number=Plur	28	_	_	start_char=3420|end_char=3428
30	can	can	AUX	MD	VerbForm=Fin	29	_	_	start_char=3429|end_char=3432
31	be	be	AUX	VB	VerbForm=Inf	30	_	_	start_char=3433|end_char=3435
32	found	find	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	31	_	_	start_char=3436|end_char=3441
33	in	in	ADP	IN	_	32	_	_	start_char=3442|end_char=3444
34	becker	becker	X	FW	Foreign=Yes	33	_	_	start_char=3445|end_char=3451
35	et	et	X	FW	_	34	_	_	start_char=3452|end_char=3454
36	al.	al.	X	FW	_	35	_	_	start_char=3455|end_char=3458
37	(	(	PUNCT	-LRB-	_	36	_	_	SpaceAfter=No|start_char=3459|end_char=3460
38	1997	1997	NUM	CD	NumForm=Digit|NumType=Card	37	_	_	SpaceAfter=No|start_char=3460|end_char=3464
39	)	)	PUNCT	-RRB-	_	38	_	_	start_char=3464|end_char=3465
40	,	,	PUNCT	,	_	39	_	_	start_char=3466|end_char=3467
41	hunter	hunter	NOUN	NN	Number=Sing	40	_	_	start_char=3468|end_char=3474
42	&	&	CCONJ	CC	_	41	_	_	start_char=3475|end_char=3476
43	lange	lange	NOUN	NN	Number=Sing	42	_	_	start_char=3477|end_char=3482
44	(	(	PUNCT	-LRB-	_	43	_	_	SpaceAfter=No|start_char=3483|end_char=3484
45	2004	2004	NUM	CD	NumForm=Digit|NumType=Card	44	_	_	SpaceAfter=No|start_char=3484|end_char=3488
46	)	)	PUNCT	-RRB-	_	45	_	_	start_char=3488|end_char=3489
47	,	,	PUNCT	,	_	46	_	_	start_char=3490|end_char=3491
48	lange	lange	NOUN	NN	Number=Sing	47	_	_	start_char=3492|end_char=3497
49	(	(	PUNCT	-LRB-	_	48	_	_	SpaceAfter=No|start_char=3498|end_char=3499
50	2013	2013	NUM	CD	NumForm=Digit|NumType=Card	49	_	_	SpaceAfter=No|start_char=3499|end_char=3503
51	,	,	PUNCT	,	_	50	_	_	start_char=3503|end_char=3504
52	ch.	ch.	NOUN	NN	Abbr=Yes|Number=Sing	51	_	_	start_char=3505|end_char=3508
53	8	8	NUM	CD	NumForm=Digit|NumType=Card	52	_	_	SpaceAfter=No|start_char=3509|end_char=3510
54	)	)	PUNCT	-RRB-	_	53	_	_	start_char=3510|end_char=3511
55	,	,	PUNCT	,	_	54	_	_	start_char=3512|end_char=3513
56	lange	lange	X	FW	Foreign=Yes	55	_	_	start_char=3514|end_char=3519
57	et	et	X	FW	_	56	_	_	start_char=3520|end_char=3522
58	al.	al.	X	FW	_	57	_	_	start_char=3523|end_char=3526
59	(	(	PUNCT	-LRB-	_	58	_	_	SpaceAfter=No|start_char=3527|end_char=3528
60	2000	2000	NUM	CD	NumForm=Digit|NumType=Card	59	_	_	SpaceAfter=No|start_char=3528|end_char=3532
61	)	)	PUNCT	-RRB-	_	60	_	_	start_char=3532|end_char=3533
62	,	,	PUNCT	,	_	61	_	_	start_char=3534|end_char=3535
63	lange	lange	PROPN	NNP	Number=Sing	62	_	_	start_char=3536|end_char=3541
64	et	et	X	FW	Foreign=Yes	63	_	_	start_char=3542|end_char=3544
65	al.	al.	X	FW	_	64	_	_	start_char=3545|end_char=3548
66	(	(	PUNCT	-LRB-	_	65	_	_	SpaceAfter=No|start_char=3549|end_char=3550
67	2014	2014	NUM	CD	NumForm=Digit|NumType=Card	66	_	_	SpaceAfter=No|start_char=3550|end_char=3554
68	)	)	PUNCT	-RRB-	_	67	_	_	start_char=3554|end_char=3555
69	,	,	PUNCT	,	_	68	_	_	start_char=3556|end_char=3557
70	mclachlan	mclachlan	PROPN	NNP	Number=Sing	69	_	_	start_char=3558|end_char=3567
71	&	&	CCONJ	CC	_	70	_	_	start_char=3568|end_char=3569
72	krishnan	krishnan	PROPN	NNP	Number=Sing	71	_	_	start_char=3570|end_char=3578
73	(	(	PUNCT	-LRB-	_	72	_	_	SpaceAfter=No|start_char=3579|end_char=3580
74	2008	2008	NUM	CD	NumForm=Digit|NumType=Card	73	_	_	SpaceAfter=No|start_char=3580|end_char=3584
75	,	,	PUNCT	,	_	74	_	_	start_char=3584|end_char=3585
76	sec.	sec.	NOUN	NN	Number=Sing	75	_	_	start_char=3586|end_char=3590
77	7	7	NUM	CD	NumForm=Digit|NumType=Card	76	_	_	start_char=3591|end_char=3592
78	.7	.7	NUM	CD	NumForm=Digit|NumType=Frac	77	_	_	SpaceAfter=No|start_char=3593|end_char=3595
79	)	)	PUNCT	-RRB-	_	78	_	_	SpaceAfter=No|start_char=3595|end_char=3596
80	,	,	PUNCT	,	_	79	_	_	start_char=3596|end_char=3597
81	wu	wu	PROPN	NNP	Number=Sing	80	_	_	start_char=3598|end_char=3600
82	&	&	CCONJ	CC	_	81	_	_	start_char=3601|end_char=3602
83	lange	lange	PROPN	NNP	Number=Sing	82	_	_	start_char=3603|end_char=3608
84	(	(	PUNCT	-LRB-	_	83	_	_	SpaceAfter=No|start_char=3609|end_char=3610
85	2010	2010	NUM	CD	NumForm=Digit|NumType=Card	84	_	_	SpaceAfter=No|start_char=3610|end_char=3614
86	)	)	PUNCT	-RRB-	_	85	_	_	SpaceAfter=No|start_char=3614|end_char=3615
87	,	,	PUNCT	,	_	86	_	_	start_char=3615|end_char=3616
88	and	and	CCONJ	CC	_	87	_	_	start_char=3617|end_char=3620
89	zhou	zhou	X	FW	Foreign=Yes	88	_	_	start_char=3621|end_char=3625
90	et	et	X	FW	Foreign=Yes	89	_	_	start_char=3626|end_char=3628
91	al.	al.	X	FW	_	90	_	_	start_char=3629|end_char=3632
92	(	(	PUNCT	-LRB-	_	91	_	_	SpaceAfter=No|start_char=3633|end_char=3634
93	2010	2010	NUM	CD	NumForm=Digit|NumType=Card	92	_	_	SpaceAfter=No|start_char=3634|end_char=3638
94	)	)	PUNCT	-RRB-	_	93	_	_	start_char=3638|end_char=3639
95	.	.	PUNCT	.	_	94	_	_	start_char=3640|end_char=3641
96	some	some	DET	DT	PronType=Ind	95	_	_	start_char=3642|end_char=3646
97	theoretical	theoretical	ADJ	JJ	Degree=Pos	96	_	_	start_char=3647|end_char=3658
98	analyses	analysis	NOUN	NNS	Number=Plur	97	_	_	start_char=3659|end_char=3667
99	of	of	ADP	IN	_	98	_	_	start_char=3668|end_char=3670
100	mm	mm	NOUN	NN	Number=Sing	99	_	_	start_char=3671|end_char=3673
101	algorithms	algorithm	NOUN	NNS	Number=Plur	100	_	_	start_char=3674|end_char=3684
102	can	can	AUX	MD	VerbForm=Fin	101	_	_	start_char=3685|end_char=3688
103	be	be	AUX	VB	VerbForm=Inf	102	_	_	start_char=3689|end_char=3691
104	found	find	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	103	_	_	start_char=3692|end_char=3697
105	in	in	ADP	IN	_	104	_	_	start_char=3698|end_char=3700
106	de	de	PROPN	NNP	Number=Sing	105	_	_	start_char=3701|end_char=3703
107	leeuw	leeuw	PROPN	NNP	Number=Sing	106	_	_	start_char=3704|end_char=3709
108	&	&	CCONJ	CC	_	107	_	_	start_char=3710|end_char=3711
109	lange	lange	PROPN	NNP	Number=Sing	108	_	_	start_char=3712|end_char=3717
110	(	(	PUNCT	-LRB-	_	109	_	_	SpaceAfter=No|start_char=3718|end_char=3719
111	2009	2009	NUM	CD	NumForm=Digit|NumType=Card	110	_	_	SpaceAfter=No|start_char=3719|end_char=3723
112	)	)	PUNCT	-RRB-	_	111	_	_	start_char=3723|end_char=3724
113	,	,	PUNCT	,	_	112	_	_	start_char=3725|end_char=3726
114	lange	lange	NOUN	NN	Number=Sing	113	_	_	start_char=3727|end_char=3732
115	(	(	PUNCT	-LRB-	_	114	_	_	SpaceAfter=No|start_char=3733|end_char=3734
116	2013	2013	NUM	CD	NumForm=Digit|NumType=Card	115	_	_	SpaceAfter=No|start_char=3734|end_char=3738
117	,	,	PUNCT	,	_	116	_	_	start_char=3738|end_char=3739
118	sec.	sec.	NOUN	NN	Number=Sing	117	_	_	start_char=3740|end_char=3744
119	12.4	12.4	NUM	CD	NumForm=Digit|NumType=Frac	118	_	_	SpaceAfter=No|start_char=3745|end_char=3749
120	)	)	PUNCT	-RRB-	_	119	_	_	start_char=3749|end_char=3750
121	,	,	PUNCT	,	_	120	_	_	start_char=3751|end_char=3752
122	mairal	mairal	NOUN	NN	Number=Sing	121	_	_	start_char=3753|end_char=3759
123	(	(	PUNCT	-LRB-	_	122	_	_	SpaceAfter=No|start_char=3760|end_char=3761
124	2015	2015	NUM	CD	NumForm=Digit|NumType=Card	123	_	_	SpaceAfter=No|start_char=3761|end_char=3765
125	)	)	PUNCT	-RRB-	_	124	_	_	SpaceAfter=No|start_char=3765|end_char=3766
126	,	,	PUNCT	,	_	125	_	_	start_char=3766|end_char=3767
127	and	and	CCONJ	CC	_	126	_	_	start_char=3768|end_char=3771
128	vaida	vaida	PROPN	NNP	Number=Sing	127	_	_	start_char=3772|end_char=3777
129	(	(	PUNCT	-LRB-	_	128	_	_	SpaceAfter=No|start_char=3778|end_char=3779
130	2005	2005	NUM	CD	NumForm=Digit|NumType=Card	129	_	_	SpaceAfter=No|start_char=3779|end_char=3783
131	)	)	PUNCT	-RRB-	_	130	_	_	start_char=3783|end_char=3784
132	.	.	PUNCT	.	_	131	_	_	start_char=3785|end_char=3786
133	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	132	_	_	start_char=3787|end_char=3789
134	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	133	_	_	start_char=3790|end_char=3792
135	known	know	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	134	_	_	start_char=3793|end_char=3798
136	that	that	SCONJ	IN	_	135	_	_	start_char=3799|end_char=3803
137	mm	mm	NOUN	NN	Number=Sing	136	_	_	start_char=3804|end_char=3806
138	algorithms	algorithm	NOUN	NNS	Number=Plur	137	_	_	start_char=3807|end_char=3817
139	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	138	_	_	start_char=3818|end_char=3821
140	generalizations	generalization	NOUN	NNS	Number=Plur	139	_	_	start_char=3822|end_char=3837
141	of	of	ADP	IN	_	140	_	_	start_char=3838|end_char=3840
142	the	the	DET	DT	Definite=Def|PronType=Art	141	_	_	start_char=3841|end_char=3844
143	em	they	PRON	PRP	Case=Acc|Number=Plur|Person=3|PronType=Prs|Style=Coll	142	_	_	start_char=3845|end_char=3847
144	(	(	PUNCT	-LRB-	_	143	_	_	SpaceAfter=No|start_char=3848|end_char=3849
145	expectationmaximization	expectationmaximization	NOUN	NN	Number=Sing	144	_	_	SpaceAfter=No|start_char=3849|end_char=3872
146	)	)	PUNCT	-RRB-	_	145	_	_	start_char=3872|end_char=3873
147	algorithms	algorithm	NOUN	NNS	Number=Plur	146	_	_	start_char=3874|end_char=3884
148	of	of	ADP	IN	_	147	_	_	start_char=3885|end_char=3887
149	dempster	dempster	PROPN	NNP	Number=Sing	148	_	_	start_char=3888|end_char=3896
150	et	et	X	FW	_	149	_	_	start_char=3897|end_char=3899
151	al.	al.	X	FW	_	150	_	_	start_char=3900|end_char=3903
152	(	(	PUNCT	-LRB-	_	151	_	_	SpaceAfter=No|start_char=3904|end_char=3905
153	1977	1977	NUM	CD	NumForm=Digit|NumType=Card	152	_	_	SpaceAfter=No|start_char=3905|end_char=3909
154	)	)	PUNCT	-RRB-	_	153	_	_	start_char=3909|end_char=3910
155	[	[	PUNCT	-LRB-	_	154	_	_	SpaceAfter=No|start_char=3911|end_char=3912
156	cf.	cf.	NOUN	NN	Abbr=Yes|Number=Sing	155	_	_	start_char=3912|end_char=3915
157	lange	lange	NOUN	NN	Number=Sing	156	_	_	start_char=3916|end_char=3921
158	(	(	PUNCT	-LRB-	_	157	_	_	SpaceAfter=No|start_char=3922|end_char=3923
159	2013	2013	NUM	CD	NumForm=Digit|NumType=Card	158	_	_	SpaceAfter=No|start_char=3923|end_char=3927
160	,	,	PUNCT	,	_	159	_	_	start_char=3927|end_char=3928
161	ch.	ch.	NOUN	NN	Abbr=Yes|Number=Sing	160	_	_	start_char=3929|end_char=3932
162	9	9	NUM	CD	NumForm=Digit|NumType=Card	161	_	_	SpaceAfter=No|start_char=3933|end_char=3934
163	)	)	PUNCT	-RRB-	_	162	_	_	start_char=3934|end_char=3935
164	]	]	PUNCT	-RRB-	_	163	_	_	SpaceAfter=No|start_char=3936|end_char=3937
165	.	.	PUNCT	.	_	164	_	_	start_char=3937|end_char=3938
166	the	the	DET	DT	Definite=Def|PronType=Art	165	_	_	start_char=3939|end_char=3942
167	recently	recently	ADV	RB	_	166	_	_	start_char=3943|end_char=3951
168	established	establish	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	167	_	_	start_char=3952|end_char=3963
169	connection	connection	NOUN	NN	Number=Sing	168	_	_	start_char=3964|end_char=3974
170	between	between	ADP	IN	_	169	_	_	start_char=3975|end_char=3982
171	mm	mm	NOUN	NN	Number=Sing	170	_	_	start_char=3983|end_char=3985
172	algorithms	algorithm	NOUN	NNS	Number=Plur	171	_	_	start_char=3986|end_char=3996
173	and	and	CCONJ	CC	_	172	_	_	start_char=3997|end_char=4000
174	the	the	DET	DT	Definite=Def|PronType=Art	173	_	_	start_char=4001|end_char=4004
175	successive	successive	ADJ	JJ	Degree=Pos	174	_	_	start_char=4005|end_char=4015
176	upper	upper	ADJ	JJ	Degree=Pos	175	_	_	SpaceAfter=No|start_char=4016|end_char=4021
177	-	-	PUNCT	HYPH	_	176	_	_	SpaceAfter=No|start_char=4021|end_char=4022
178	bound	bound	ADJ	JJ	Degree=Pos	177	_	_	start_char=4022|end_char=4027
179	maximization	maximization	NOUN	NN	Number=Sing	178	_	_	start_char=4028|end_char=4040
180	(	(	PUNCT	-LRB-	_	179	_	_	SpaceAfter=No|start_char=4041|end_char=4042
181	sum	sum	NOUN	NN	Number=Sing	180	_	_	SpaceAfter=No|start_char=4042|end_char=4045
182	)	)	PUNCT	-RRB-	_	181	_	_	start_char=4045|end_char=4046
183	algorithms	algorithm	NOUN	NNS	Number=Plur	182	_	_	start_char=4047|end_char=4057
184	of	of	ADP	IN	_	183	_	_	start_char=4058|end_char=4060
185	razaviyayn	razaviyayn	X	FW	Foreign=Yes	184	_	_	start_char=4061|end_char=4071
186	et	et	X	FW	_	185	_	_	start_char=4072|end_char=4074
187	al.	al.	X	FW	_	186	_	_	start_char=4075|end_char=4078
188	(	(	PUNCT	-LRB-	_	187	_	_	SpaceAfter=No|start_char=4079|end_char=4080
189	2013	2013	NUM	CD	NumForm=Digit|NumType=Card	188	_	_	SpaceAfter=No|start_char=4080|end_char=4084
190	)	)	PUNCT	-RRB-	_	189	_	_	start_char=4084|end_char=4085
191	further	far	ADV	RB	_	190	_	_	start_char=4086|end_char=4093
192	shows	show	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	191	_	_	start_char=4094|end_char=4099
193	that	that	SCONJ	IN	_	192	_	_	start_char=4100|end_char=4104
194	the	the	DET	DT	Definite=Def|PronType=Art	193	_	_	start_char=4105|end_char=4108
195	mm	mm	NOUN	NN	Number=Sing	194	_	_	start_char=4109|end_char=4111
196	algorithm	algorithm	NOUN	NN	Number=Sing	195	_	_	start_char=4112|end_char=4121
197	framework	framework	NOUN	NN	Number=Sing	196	_	_	start_char=4122|end_char=4131
198	also	also	ADV	RB	_	197	_	_	start_char=4132|end_char=4136
199	covers	cover	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	198	_	_	start_char=4137|end_char=4143
200	the	the	DET	DT	Definite=Def|PronType=Art	199	_	_	start_char=4144|end_char=4147
201	concave	concave	NOUN	NN	Number=Sing	200	_	_	SpaceAfter=No|start_char=4148|end_char=4155
202	-	-	PUNCT	HYPH	_	201	_	_	SpaceAfter=No|start_char=4155|end_char=4156
203	convex	convex	NOUN	NN	Number=Sing	202	_	_	start_char=4156|end_char=4162
204	procedures	procedure	NOUN	NNS	Number=Plur	203	_	_	start_char=4163|end_char=4173
205	[	[	PUNCT	-LRB-	_	204	_	_	SpaceAfter=No|start_char=4174|end_char=4175
206	yuille	yuille	NOUN	NN	Number=Sing	205	_	_	start_char=4175|end_char=4181
207	&	&	CCONJ	CC	_	206	_	_	start_char=4182|end_char=4183
208	rangarajan	rangarajan	PROPN	NNP	Number=Sing	207	_	_	start_char=4184|end_char=4194
209	(	(	PUNCT	-LRB-	_	208	_	_	SpaceAfter=No|start_char=4195|end_char=4196
210	2003	2003	NUM	CD	NumForm=Digit|NumType=Card	209	_	_	SpaceAfter=No|start_char=4196|end_char=4200
211	)	)	PUNCT	-RRB-	_	210	_	_	start_char=4200|end_char=4201
212	;	;	PUNCT	:	_	211	_	_	start_char=4202|end_char=4203
213	cccp	cccp	PROPN	NNP	Number=Sing	212	_	_	SpaceAfter=No|start_char=4204|end_char=4208
214	]	]	PUNCT	-RRB-	_	213	_	_	SpaceAfter=No|start_char=4208|end_char=4209
215	,	,	PUNCT	,	_	214	_	_	start_char=4209|end_char=4210
216	proximal	proximal	ADJ	JJ	Degree=Pos	215	_	_	start_char=4211|end_char=4219
217	algorithms	algorithm	NOUN	NNS	Number=Plur	216	_	_	start_char=4220|end_char=4230
218	(	(	PUNCT	-LRB-	_	217	_	_	SpaceAfter=No|start_char=4231|end_char=4232
219	parikh	parikh	PROPN	NNP	Number=Sing	218	_	_	start_char=4232|end_char=4238
220	&	&	CCONJ	CC	_	219	_	_	start_char=4239|end_char=4240
221	boyd	boyd	PROPN	NNP	Number=Sing	220	_	_	SpaceAfter=No|start_char=4241|end_char=4245
222	,	,	PUNCT	,	_	221	_	_	start_char=4245|end_char=4246
223	2013	2013	NUM	CD	NumForm=Digit|NumType=Card	222	_	_	SpaceAfter=No|start_char=4247|end_char=4251
224	)	)	PUNCT	-RRB-	_	223	_	_	start_char=4251|end_char=4252
225	,	,	PUNCT	,	_	224	_	_	start_char=4253|end_char=4254
226	forw	forw	ADJ	JJ	Degree=Pos	225	_	_	SpaceAfter=No|start_char=4255|end_char=4259
227	ard	ard	NOUN	NN	Number=Sing	226	_	_	SpaceAfter=No|start_char=4259|end_char=4262
228	-	-	PUNCT	HYPH	_	227	_	_	SpaceAfter=No|start_char=4262|end_char=4263
229	backward	backward	ADJ	JJ	Degree=Pos	228	_	_	start_char=4263|end_char=4271
230	splitting	split	NOUN	NN	Number=Sing	229	_	_	start_char=4272|end_char=4281
231	algorithms	algorithm	NOUN	NNS	Number=Plur	230	_	_	start_char=4282|end_char=4292
232	[	[	PUNCT	-LRB-	_	231	_	_	SpaceAfter=No|start_char=4293|end_char=4294
233	combettes	combette	NOUN	NNS	Number=Plur	232	_	_	start_char=4294|end_char=4303
234	&	&	CCONJ	CC	_	233	_	_	start_char=4304|end_char=4305
235	pesquet	pesquet	NOUN	NN	Number=Sing	234	_	_	start_char=4306|end_char=4313
236	(	(	PUNCT	-LRB-	_	235	_	_	SpaceAfter=No|start_char=4314|end_char=4315
237	2011	2011	NUM	CD	NumForm=Digit|NumType=Card	236	_	_	SpaceAfter=No|start_char=4315|end_char=4319
238	)	)	PUNCT	-RRB-	_	237	_	_	start_char=4319|end_char=4320
239	;	;	PUNCT	:	_	238	_	_	start_char=4321|end_char=4322
240	fbs	fb	NOUN	NN	Number=Sing	239	_	_	SpaceAfter=No|start_char=4323|end_char=4326
241	]	]	PUNCT	-RRB-	_	240	_	_	SpaceAfter=No|start_char=4326|end_char=4327
242	,	,	PUNCT	,	_	241	_	_	start_char=4327|end_char=4328
243	as	as	ADV	RB	ExtPos=CCONJ	242	_	_	start_char=4329|end_char=4331
244	well	well	ADV	RB	Degree=Pos	243	_	_	start_char=4332|end_char=4336
245	as	as	ADP	IN	_	244	_	_	start_char=4337|end_char=4339
246	various	various	ADJ	JJ	Degree=Pos	245	_	_	start_char=4340|end_char=4347
247	incarnations	incarnation	NOUN	NNS	Number=Plur	246	_	_	start_char=4348|end_char=4360
248	of	of	ADP	IN	_	247	_	_	start_char=4361|end_char=4363
249	iteratively	iteratively	ADV	RB	Degree=Pos	248	_	_	SpaceAfter=No|start_char=4364|end_char=4375
250	-	-	PUNCT	HYPH	_	249	_	_	SpaceAfter=No|start_char=4375|end_char=4376
251	reweighed	reweigh	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	250	_	_	start_char=4376|end_char=4385
252	leastsquares	leastsquare	NOUN	NNS	Number=Plur	251	_	_	start_char=4386|end_char=4398
253	algorithms	algorithm	NOUN	NNS	Number=Plur	252	_	_	start_char=4399|end_char=4409
254	(	(	PUNCT	-LRB-	_	253	_	_	SpaceAfter=No|start_char=4410|end_char=4411
255	irls	irl	NOUN	NNS	Number=Plur	254	_	_	SpaceAfter=No|start_char=4411|end_char=4415
256	)	)	PUNCT	-RRB-	_	255	_	_	start_char=4415|end_char=4416
257	such	such	ADJ	JJ	ExtPos=ADP	256	_	_	start_char=4417|end_char=4421
258	as	as	ADP	IN	_	257	_	_	start_char=4422|end_char=4424
259	those	that	PRON	DT	Number=Plur|PronType=Dem	258	_	_	start_char=4425|end_char=4430
260	of	of	ADP	IN	_	259	_	_	start_char=4431|end_char=4433
261	becker	becker	X	FW	Foreign=Yes	260	_	_	start_char=4434|end_char=4440
262	et	et	X	FW	_	261	_	_	start_char=4441|end_char=4443
263	al.	al.	X	FW	_	262	_	_	start_char=4444|end_char=4447
264	(	(	PUNCT	-LRB-	_	263	_	_	SpaceAfter=No|start_char=4448|end_char=4449
265	1997	1997	NUM	CD	NumForm=Digit|NumType=Card	264	_	_	SpaceAfter=No|start_char=4449|end_char=4453
266	)	)	PUNCT	-RRB-	_	265	_	_	start_char=4453|end_char=4454
267	and	and	CCONJ	CC	_	266	_	_	start_char=4455|end_char=4458
268	lange	lange	X	FW	Foreign=Yes	267	_	_	start_char=4459|end_char=4464
269	et	et	X	FW	Foreign=Yes	268	_	_	start_char=4465|end_char=4467
270	al.	al.	X	FW	_	269	_	_	start_char=4468|end_char=4471
271	(	(	PUNCT	-LRB-	_	270	_	_	SpaceAfter=No|start_char=4472|end_char=4473
272	2000	2000	NUM	CD	NumForm=Digit|NumType=Card	271	_	_	SpaceAfter=No|start_char=4473|end_char=4477
273	)	)	PUNCT	-RRB-	_	272	_	_	start_char=4477|end_char=4478
274	;	;	PUNCT	:	_	273	_	_	start_char=4479|end_char=4480
275	see	see	VERB	VB	Mood=Imp|VerbForm=Inf	274	_	_	start_char=4481|end_char=4484
276	hong	hong	PROPN	NNP	Number=Sing	275	_	_	start_char=4485|end_char=4489
277	et	et	X	FW	Foreign=Yes	276	_	_	start_char=4490|end_char=4492
278	al.	al.	X	FW	_	277	_	_	start_char=4493|end_char=4496
279	(	(	PUNCT	-LRB-	_	278	_	_	SpaceAfter=No|start_char=4497|end_char=4498
280	2016	2016	NUM	CD	NumForm=Digit|NumType=Card	279	_	_	SpaceAfter=No|start_char=4498|end_char=4502
281	)	)	PUNCT	-RRB-	_	280	_	_	start_char=4502|end_char=4503
282	for	for	ADP	IN	_	281	_	_	start_char=4504|end_char=4507
283	details	detail	NOUN	NNS	Number=Plur	282	_	_	SpaceAfter=No|start_char=4508|end_char=4515
284	.	.	PUNCT	.	_	283	_	_	start_char=4515|end_char=4516

# text = it is not possible to provide a complete list of applications of mm algorithms to machine learning, statistical estimation, and signal processing problems.
# sent_id = 11
1	it	it	PRON	PRP	Case=Nom|Gender=Neut|Number=Sing|Person=3|PronType=Prs	0	_	_	start_char=4517|end_char=4519
2	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	1	_	_	start_char=4520|end_char=4522
3	not	not	PART	RB	Polarity=Neg	2	_	_	start_char=4523|end_char=4526
4	possible	possible	ADJ	JJ	Degree=Pos	3	_	_	start_char=4527|end_char=4535
5	to	to	PART	TO	_	4	_	_	start_char=4536|end_char=4538
6	provide	provide	VERB	VB	VerbForm=Inf	5	_	_	start_char=4539|end_char=4546
7	a	a	DET	DT	Definite=Ind|PronType=Art	6	_	_	start_char=4547|end_char=4548
8	complete	complete	ADJ	JJ	Degree=Pos	7	_	_	start_char=4549|end_char=4557
9	list	list	NOUN	NN	Number=Sing	8	_	_	start_char=4558|end_char=4562
10	of	of	ADP	IN	_	9	_	_	start_char=4563|end_char=4565
11	applications	application	NOUN	NNS	Number=Plur	10	_	_	start_char=4566|end_char=4578
12	of	of	ADP	IN	_	11	_	_	start_char=4579|end_char=4581
13	mm	mm	NOUN	NN	Number=Sing	12	_	_	start_char=4582|end_char=4584
14	algorithms	algorithm	NOUN	NNS	Number=Plur	13	_	_	start_char=4585|end_char=4595
15	to	to	ADP	IN	_	14	_	_	start_char=4596|end_char=4598
16	machine	machine	NOUN	NN	Number=Sing	15	_	_	start_char=4599|end_char=4606
17	learning	learning	NOUN	NN	Number=Sing	16	_	_	SpaceAfter=No|start_char=4607|end_char=4615
18	,	,	PUNCT	,	_	17	_	_	start_char=4615|end_char=4616
19	statistical	statistical	ADJ	JJ	Degree=Pos	18	_	_	start_char=4617|end_char=4628
20	estimation	estimation	NOUN	NN	Number=Sing	19	_	_	SpaceAfter=No|start_char=4629|end_char=4639
21	,	,	PUNCT	,	_	20	_	_	start_char=4639|end_char=4640
22	and	and	CCONJ	CC	_	21	_	_	start_char=4641|end_char=4644
23	signal	signal	NOUN	NN	Number=Sing	22	_	_	start_char=4645|end_char=4651
24	processing	processing	NOUN	NN	Number=Sing	23	_	_	start_char=4652|end_char=4662
25	problems	problem	NOUN	NNS	Number=Plur	24	_	_	SpaceAfter=No|start_char=4663|end_char=4671
26	.	.	PUNCT	.	_	25	_	_	start_char=4671|end_char=4672

# text = we present a comprehensive albeit incomplete summary of applications of mm algorithms in table 1 . further examples and references can be found in hong et al. (2016) and lange (2016) . in this article, we will present the mm algorithm framework via applications to three examples that span the scope of statistical estimation and machine learning problems: gaussian mixtures of regressions (gmr), multinomiallogistic regressions (mlr), and svm estimations.
# sent_id = 12
1	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	0	_	_	start_char=4673|end_char=4675
2	present	present	VERB	VBP	Mood=Ind|Number=Plur|Person=1|Tense=Pres|VerbForm=Fin	1	_	_	start_char=4676|end_char=4683
3	a	a	DET	DT	Definite=Ind|PronType=Art	2	_	_	start_char=4684|end_char=4685
4	comprehensive	comprehensive	ADJ	JJ	Degree=Pos	3	_	_	start_char=4686|end_char=4699
5	albeit	albeit	ADV	RB	_	4	_	_	start_char=4700|end_char=4706
6	incomplete	incomplete	ADJ	JJ	Degree=Pos	5	_	_	start_char=4707|end_char=4717
7	summary	summary	NOUN	NN	Number=Sing	6	_	_	start_char=4718|end_char=4725
8	of	of	ADP	IN	_	7	_	_	start_char=4726|end_char=4728
9	applications	application	NOUN	NNS	Number=Plur	8	_	_	start_char=4729|end_char=4741
10	of	of	ADP	IN	_	9	_	_	start_char=4742|end_char=4744
11	mm	mm	NOUN	NN	Number=Sing	10	_	_	start_char=4745|end_char=4747
12	algorithms	algorithm	NOUN	NNS	Number=Plur	11	_	_	start_char=4748|end_char=4758
13	in	in	ADP	IN	_	12	_	_	start_char=4759|end_char=4761
14	table	table	NOUN	NN	Number=Sing	13	_	_	start_char=4762|end_char=4767
15	1	1	NUM	CD	NumForm=Digit|NumType=Card	14	_	_	start_char=4768|end_char=4769
16	.	.	PUNCT	.	_	15	_	_	start_char=4770|end_char=4771
17	further	further	ADJ	JJR	Degree=Cmp	16	_	_	start_char=4772|end_char=4779
18	examples	example	NOUN	NNS	Number=Plur	17	_	_	start_char=4780|end_char=4788
19	and	and	CCONJ	CC	_	18	_	_	start_char=4789|end_char=4792
20	references	reference	NOUN	NNS	Number=Plur	19	_	_	start_char=4793|end_char=4803
21	can	can	AUX	MD	VerbForm=Fin	20	_	_	start_char=4804|end_char=4807
22	be	be	AUX	VB	VerbForm=Inf	21	_	_	start_char=4808|end_char=4810
23	found	find	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	22	_	_	start_char=4811|end_char=4816
24	in	in	ADP	IN	_	23	_	_	start_char=4817|end_char=4819
25	hong	hong	PROPN	NNP	Number=Sing	24	_	_	start_char=4820|end_char=4824
26	et	et	X	FW	Foreign=Yes	25	_	_	start_char=4825|end_char=4827
27	al.	al.	X	FW	_	26	_	_	start_char=4828|end_char=4831
28	(	(	PUNCT	-LRB-	_	27	_	_	SpaceAfter=No|start_char=4832|end_char=4833
29	2016	2016	NUM	CD	NumForm=Digit|NumType=Card	28	_	_	SpaceAfter=No|start_char=4833|end_char=4837
30	)	)	PUNCT	-RRB-	_	29	_	_	start_char=4837|end_char=4838
31	and	and	CCONJ	CC	_	30	_	_	start_char=4839|end_char=4842
32	lange	lange	NOUN	NN	Number=Sing	31	_	_	start_char=4843|end_char=4848
33	(	(	PUNCT	-LRB-	_	32	_	_	SpaceAfter=No|start_char=4849|end_char=4850
34	2016	2016	NUM	CD	NumForm=Digit|NumType=Card	33	_	_	SpaceAfter=No|start_char=4850|end_char=4854
35	)	)	PUNCT	-RRB-	_	34	_	_	start_char=4854|end_char=4855
36	.	.	PUNCT	.	_	35	_	_	start_char=4856|end_char=4857
37	in	in	ADP	IN	_	36	_	_	start_char=4858|end_char=4860
38	this	this	DET	DT	Number=Sing|PronType=Dem	37	_	_	start_char=4861|end_char=4865
39	article	article	NOUN	NN	Number=Sing	38	_	_	SpaceAfter=No|start_char=4866|end_char=4873
40	,	,	PUNCT	,	_	39	_	_	start_char=4873|end_char=4874
41	we	we	PRON	PRP	Case=Nom|Number=Plur|Person=1|PronType=Prs	40	_	_	start_char=4875|end_char=4877
42	will	will	AUX	MD	VerbForm=Fin	41	_	_	start_char=4878|end_char=4882
43	present	present	VERB	VB	VerbForm=Inf	42	_	_	start_char=4883|end_char=4890
44	the	the	DET	DT	Definite=Def|PronType=Art	43	_	_	start_char=4891|end_char=4894
45	mm	mm	NOUN	NN	Number=Sing	44	_	_	start_char=4895|end_char=4897
46	algorithm	algorithm	NOUN	NN	Number=Sing	45	_	_	start_char=4898|end_char=4907
47	framework	framework	NOUN	NN	Number=Sing	46	_	_	start_char=4908|end_char=4917
48	via	via	ADP	IN	_	47	_	_	start_char=4918|end_char=4921
49	applications	application	NOUN	NNS	Number=Plur	48	_	_	start_char=4922|end_char=4934
50	to	to	ADP	IN	_	49	_	_	start_char=4935|end_char=4937
51	three	three	NUM	CD	NumForm=Word|NumType=Card	50	_	_	start_char=4938|end_char=4943
52	examples	example	NOUN	NNS	Number=Plur	51	_	_	start_char=4944|end_char=4952
53	that	that	PRON	WDT	PronType=Rel	52	_	_	start_char=4953|end_char=4957
54	span	span	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	53	_	_	start_char=4958|end_char=4962
55	the	the	DET	DT	Definite=Def|PronType=Art	54	_	_	start_char=4963|end_char=4966
56	scope	scope	NOUN	NN	Number=Sing	55	_	_	start_char=4967|end_char=4972
57	of	of	ADP	IN	_	56	_	_	start_char=4973|end_char=4975
58	statistical	statistical	ADJ	JJ	Degree=Pos	57	_	_	start_char=4976|end_char=4987
59	estimation	estimation	NOUN	NN	Number=Sing	58	_	_	start_char=4988|end_char=4998
60	and	and	CCONJ	CC	_	59	_	_	start_char=4999|end_char=5002
61	machine	machine	NOUN	NN	Number=Sing	60	_	_	start_char=5003|end_char=5010
62	learning	learning	NOUN	NN	Number=Sing	61	_	_	start_char=5011|end_char=5019
63	problems	problem	NOUN	NNS	Number=Plur	62	_	_	SpaceAfter=No|start_char=5020|end_char=5028
64	:	:	PUNCT	:	_	63	_	_	start_char=5028|end_char=5029
65	gaussian	gaussian	ADJ	JJ	Degree=Pos	64	_	_	start_char=5030|end_char=5038
66	mixtures	mixture	NOUN	NNS	Number=Plur	65	_	_	start_char=5039|end_char=5047
67	of	of	ADP	IN	_	66	_	_	start_char=5048|end_char=5050
68	regressions	regression	NOUN	NNS	Number=Plur	67	_	_	start_char=5051|end_char=5062
69	(	(	PUNCT	-LRB-	_	68	_	_	SpaceAfter=No|start_char=5063|end_char=5064
70	gmr	gmr	NOUN	NN	Number=Sing	69	_	_	SpaceAfter=No|start_char=5064|end_char=5067
71	)	)	PUNCT	-RRB-	_	70	_	_	SpaceAfter=No|start_char=5067|end_char=5068
72	,	,	PUNCT	,	_	71	_	_	start_char=5068|end_char=5069
73	multinomiallogistic	multinomiallogistic	ADJ	JJ	Degree=Pos	72	_	_	start_char=5070|end_char=5089
74	regressions	regression	NOUN	NNS	Number=Plur	73	_	_	start_char=5090|end_char=5101
75	(	(	PUNCT	-LRB-	_	74	_	_	SpaceAfter=No|start_char=5102|end_char=5103
76	mlr	mlr	NOUN	NN	Number=Sing	75	_	_	SpaceAfter=No|start_char=5103|end_char=5106
77	)	)	PUNCT	-RRB-	_	76	_	_	SpaceAfter=No|start_char=5106|end_char=5107
78	,	,	PUNCT	,	_	77	_	_	start_char=5107|end_char=5108
79	and	and	CCONJ	CC	_	78	_	_	start_char=5109|end_char=5112
80	svm	svm	NOUN	NN	Number=Sing	79	_	_	start_char=5113|end_char=5116
81	estimations	estimation	NOUN	NNS	Number=Plur	80	_	_	SpaceAfter=No|start_char=5117|end_char=5128
82	.	.	PUNCT	.	_	81	_	_	start_char=5128|end_char=5129

# text = the three estimation prob-table 1 : mm algorithm applications and references.
# sent_id = 13
1	the	the	DET	DT	Definite=Def|PronType=Art	0	_	_	start_char=5130|end_char=5133
2	three	three	NUM	CD	NumForm=Word|NumType=Card	1	_	_	start_char=5134|end_char=5139
3	estimation	estimation	NOUN	NN	Number=Sing	2	_	_	start_char=5140|end_char=5150
4	prob	prob	NOUN	NN	Number=Sing	3	_	_	SpaceAfter=No|start_char=5151|end_char=5155
5	-	-	PUNCT	HYPH	_	4	_	_	SpaceAfter=No|start_char=5155|end_char=5156
6	table	table	NOUN	NN	Number=Sing	5	_	_	start_char=5156|end_char=5161
7	1	1	NUM	CD	NumForm=Digit|NumType=Card	6	_	_	start_char=5162|end_char=5163
8	:	:	PUNCT	:	_	7	_	_	start_char=5164|end_char=5165
9	mm	mm	NOUN	NN	Number=Sing	8	_	_	start_char=5166|end_char=5168
10	algorithm	algorithm	NOUN	NN	Number=Sing	9	_	_	start_char=5169|end_char=5178
11	applications	application	NOUN	NNS	Number=Plur	10	_	_	start_char=5179|end_char=5191
12	and	and	CCONJ	CC	_	11	_	_	start_char=5192|end_char=5195
13	references	reference	NOUN	NNS	Number=Plur	12	_	_	SpaceAfter=No|start_char=5196|end_char=5206
14	.	.	PUNCT	.	_	13	_	_	SpaceAfter=No|start_char=5206|end_char=5207

